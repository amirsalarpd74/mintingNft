{
  "abi": [],
  "allSourcePaths": {
    "0": "contracts/NftCollection.sol"
  },
  "ast": {
    "absolutePath": "contracts/NftCollection.sol",
    "exportedSymbols": {
      "NftCollection": [
        266
      ],
      "NftLibs": [
        100
      ]
    },
    "id": 267,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:0"
      },
      {
        "absolutePath": "contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 267,
        "sourceUnit": 388,
        "src": "59:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": null,
        "fullyImplemented": true,
        "id": 100,
        "linearizedBaseContracts": [
          100
        ],
        "name": "NftLibs",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "NftLibs.ImageInfo",
            "id": 6,
            "members": [
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "ipfsInfo",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 6,
                "src": "254:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "254:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "ImageInfo",
            "nodeType": "StructDefinition",
            "scope": 100,
            "src": "227:49:0",
            "visibility": "public"
          },
          {
            "canonicalName": "NftLibs.Price",
            "id": 9,
            "members": [
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "price",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 9,
                "src": "305:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "305:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Price",
            "nodeType": "StructDefinition",
            "scope": 100,
            "src": "282:40:0",
            "visibility": "public"
          },
          {
            "canonicalName": "NftLibs.NftInfo",
            "id": 22,
            "members": [
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "nftName",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22,
                "src": "353:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 10,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "353:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "nftProducer",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22,
                "src": "377:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 12,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "377:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "imageInfo",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22,
                "src": "406:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ImageInfo_$6_storage_ptr",
                  "typeString": "struct NftLibs.ImageInfo"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 14,
                  "name": "ImageInfo",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 6,
                  "src": "406:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ImageInfo_$6_storage_ptr",
                    "typeString": "struct NftLibs.ImageInfo"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "price",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22,
                "src": "435:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Price_$9_storage_ptr",
                  "typeString": "struct NftLibs.Price"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 16,
                  "name": "Price",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 9,
                  "src": "435:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Price_$9_storage_ptr",
                    "typeString": "struct NftLibs.Price"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "hasStarted",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22,
                "src": "456:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 18,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "456:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "publicEnabledShow",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22,
                "src": "481:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 20,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "481:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "NftInfo",
            "nodeType": "StructDefinition",
            "scope": 100,
            "src": "328:182:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "608:300:0",
              "statements": [
                {
                  "assignments": [
                    31
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31,
                      "mutability": "mutable",
                      "name": "tempEmptyNameStringTest",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 64,
                      "src": "618:36:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 30,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "618:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 36,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 34,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "663:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 33,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "657:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                        "typeString": "type(bytes storage pointer)"
                      },
                      "typeName": {
                        "id": 32,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "657:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "657:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "618:51:0"
                },
                {
                  "assignments": [
                    38
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38,
                      "mutability": "mutable",
                      "name": "tempEmptyImageStringTest",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 64,
                      "src": "680:37:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 37,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "680:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 43,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 41,
                        "name": "_ipfsInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "726:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "720:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                        "typeString": "type(bytes storage pointer)"
                      },
                      "typeName": {
                        "id": 39,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "720:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "720:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "680:56:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 53,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 48,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 45,
                                "name": "tempEmptyNameStringTest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "756:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 46,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "756:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 47,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "789:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "756:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 52,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 49,
                                "name": "tempEmptyImageStringTest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "811:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 50,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "811:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 51,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "845:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "811:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "756:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 54,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "866:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 57,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "886:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "878:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 55,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "878:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 58,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "878:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "866:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "756:132:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 44,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "748:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "748:141:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "748:141:0"
                },
                {
                  "id": 63,
                  "nodeType": "PlaceholderStatement",
                  "src": "900:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 65,
            "name": "hasMandotaryFields",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 65,
                  "src": "544:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 65,
                  "src": "565:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "565:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "_ipfsInfo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 65,
                  "src": "583:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "583:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "543:64:0"
            },
            "src": "516:392:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "1106:136:0",
              "statements": [
                {
                  "assignments": [
                    82
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 82,
                      "mutability": "mutable",
                      "name": "nftInfo",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 98,
                      "src": "1116:22:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NftInfo_$22_memory_ptr",
                        "typeString": "struct NftLibs.NftInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 81,
                        "name": "NftInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 22,
                        "src": "1116:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                          "typeString": "struct NftLibs.NftInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 95,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 84,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "1149:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 85,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "1156:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 87,
                            "name": "_ipfsInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71,
                            "src": "1176:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 86,
                          "name": "ImageInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "1166:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_ImageInfo_$6_storage_ptr_$",
                            "typeString": "type(struct NftLibs.ImageInfo storage pointer)"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1166:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ImageInfo_$6_memory_ptr",
                          "typeString": "struct NftLibs.ImageInfo memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 90,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1194:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 89,
                          "name": "Price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "1188:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Price_$9_storage_ptr_$",
                            "typeString": "type(struct NftLibs.Price storage pointer)"
                          }
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1188:8:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Price_$9_memory_ptr",
                          "typeString": "struct NftLibs.Price memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1198:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 93,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1205:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ImageInfo_$6_memory_ptr",
                          "typeString": "struct NftLibs.ImageInfo memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_Price_$9_memory_ptr",
                          "typeString": "struct NftLibs.Price memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 83,
                      "name": "NftInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1141:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_NftInfo_$22_storage_ptr_$",
                        "typeString": "type(struct NftLibs.NftInfo storage pointer)"
                      }
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1141:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$22_memory_ptr",
                      "typeString": "struct NftLibs.NftInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1116:95:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 96,
                    "name": "nftInfo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 82,
                    "src": "1228:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$22_memory_ptr",
                      "typeString": "struct NftLibs.NftInfo memory"
                    }
                  },
                  "functionReturnParameters": 80,
                  "id": 97,
                  "nodeType": "Return",
                  "src": "1221:14:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "019e08a0",
            "id": 99,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 74,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 67,
                    "src": "1040:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 75,
                    "name": "_address",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 69,
                    "src": "1047:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 76,
                    "name": "_ipfsInfo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 71,
                    "src": "1057:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 77,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 73,
                  "name": "hasMandotaryFields",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 65,
                  "src": "1021:18:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory,address,string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1021:46:0"
              }
            ],
            "name": "createNftInfo",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 99,
                  "src": "937:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "937:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 99,
                  "src": "958:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "958:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "_ipfsInfo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 99,
                  "src": "976:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "976:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "936:64:0"
            },
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 99,
                  "src": "1090:14:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NftInfo_$22_memory_ptr",
                    "typeString": "struct NftLibs.NftInfo"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 78,
                    "name": "NftInfo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 22,
                    "src": "1090:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                      "typeString": "struct NftLibs.NftInfo"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1089:16:0"
            },
            "scope": 100,
            "src": "914:328:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 267,
        "src": "104:1140:0"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 101,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 387,
              "src": "1272:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$387",
                "typeString": "contract Ownable"
              }
            },
            "id": 102,
            "nodeType": "InheritanceSpecifier",
            "src": "1272:7:0"
          }
        ],
        "contractDependencies": [
          387
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 266,
        "linearizedBaseContracts": [
          266,
          387
        ],
        "name": "NftCollection",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 107,
            "mutability": "mutable",
            "name": "AddressToNftInfos",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 266,
            "src": "1396:56:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct NftLibs.NftInfo[])"
            },
            "typeName": {
              "id": 106,
              "keyType": {
                "id": 103,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1405:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1396:38:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct NftLibs.NftInfo[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 104,
                  "name": "NftLibs.NftInfo",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 22,
                  "src": "1416:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                    "typeString": "struct NftLibs.NftInfo"
                  }
                },
                "id": 105,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1416:17:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage_ptr",
                  "typeString": "struct NftLibs.NftInfo[]"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 110,
            "mutability": "mutable",
            "name": "maxSupply",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 266,
            "src": "1523:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 108,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1523:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 109,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1542:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 113,
            "mutability": "mutable",
            "name": "numberOfMints",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 266,
            "src": "1585:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 111,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1585:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 112,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1608:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 116,
            "mutability": "mutable",
            "name": "gasPay",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 266,
            "src": "1616:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 114,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1616:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "302e30303031",
              "id": 115,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1630:12:0",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000_by_1",
                "typeString": "int_const 100000000000000"
              },
              "value": "0.0001"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 146,
              "nodeType": "Block",
              "src": "1741:172:0",
              "statements": [
                {
                  "assignments": [
                    128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 128,
                      "mutability": "mutable",
                      "name": "nftInfo",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 146,
                      "src": "1751:30:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NftInfo_$22_memory_ptr",
                        "typeString": "struct NftLibs.NftInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 127,
                        "name": "NftLibs.NftInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 22,
                        "src": "1751:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                          "typeString": "struct NftLibs.NftInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 135,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 131,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "1806:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 132,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "1813:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 133,
                        "name": "_ipfsInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "1823:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 129,
                        "name": "NftLibs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "1784:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NftLibs_$100_$",
                          "typeString": "type(library NftLibs)"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createNftInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 99,
                      "src": "1784:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$returns$_t_struct$_NftInfo_$22_memory_ptr_$",
                        "typeString": "function (string memory,address,string memory) returns (struct NftLibs.NftInfo memory)"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1784:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$22_memory_ptr",
                      "typeString": "struct NftLibs.NftInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1751:82:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 140,
                        "name": "nftInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 128,
                        "src": "1876:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NftInfo_$22_memory_ptr",
                          "typeString": "struct NftLibs.NftInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_NftInfo_$22_memory_ptr",
                          "typeString": "struct NftLibs.NftInfo memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 136,
                          "name": "AddressToNftInfos",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "1843:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct NftLibs.NftInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 138,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 137,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120,
                          "src": "1861:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1843:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage",
                          "typeString": "struct NftLibs.NftInfo storage ref[] storage ref"
                        }
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1843:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_NftInfo_$22_storage_$returns$__$",
                        "typeString": "function (struct NftLibs.NftInfo storage ref)"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1843:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "1843:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1894:12:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 143,
                      "name": "maxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "1894:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "1894:12:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "77eb17b4",
            "id": 147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 147,
                  "src": "1670:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1670:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 147,
                  "src": "1691:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1691:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "_ipfsInfo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 147,
                  "src": "1709:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1709:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1669:64:0"
            },
            "returnParameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1741:0:0"
            },
            "scope": 266,
            "src": "1649:264:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 168,
              "nodeType": "Block",
              "src": "1997:141:0",
              "statements": [
                {
                  "assignments": [
                    158
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 158,
                      "mutability": "mutable",
                      "name": "nftInfos",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 168,
                      "src": "2007:34:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage_ptr",
                        "typeString": "struct NftLibs.NftInfo[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 156,
                          "name": "NftLibs.NftInfo",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 22,
                          "src": "2007:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                            "typeString": "struct NftLibs.NftInfo"
                          }
                        },
                        "id": 157,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2007:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage_ptr",
                          "typeString": "struct NftLibs.NftInfo[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 163,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 159,
                      "name": "AddressToNftInfos",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "2044:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct NftLibs.NftInfo storage ref[] storage ref)"
                      }
                    },
                    "id": 162,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 160,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2062:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2062:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2044:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage",
                      "typeString": "struct NftLibs.NftInfo storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2007:66:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 164,
                      "name": "nftInfos",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158,
                      "src": "2120:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage_ptr",
                        "typeString": "struct NftLibs.NftInfo storage ref[] storage pointer"
                      }
                    },
                    "id": 166,
                    "indexExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2129:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2120:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$22_storage",
                      "typeString": "struct NftLibs.NftInfo storage ref"
                    }
                  },
                  "functionReturnParameters": 153,
                  "id": 167,
                  "nodeType": "Return",
                  "src": "2113:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 169,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 150,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 149,
                  "name": "hasMinted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 183,
                  "src": "1954:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1954:9:0"
              }
            ],
            "name": "getNftInfo",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1938:2:0"
            },
            "returnParameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 152,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 169,
                  "src": "1972:23:0",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                    "typeString": "struct NftLibs.NftInfo"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 151,
                    "name": "NftLibs.NftInfo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 22,
                    "src": "1972:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                      "typeString": "struct NftLibs.NftInfo"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1971:25:0"
            },
            "scope": 266,
            "src": "1919:219:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 182,
              "nodeType": "Block",
              "src": "2165:77:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 172,
                              "name": "AddressToNftInfos",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "2183:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct NftLibs.NftInfo storage ref[] storage ref)"
                              }
                            },
                            "id": 175,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 173,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2201:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2201:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2183:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage",
                              "typeString": "struct NftLibs.NftInfo storage ref[] storage ref"
                            }
                          },
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2183:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2222:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2183:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 171,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2175:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2175:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "2175:49:0"
                },
                {
                  "id": 181,
                  "nodeType": "PlaceholderStatement",
                  "src": "2234:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 183,
            "name": "hasMinted",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2162:2:0"
            },
            "src": "2144:98:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 209,
              "nodeType": "Block",
              "src": "2287:115:0",
              "statements": [
                {
                  "assignments": [
                    189
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 189,
                      "mutability": "mutable",
                      "name": "_owner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 209,
                      "src": "2297:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 188,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2297:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 198,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 194,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 304,
                              "src": "2338:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2338:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2330:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint160_$",
                            "typeString": "type(uint160)"
                          },
                          "typeName": {
                            "id": 192,
                            "name": "uint160",
                            "nodeType": "ElementaryTypeName",
                            "src": "2330:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2330:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      ],
                      "id": 191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2322:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 190,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2322:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2322:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2297:50:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 204,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2381:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NftCollection_$266",
                                "typeString": "contract NftCollection"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_NftCollection_$266",
                                "typeString": "contract NftCollection"
                              }
                            ],
                            "id": 203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2373:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 202,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2373:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2373:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2373:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 199,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "2357:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2357:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2357:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "2357:38:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3ccfd60b",
            "id": 210,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 186,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 185,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 314,
                  "src": "2277:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2277:9:0"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2265:2:0"
            },
            "returnParameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2287:0:0"
            },
            "scope": 266,
            "src": "2248:154:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 222,
              "nodeType": "Block",
              "src": "2457:192:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 216,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2549:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2549:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 218,
                          "name": "gasPay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "2562:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2549:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 215,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2541:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2541:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 221,
                  "nodeType": "ExpressionStatement",
                  "src": "2541:28:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6871ee40",
            "id": 223,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 213,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 212,
                  "name": "hasMinted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 183,
                  "src": "2445:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2445:11:0"
              }
            ],
            "name": "safeMint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2425:2:0"
            },
            "returnParameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2457:0:0"
            },
            "scope": 266,
            "src": "2408:241:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 238,
              "nodeType": "Block",
              "src": "2751:98:0",
              "statements": [
                {
                  "assignments": [
                    231
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 231,
                      "mutability": "mutable",
                      "name": "nftInfo",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 238,
                      "src": "2761:31:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                        "typeString": "struct NftLibs.NftInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 230,
                        "name": "NftLibs.NftInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 22,
                        "src": "2761:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                          "typeString": "struct NftLibs.NftInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 234,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 232,
                      "name": "getNftInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 169,
                      "src": "2795:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_NftInfo_$22_storage_ptr_$",
                        "typeString": "function () view returns (struct NftLibs.NftInfo storage pointer)"
                      }
                    },
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2795:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                      "typeString": "struct NftLibs.NftInfo storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2761:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 235,
                      "name": "nftInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 231,
                      "src": "2824:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                        "typeString": "struct NftLibs.NftInfo storage pointer"
                      }
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "hasStarted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 19,
                    "src": "2824:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 227,
                  "id": 237,
                  "nodeType": "Return",
                  "src": "2817:25:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0b64251e",
            "id": 239,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSaleStarted",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2721:2:0"
            },
            "returnParameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 239,
                  "src": "2745:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2745:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2744:6:0"
            },
            "scope": 266,
            "src": "2698:151:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 254,
              "nodeType": "Block",
              "src": "2975:105:0",
              "statements": [
                {
                  "assignments": [
                    247
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 247,
                      "mutability": "mutable",
                      "name": "nftInfo",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 254,
                      "src": "2985:31:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                        "typeString": "struct NftLibs.NftInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 246,
                        "name": "NftLibs.NftInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 22,
                        "src": "2985:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                          "typeString": "struct NftLibs.NftInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 250,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 248,
                      "name": "getNftInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 169,
                      "src": "3019:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_NftInfo_$22_storage_ptr_$",
                        "typeString": "function () view returns (struct NftLibs.NftInfo storage pointer)"
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3019:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                      "typeString": "struct NftLibs.NftInfo storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2985:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 251,
                      "name": "nftInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 247,
                      "src": "3048:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                        "typeString": "struct NftLibs.NftInfo storage pointer"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "publicEnabledShow",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21,
                    "src": "3048:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 243,
                  "id": 253,
                  "nodeType": "Return",
                  "src": "3041:32:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8680d87e",
            "id": 255,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOpenToPublic",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2945:2:0"
            },
            "returnParameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 242,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 255,
                  "src": "2969:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2969:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2968:6:0"
            },
            "scope": 266,
            "src": "2921:159:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 264,
              "nodeType": "Block",
              "src": "3179:28:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3196:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 261,
                  "id": 263,
                  "nodeType": "Return",
                  "src": "3189:11:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3acde386",
            "id": 265,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOnWhiteList",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 265,
                  "src": "3143:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3143:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3142:9:0"
            },
            "returnParameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 260,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 265,
                  "src": "3173:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3173:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3172:6:0"
            },
            "scope": 266,
            "src": "3119:88:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 267,
        "src": "1246:1963:0"
      }
    ],
    "src": "0:3209:0"
  },
  "bytecode": "610381610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063019e08a01461003a575b600080fd5b81801561004657600080fd5b5061005a6100553660046101fa565b610070565b60405161006791906102c5565b60405180910390f35b610078610115565b83518490849084908390829015801590610093575060008151115b80156100a757506001600160a01b03841615155b6100b057600080fd5b6100b8610115565b50506040805160c0810182529889526001600160a01b039097166020808a01919091528751808201895296875288880196909652505084519384019094525050600080825260608401919091526080830181905260a08301525090565b6040805160c0810182526060815260006020820152908101610135610156565b8152602001610142610169565b815260006020820181905260409091015290565b6040518060200160405280606081525090565b6040518060200160405280600081525090565b600082601f83011261018c578081fd5b813567ffffffffffffffff808211156101a3578283fd5b604051601f8301601f1916810160200182811182821017156101c3578485fd5b6040528281529250828483016020018610156101de57600080fd5b8260208601602083013760006020848301015250505092915050565b60008060006060848603121561020e578283fd5b833567ffffffffffffffff80821115610225578485fd5b6102318783880161017c565b9450602086013591506001600160a01b038216821461024e578384fd5b90925060408501359080821115610263578283fd5b506102708682870161017c565b9150509250925092565b60008151808452815b8181101561029f57602081850181015186830182015201610283565b818111156102b05782602083870101525b50601f01601f19169290920160200192915050565b600060208252825160c060208401526102e160e084018261027a565b6020858101516001600160a01b0316604086810191909152860151858303601f190160608701525181835291925061031b9083018261027a565b91505060608401515160808401526080840151151560a084015260a0840151151560c0840152809150509291505056fea2646970667358221220c0b8b8715176595dd41f777fb84b7706af389240382e542f380c86f39b4f8a9364736f6c634300060c0033",
  "bytecodeSha1": "b764e268c9e063f58c857bd39314db49064bda7e",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "NftLibs",
  "coverageMap": {
    "branches": {
      "0": {
        "NftLibs.createNftInfo": {
          "0": [
            756,
            790,
            false
          ],
          "1": [
            866,
            888,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {}
    }
  },
  "dependencies": [],
  "deployedBytecode": "73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063019e08a01461003a575b600080fd5b81801561004657600080fd5b5061005a6100553660046101fa565b610070565b60405161006791906102c5565b60405180910390f35b610078610115565b83518490849084908390829015801590610093575060008151115b80156100a757506001600160a01b03841615155b6100b057600080fd5b6100b8610115565b50506040805160c0810182529889526001600160a01b039097166020808a01919091528751808201895296875288880196909652505084519384019094525050600080825260608401919091526080830181905260a08301525090565b6040805160c0810182526060815260006020820152908101610135610156565b8152602001610142610169565b815260006020820181905260409091015290565b6040518060200160405280606081525090565b6040518060200160405280600081525090565b600082601f83011261018c578081fd5b813567ffffffffffffffff808211156101a3578283fd5b604051601f8301601f1916810160200182811182821017156101c3578485fd5b6040528281529250828483016020018610156101de57600080fd5b8260208601602083013760006020848301015250505092915050565b60008060006060848603121561020e578283fd5b833567ffffffffffffffff80821115610225578485fd5b6102318783880161017c565b9450602086013591506001600160a01b038216821461024e578384fd5b90925060408501359080821115610263578283fd5b506102708682870161017c565b9150509250925092565b60008151808452815b8181101561029f57602081850181015186830182015201610283565b818111156102b05782602083870101525b50601f01601f19169290920160200192915050565b600060208252825160c060208401526102e160e084018261027a565b6020858101516001600160a01b0316604086810191909152860151858303601f190160608701525181835291925061031b9083018261027a565b91505060608401515160808401526080840151151560a084015260a0840151151560c0840152809150509291505056fea2646970667358221220c0b8b8715176595dd41f777fb84b7706af389240382e542f380c86f39b4f8a9364736f6c634300060c0033",
  "deployedSourceMap": "104:1140:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;914:328;;;;;;;;;;-1:-1:-1;914:328:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1090:14;;:::i;:::-;756:30;;1040:5;;1047:8;;1057:9;;1040:5;;1057:9;;756:34;;;;:90;;;845:1;811:24;:31;:35;756:90;:132;;;;-1:-1:-1;;;;;;866:22:0;;;;756:132;748:141;;;;;;1116:22:::1;;:::i;:::-;-1:-1:-1::0;;1141:70:0::1;::::0;;::::1;::::0;::::1;::::0;;;;;-1:-1:-1;;;;;1141:70:0;;::::1;;::::0;;::::1;::::0;;;;1166:20;;;;::::1;::::0;;;;;1141:70;;;;;;;-1:-1:-1;;1188:8:0;;;;::::1;::::0;;;-1:-1:-1;;;1188:8:0;;;1141:70;;;;;;;;;;;;;;;;;-1:-1:-1;1141:70:0;914:328::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;143:442::-;;245:3;238:4;230:6;226:17;222:27;212:2;;-1:-1;;253:12;212:2;300:6;287:20;5126:18;;5118:6;5115:30;5112:2;;;-1:-1;;5148:12;5112:2;4781;4775:9;5221;5202:17;;-1:-1;;5198:33;4807:17;;5289:4;4807:17;4867:34;;;4903:22;;;4864:62;4861:2;;;-1:-1;;4929:12;4861:2;4781;4948:22;393:21;;;313:74;-1:-1;313:74;493:16;;;5289:4;493:16;490:25;-1:-1;487:2;;;528:1;;518:12;487:2;6089:6;5289:4;435:6;431:17;5289:4;469:5;465:16;6066:30;6145:1;5289:4;6136:6;469:5;6127:16;;6120:27;;;;205:380;;;;:::o;593:703::-;;;;751:2;739:9;730:7;726:23;722:32;719:2;;;-1:-1;;757:12;719:2;815:17;802:31;853:18;;845:6;842:30;839:2;;;-1:-1;;875:12;839:2;905:63;960:7;951:6;940:9;936:22;905:63;:::i;:::-;895:73;-1:-1;1005:2;1044:22;;72:20;;-1:-1;;;;;;5862:54;;6602:35;;6592:2;;-1:-1;;6641:12;6592:2;1013:63;;-1:-1;1141:2;1126:18;;1113:32;;1154:30;;;1151:2;;;-1:-1;;1187:12;1151:2;;1217:63;1272:7;1263:6;1252:9;1248:22;1217:63;:::i;:::-;1207:73;;;713:583;;;;;:::o;1530:343::-;;1673:5;5399:12;5554:6;5549:3;5542:19;-1:-1;6234:101;6248:6;6245:1;6242:13;6234:101;;;5591:4;6315:11;;;;;6309:18;6296:11;;;;;6289:39;6263:10;6234:101;;;6350:6;6347:1;6344:13;6341:2;;;-1:-1;5591:4;6406:6;5586:3;6397:16;;6390:27;6341:2;-1:-1;5221:9;6506:14;-1:-1;;6502:28;1829:39;;;;5591:4;1829:39;;1620:253;-1:-1;;1620:253::o;4334:378::-;;4515:2;4536:17;4529:47;2656:16;2650:23;2581:4;4515:2;4504:9;4500:18;2686:38;2739:81;2572:14;4504:9;2572:14;2801:12;2739:81;:::i;:::-;4515:2;2901:16;;;2895:23;-1:-1;;;;;5862:54;2980:14;;;;1372:37;;;;3068:16;;3062:23;3121:14;;;-1:-1;;3121:14;3105;;;3098:38;2156:23;2192:38;;;2731:89;;-1:-1;2245:81;;2077:14;;2156:23;2245:81;:::i;:::-;2348:11;;;3105:14;3339:5;3335:16;3329:23;4088;3454:14;4504:9;3454:14;4285:37;3454:14;3547:5;3543:16;3537:23;5774:13;5767:21;3616:14;4504:9;3616:14;1484:34;3616:14;3716:5;3712:16;3706:23;5774:13;5767:21;2581:4;4504:9;3785:14;1484:34;4582:120;;;;4486:226;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    104,
    1244
  ],
  "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19E08A0 EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A PUSH2 0x55 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67 SWAP2 SWAP1 PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x78 PUSH2 0x115 JUMP JUMPDEST DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP5 SWAP1 DUP4 SWAP1 DUP3 SWAP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x93 JUMPI POP PUSH1 0x0 DUP2 MLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0xA7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO JUMPDEST PUSH2 0xB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB8 PUSH2 0x115 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE SWAP9 DUP10 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND PUSH1 0x20 DUP1 DUP11 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP8 MLOAD DUP1 DUP3 ADD DUP10 MSTORE SWAP7 DUP8 MSTORE DUP9 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE POP POP DUP5 MLOAD SWAP4 DUP5 ADD SWAP1 SWAP5 MSTORE POP POP PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x60 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD PUSH2 0x135 PUSH2 0x156 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 PUSH2 0x169 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A3 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD DUP3 DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1C3 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE SWAP3 POP DUP3 DUP5 DUP4 ADD PUSH1 0x20 ADD DUP7 LT ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20E JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x225 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x231 DUP8 DUP4 DUP9 ADD PUSH2 0x17C JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 EQ PUSH2 0x24E JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x263 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x270 DUP7 DUP3 DUP8 ADD PUSH2 0x17C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x29F JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x283 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2B0 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD PUSH1 0xC0 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2E1 PUSH1 0xE0 DUP5 ADD DUP3 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x20 DUP6 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP7 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 ADD MLOAD DUP6 DUP4 SUB PUSH1 0x1F NOT ADD PUSH1 0x60 DUP8 ADD MSTORE MLOAD DUP2 DUP4 MSTORE SWAP2 SWAP3 POP PUSH2 0x31B SWAP1 DUP4 ADD DUP3 PUSH2 0x27A JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP5 ADD MLOAD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xA0 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0xB8 0xB8 PUSH18 0x5176595DD41F777FB84B7706AF389240382E SLOAD 0x2F CODESIZE 0xC DUP7 RETURN SWAP12 0x4F DUP11 SWAP4 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        104,
        1244
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0x0"
    },
    "21": {
      "fn": null,
      "offset": [
        104,
        1244
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        104,
        1244
      ],
      "op": "EQ",
      "path": "0"
    },
    "23": {
      "fn": null,
      "offset": [
        104,
        1244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "25": {
      "fn": null,
      "offset": [
        104,
        1244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "27": {
      "fn": null,
      "offset": [
        104,
        1244
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "28": {
      "fn": null,
      "offset": [
        104,
        1244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "30": {
      "fn": null,
      "offset": [
        104,
        1244
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        104,
        1244
      ],
      "op": "LT",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        104,
        1244
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35"
    },
    "35": {
      "fn": null,
      "offset": [
        104,
        1244
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "36": {
      "fn": null,
      "offset": [
        104,
        1244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "38": {
      "fn": null,
      "offset": [
        104,
        1244
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        104,
        1244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "41": {
      "fn": null,
      "offset": [
        104,
        1244
      ],
      "op": "SHR",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        104,
        1244
      ],
      "op": "DUP1",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        104,
        1244
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x19E08A0"
    },
    "48": {
      "fn": null,
      "offset": [
        104,
        1244
      ],
      "op": "EQ",
      "path": "0"
    },
    "49": {
      "fn": null,
      "offset": [
        104,
        1244
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A"
    },
    "52": {
      "fn": null,
      "offset": [
        104,
        1244
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        104,
        1244
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        104,
        1244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "56": {
      "fn": null,
      "offset": [
        104,
        1244
      ],
      "op": "DUP1",
      "path": "0"
    },
    "57": {
      "first_revert": true,
      "fn": null,
      "offset": [
        104,
        1244
      ],
      "op": "REVERT",
      "path": "0"
    },
    "58": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "59": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "DUP2",
      "path": "0"
    },
    "60": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "DUP1",
      "path": "0"
    },
    "61": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "62": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46"
    },
    "65": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "66": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "68": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "DUP1",
      "path": "0"
    },
    "69": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "REVERT",
      "path": "0"
    },
    "70": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "71": {
      "op": "POP"
    },
    "72": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A"
    },
    "75": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x55"
    },
    "78": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "79": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "81": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FA"
    },
    "84": {
      "fn": "NftLibs.createNftInfo",
      "jump": "i",
      "offset": [
        914,
        1242
      ],
      "op": "JUMP",
      "path": "0"
    },
    "85": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "86": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70"
    },
    "89": {
      "fn": "NftLibs.createNftInfo",
      "jump": "i",
      "offset": [
        914,
        1242
      ],
      "op": "JUMP",
      "path": "0"
    },
    "90": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "91": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "93": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "94": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x67"
    },
    "97": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "98": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "99": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C5"
    },
    "102": {
      "fn": "NftLibs.createNftInfo",
      "jump": "i",
      "offset": [
        914,
        1242
      ],
      "op": "JUMP",
      "path": "0"
    },
    "103": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "104": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "106": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "107": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "DUP1",
      "path": "0"
    },
    "108": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "109": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "SUB",
      "path": "0"
    },
    "110": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "111": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "RETURN",
      "path": "0"
    },
    "112": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        914,
        1242
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "113": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1090,
        1104
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x78"
    },
    "116": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1090,
        1104
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x115"
    },
    "119": {
      "fn": "NftLibs.createNftInfo",
      "jump": "i",
      "offset": [
        1090,
        1104
      ],
      "op": "JUMP",
      "path": "0"
    },
    "120": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1090,
        1104
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "121": {
      "offset": [
        756,
        786
      ],
      "op": "DUP4",
      "path": "0"
    },
    "122": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        756,
        786
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "123": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1040,
        1045
      ],
      "op": "DUP5",
      "path": "0"
    },
    "124": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1040,
        1045
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "125": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1047,
        1055
      ],
      "op": "DUP5",
      "path": "0"
    },
    "126": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1047,
        1055
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "127": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1057,
        1066
      ],
      "op": "DUP5",
      "path": "0"
    },
    "128": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1057,
        1066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "129": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1040,
        1045
      ],
      "op": "DUP4",
      "path": "0"
    },
    "130": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1040,
        1045
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "131": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1057,
        1066
      ],
      "op": "DUP3",
      "path": "0"
    },
    "132": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1057,
        1066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "133": {
      "offset": [
        756,
        790
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "134": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        756,
        790
      ],
      "op": "DUP1",
      "path": "0"
    },
    "135": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        756,
        790
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "136": {
      "branch": 0,
      "fn": "NftLibs.createNftInfo",
      "offset": [
        756,
        790
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "137": {
      "offset": [
        756,
        846
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x93"
    },
    "140": {
      "branch": 0,
      "offset": [
        756,
        846
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "141": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        756,
        846
      ],
      "op": "POP",
      "path": "0"
    },
    "142": {
      "offset": [
        845,
        846
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "144": {
      "offset": [
        811,
        835
      ],
      "op": "DUP2",
      "path": "0"
    },
    "145": {
      "offset": [
        811,
        842
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "146": {
      "offset": [
        811,
        846
      ],
      "op": "GT",
      "path": "0"
    },
    "147": {
      "offset": [
        756,
        846
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "148": {
      "offset": [
        756,
        888
      ],
      "op": "DUP1",
      "path": "0"
    },
    "149": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        756,
        888
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "150": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        756,
        888
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA7"
    },
    "153": {
      "offset": [
        756,
        888
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "154": {
      "op": "POP"
    },
    "155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "161": {
      "op": "SHL"
    },
    "162": {
      "op": "SUB"
    },
    "163": {
      "offset": [
        866,
        888
      ],
      "op": "DUP5",
      "path": "0"
    },
    "164": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        866,
        888
      ],
      "op": "AND",
      "path": "0"
    },
    "165": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        866,
        888
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "166": {
      "branch": 1,
      "fn": "NftLibs.createNftInfo",
      "offset": [
        866,
        888
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "167": {
      "offset": [
        756,
        888
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "168": {
      "offset": [
        748,
        889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0"
    },
    "171": {
      "branch": 1,
      "offset": [
        748,
        889
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "172": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        748,
        889
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "174": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        748,
        889
      ],
      "op": "DUP1",
      "path": "0"
    },
    "175": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        748,
        889
      ],
      "op": "REVERT",
      "path": "0"
    },
    "176": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        748,
        889
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "177": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1116,
        1138
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8"
    },
    "180": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1116,
        1138
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x115"
    },
    "183": {
      "fn": "NftLibs.createNftInfo",
      "jump": "i",
      "offset": [
        1116,
        1138
      ],
      "op": "JUMP",
      "path": "0"
    },
    "184": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1116,
        1138
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "185": {
      "op": "POP"
    },
    "186": {
      "op": "POP"
    },
    "187": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "189": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "DUP1",
      "path": "0"
    },
    "190": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "191": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "193": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "DUP2",
      "path": "0"
    },
    "194": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "ADD",
      "path": "0"
    },
    "195": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "DUP3",
      "path": "0"
    },
    "196": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "197": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "SWAP9",
      "path": "0"
    },
    "198": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "DUP10",
      "path": "0"
    },
    "199": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "206": {
      "op": "SHL"
    },
    "207": {
      "op": "SUB"
    },
    "208": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "209": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "210": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "AND",
      "path": "0"
    },
    "211": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "213": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "DUP1",
      "path": "0"
    },
    "214": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "DUP11",
      "path": "0"
    },
    "215": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "ADD",
      "path": "0"
    },
    "216": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "217": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "218": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "219": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "220": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1166,
        1186
      ],
      "op": "DUP8",
      "path": "0"
    },
    "221": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1166,
        1186
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "222": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1166,
        1186
      ],
      "op": "DUP1",
      "path": "0"
    },
    "223": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1166,
        1186
      ],
      "op": "DUP3",
      "path": "0"
    },
    "224": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1166,
        1186
      ],
      "op": "ADD",
      "path": "0"
    },
    "225": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1166,
        1186
      ],
      "op": "DUP10",
      "path": "0"
    },
    "226": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1166,
        1186
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "227": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1166,
        1186
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "228": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1166,
        1186
      ],
      "op": "DUP8",
      "path": "0"
    },
    "229": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1166,
        1186
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "230": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "DUP9",
      "path": "0"
    },
    "231": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "DUP9",
      "path": "0"
    },
    "232": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "ADD",
      "path": "0"
    },
    "233": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "234": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "235": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "236": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "237": {
      "op": "POP"
    },
    "238": {
      "op": "POP"
    },
    "239": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1188,
        1196
      ],
      "op": "DUP5",
      "path": "0"
    },
    "240": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1188,
        1196
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "241": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1188,
        1196
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "242": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1188,
        1196
      ],
      "op": "DUP5",
      "path": "0"
    },
    "243": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1188,
        1196
      ],
      "op": "ADD",
      "path": "0"
    },
    "244": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1188,
        1196
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "245": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1188,
        1196
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "246": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1188,
        1196
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "247": {
      "op": "POP"
    },
    "248": {
      "op": "POP"
    },
    "249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "251": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1188,
        1196
      ],
      "op": "DUP1",
      "path": "0"
    },
    "252": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1188,
        1196
      ],
      "op": "DUP3",
      "path": "0"
    },
    "253": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1188,
        1196
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "254": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "256": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "DUP5",
      "path": "0"
    },
    "257": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "ADD",
      "path": "0"
    },
    "258": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "259": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "260": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "261": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "262": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "264": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "DUP4",
      "path": "0"
    },
    "265": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "ADD",
      "path": "0"
    },
    "266": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "DUP2",
      "path": "0"
    },
    "267": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "268": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "269": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "271": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "DUP4",
      "path": "0"
    },
    "272": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "ADD",
      "path": "0"
    },
    "273": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "274": {
      "op": "POP"
    },
    "275": {
      "fn": "NftLibs.createNftInfo",
      "offset": [
        1141,
        1211
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "276": {
      "fn": "NftLibs.createNftInfo",
      "jump": "o",
      "offset": [
        914,
        1242
      ],
      "op": "JUMP",
      "path": "0"
    },
    "277": {
      "op": "JUMPDEST"
    },
    "278": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "280": {
      "op": "DUP1"
    },
    "281": {
      "op": "MLOAD"
    },
    "282": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "284": {
      "op": "DUP2"
    },
    "285": {
      "op": "ADD"
    },
    "286": {
      "op": "DUP3"
    },
    "287": {
      "op": "MSTORE"
    },
    "288": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "290": {
      "op": "DUP2"
    },
    "291": {
      "op": "MSTORE"
    },
    "292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "294": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "296": {
      "op": "DUP3"
    },
    "297": {
      "op": "ADD"
    },
    "298": {
      "op": "MSTORE"
    },
    "299": {
      "op": "SWAP1"
    },
    "300": {
      "op": "DUP2"
    },
    "301": {
      "op": "ADD"
    },
    "302": {
      "op": "PUSH2",
      "value": "0x135"
    },
    "305": {
      "op": "PUSH2",
      "value": "0x156"
    },
    "308": {
      "op": "JUMP"
    },
    "309": {
      "op": "JUMPDEST"
    },
    "310": {
      "op": "DUP2"
    },
    "311": {
      "op": "MSTORE"
    },
    "312": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "314": {
      "op": "ADD"
    },
    "315": {
      "op": "PUSH2",
      "value": "0x142"
    },
    "318": {
      "op": "PUSH2",
      "value": "0x169"
    },
    "321": {
      "op": "JUMP"
    },
    "322": {
      "op": "JUMPDEST"
    },
    "323": {
      "op": "DUP2"
    },
    "324": {
      "op": "MSTORE"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "329": {
      "op": "DUP3"
    },
    "330": {
      "op": "ADD"
    },
    "331": {
      "op": "DUP2"
    },
    "332": {
      "op": "SWAP1"
    },
    "333": {
      "op": "MSTORE"
    },
    "334": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "336": {
      "op": "SWAP1"
    },
    "337": {
      "op": "SWAP2"
    },
    "338": {
      "op": "ADD"
    },
    "339": {
      "op": "MSTORE"
    },
    "340": {
      "op": "SWAP1"
    },
    "341": {
      "op": "JUMP"
    },
    "342": {
      "op": "JUMPDEST"
    },
    "343": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "345": {
      "op": "MLOAD"
    },
    "346": {
      "op": "DUP1"
    },
    "347": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "349": {
      "op": "ADD"
    },
    "350": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "352": {
      "op": "MSTORE"
    },
    "353": {
      "op": "DUP1"
    },
    "354": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "356": {
      "op": "DUP2"
    },
    "357": {
      "op": "MSTORE"
    },
    "358": {
      "op": "POP"
    },
    "359": {
      "op": "SWAP1"
    },
    "360": {
      "op": "JUMP"
    },
    "361": {
      "op": "JUMPDEST"
    },
    "362": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "364": {
      "op": "MLOAD"
    },
    "365": {
      "op": "DUP1"
    },
    "366": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "368": {
      "op": "ADD"
    },
    "369": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "371": {
      "op": "MSTORE"
    },
    "372": {
      "op": "DUP1"
    },
    "373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "375": {
      "op": "DUP2"
    },
    "376": {
      "op": "MSTORE"
    },
    "377": {
      "op": "POP"
    },
    "378": {
      "op": "SWAP1"
    },
    "379": {
      "op": "JUMP"
    },
    "380": {
      "op": "JUMPDEST"
    },
    "381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "383": {
      "op": "DUP3"
    },
    "384": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "386": {
      "op": "DUP4"
    },
    "387": {
      "op": "ADD"
    },
    "388": {
      "op": "SLT"
    },
    "389": {
      "op": "PUSH2",
      "value": "0x18C"
    },
    "392": {
      "op": "JUMPI"
    },
    "393": {
      "op": "DUP1"
    },
    "394": {
      "op": "DUP2"
    },
    "395": {
      "op": "REVERT"
    },
    "396": {
      "op": "JUMPDEST"
    },
    "397": {
      "op": "DUP2"
    },
    "398": {
      "op": "CALLDATALOAD"
    },
    "399": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "408": {
      "op": "DUP1"
    },
    "409": {
      "op": "DUP3"
    },
    "410": {
      "op": "GT"
    },
    "411": {
      "op": "ISZERO"
    },
    "412": {
      "op": "PUSH2",
      "value": "0x1A3"
    },
    "415": {
      "op": "JUMPI"
    },
    "416": {
      "op": "DUP3"
    },
    "417": {
      "op": "DUP4"
    },
    "418": {
      "op": "REVERT"
    },
    "419": {
      "op": "JUMPDEST"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "422": {
      "op": "MLOAD"
    },
    "423": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "425": {
      "op": "DUP4"
    },
    "426": {
      "op": "ADD"
    },
    "427": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "429": {
      "op": "NOT"
    },
    "430": {
      "op": "AND"
    },
    "431": {
      "op": "DUP2"
    },
    "432": {
      "op": "ADD"
    },
    "433": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "435": {
      "op": "ADD"
    },
    "436": {
      "op": "DUP3"
    },
    "437": {
      "op": "DUP2"
    },
    "438": {
      "op": "GT"
    },
    "439": {
      "op": "DUP3"
    },
    "440": {
      "op": "DUP3"
    },
    "441": {
      "op": "LT"
    },
    "442": {
      "op": "OR"
    },
    "443": {
      "op": "ISZERO"
    },
    "444": {
      "op": "PUSH2",
      "value": "0x1C3"
    },
    "447": {
      "op": "JUMPI"
    },
    "448": {
      "op": "DUP5"
    },
    "449": {
      "op": "DUP6"
    },
    "450": {
      "op": "REVERT"
    },
    "451": {
      "op": "JUMPDEST"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "454": {
      "op": "MSTORE"
    },
    "455": {
      "op": "DUP3"
    },
    "456": {
      "op": "DUP2"
    },
    "457": {
      "op": "MSTORE"
    },
    "458": {
      "op": "SWAP3"
    },
    "459": {
      "op": "POP"
    },
    "460": {
      "op": "DUP3"
    },
    "461": {
      "op": "DUP5"
    },
    "462": {
      "op": "DUP4"
    },
    "463": {
      "op": "ADD"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "466": {
      "op": "ADD"
    },
    "467": {
      "op": "DUP7"
    },
    "468": {
      "op": "LT"
    },
    "469": {
      "op": "ISZERO"
    },
    "470": {
      "op": "PUSH2",
      "value": "0x1DE"
    },
    "473": {
      "op": "JUMPI"
    },
    "474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "476": {
      "op": "DUP1"
    },
    "477": {
      "op": "REVERT"
    },
    "478": {
      "op": "JUMPDEST"
    },
    "479": {
      "op": "DUP3"
    },
    "480": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "482": {
      "op": "DUP7"
    },
    "483": {
      "op": "ADD"
    },
    "484": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "486": {
      "op": "DUP4"
    },
    "487": {
      "op": "ADD"
    },
    "488": {
      "op": "CALLDATACOPY"
    },
    "489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "493": {
      "op": "DUP5"
    },
    "494": {
      "op": "DUP4"
    },
    "495": {
      "op": "ADD"
    },
    "496": {
      "op": "ADD"
    },
    "497": {
      "op": "MSTORE"
    },
    "498": {
      "op": "POP"
    },
    "499": {
      "op": "POP"
    },
    "500": {
      "op": "POP"
    },
    "501": {
      "op": "SWAP3"
    },
    "502": {
      "op": "SWAP2"
    },
    "503": {
      "op": "POP"
    },
    "504": {
      "op": "POP"
    },
    "505": {
      "op": "JUMP"
    },
    "506": {
      "op": "JUMPDEST"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "509": {
      "op": "DUP1"
    },
    "510": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "512": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "514": {
      "op": "DUP5"
    },
    "515": {
      "op": "DUP7"
    },
    "516": {
      "op": "SUB"
    },
    "517": {
      "op": "SLT"
    },
    "518": {
      "op": "ISZERO"
    },
    "519": {
      "op": "PUSH2",
      "value": "0x20E"
    },
    "522": {
      "op": "JUMPI"
    },
    "523": {
      "op": "DUP3"
    },
    "524": {
      "op": "DUP4"
    },
    "525": {
      "op": "REVERT"
    },
    "526": {
      "op": "JUMPDEST"
    },
    "527": {
      "op": "DUP4"
    },
    "528": {
      "op": "CALLDATALOAD"
    },
    "529": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "538": {
      "op": "DUP1"
    },
    "539": {
      "op": "DUP3"
    },
    "540": {
      "op": "GT"
    },
    "541": {
      "op": "ISZERO"
    },
    "542": {
      "op": "PUSH2",
      "value": "0x225"
    },
    "545": {
      "op": "JUMPI"
    },
    "546": {
      "op": "DUP5"
    },
    "547": {
      "op": "DUP6"
    },
    "548": {
      "op": "REVERT"
    },
    "549": {
      "op": "JUMPDEST"
    },
    "550": {
      "op": "PUSH2",
      "value": "0x231"
    },
    "553": {
      "op": "DUP8"
    },
    "554": {
      "op": "DUP4"
    },
    "555": {
      "op": "DUP9"
    },
    "556": {
      "op": "ADD"
    },
    "557": {
      "op": "PUSH2",
      "value": "0x17C"
    },
    "560": {
      "op": "JUMP"
    },
    "561": {
      "op": "JUMPDEST"
    },
    "562": {
      "op": "SWAP5"
    },
    "563": {
      "op": "POP"
    },
    "564": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "566": {
      "op": "DUP7"
    },
    "567": {
      "op": "ADD"
    },
    "568": {
      "op": "CALLDATALOAD"
    },
    "569": {
      "op": "SWAP2"
    },
    "570": {
      "op": "POP"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "575": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "577": {
      "op": "SHL"
    },
    "578": {
      "op": "SUB"
    },
    "579": {
      "op": "DUP3"
    },
    "580": {
      "op": "AND"
    },
    "581": {
      "op": "DUP3"
    },
    "582": {
      "op": "EQ"
    },
    "583": {
      "op": "PUSH2",
      "value": "0x24E"
    },
    "586": {
      "op": "JUMPI"
    },
    "587": {
      "op": "DUP4"
    },
    "588": {
      "op": "DUP5"
    },
    "589": {
      "op": "REVERT"
    },
    "590": {
      "op": "JUMPDEST"
    },
    "591": {
      "op": "SWAP1"
    },
    "592": {
      "op": "SWAP3"
    },
    "593": {
      "op": "POP"
    },
    "594": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "596": {
      "op": "DUP6"
    },
    "597": {
      "op": "ADD"
    },
    "598": {
      "op": "CALLDATALOAD"
    },
    "599": {
      "op": "SWAP1"
    },
    "600": {
      "op": "DUP1"
    },
    "601": {
      "op": "DUP3"
    },
    "602": {
      "op": "GT"
    },
    "603": {
      "op": "ISZERO"
    },
    "604": {
      "op": "PUSH2",
      "value": "0x263"
    },
    "607": {
      "op": "JUMPI"
    },
    "608": {
      "op": "DUP3"
    },
    "609": {
      "op": "DUP4"
    },
    "610": {
      "op": "REVERT"
    },
    "611": {
      "op": "JUMPDEST"
    },
    "612": {
      "op": "POP"
    },
    "613": {
      "op": "PUSH2",
      "value": "0x270"
    },
    "616": {
      "op": "DUP7"
    },
    "617": {
      "op": "DUP3"
    },
    "618": {
      "op": "DUP8"
    },
    "619": {
      "op": "ADD"
    },
    "620": {
      "op": "PUSH2",
      "value": "0x17C"
    },
    "623": {
      "op": "JUMP"
    },
    "624": {
      "op": "JUMPDEST"
    },
    "625": {
      "op": "SWAP2"
    },
    "626": {
      "op": "POP"
    },
    "627": {
      "op": "POP"
    },
    "628": {
      "op": "SWAP3"
    },
    "629": {
      "op": "POP"
    },
    "630": {
      "op": "SWAP3"
    },
    "631": {
      "op": "POP"
    },
    "632": {
      "op": "SWAP3"
    },
    "633": {
      "op": "JUMP"
    },
    "634": {
      "op": "JUMPDEST"
    },
    "635": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "637": {
      "op": "DUP2"
    },
    "638": {
      "op": "MLOAD"
    },
    "639": {
      "op": "DUP1"
    },
    "640": {
      "op": "DUP5"
    },
    "641": {
      "op": "MSTORE"
    },
    "642": {
      "op": "DUP2"
    },
    "643": {
      "op": "JUMPDEST"
    },
    "644": {
      "op": "DUP2"
    },
    "645": {
      "op": "DUP2"
    },
    "646": {
      "op": "LT"
    },
    "647": {
      "op": "ISZERO"
    },
    "648": {
      "op": "PUSH2",
      "value": "0x29F"
    },
    "651": {
      "op": "JUMPI"
    },
    "652": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "654": {
      "op": "DUP2"
    },
    "655": {
      "op": "DUP6"
    },
    "656": {
      "op": "ADD"
    },
    "657": {
      "op": "DUP2"
    },
    "658": {
      "op": "ADD"
    },
    "659": {
      "op": "MLOAD"
    },
    "660": {
      "op": "DUP7"
    },
    "661": {
      "op": "DUP4"
    },
    "662": {
      "op": "ADD"
    },
    "663": {
      "op": "DUP3"
    },
    "664": {
      "op": "ADD"
    },
    "665": {
      "op": "MSTORE"
    },
    "666": {
      "op": "ADD"
    },
    "667": {
      "op": "PUSH2",
      "value": "0x283"
    },
    "670": {
      "op": "JUMP"
    },
    "671": {
      "op": "JUMPDEST"
    },
    "672": {
      "op": "DUP2"
    },
    "673": {
      "op": "DUP2"
    },
    "674": {
      "op": "GT"
    },
    "675": {
      "op": "ISZERO"
    },
    "676": {
      "op": "PUSH2",
      "value": "0x2B0"
    },
    "679": {
      "op": "JUMPI"
    },
    "680": {
      "op": "DUP3"
    },
    "681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "683": {
      "op": "DUP4"
    },
    "684": {
      "op": "DUP8"
    },
    "685": {
      "op": "ADD"
    },
    "686": {
      "op": "ADD"
    },
    "687": {
      "op": "MSTORE"
    },
    "688": {
      "op": "JUMPDEST"
    },
    "689": {
      "op": "POP"
    },
    "690": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "692": {
      "op": "ADD"
    },
    "693": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "695": {
      "op": "NOT"
    },
    "696": {
      "op": "AND"
    },
    "697": {
      "op": "SWAP3"
    },
    "698": {
      "op": "SWAP1"
    },
    "699": {
      "op": "SWAP3"
    },
    "700": {
      "op": "ADD"
    },
    "701": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "703": {
      "op": "ADD"
    },
    "704": {
      "op": "SWAP3"
    },
    "705": {
      "op": "SWAP2"
    },
    "706": {
      "op": "POP"
    },
    "707": {
      "op": "POP"
    },
    "708": {
      "op": "JUMP"
    },
    "709": {
      "op": "JUMPDEST"
    },
    "710": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "712": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "714": {
      "op": "DUP3"
    },
    "715": {
      "op": "MSTORE"
    },
    "716": {
      "op": "DUP3"
    },
    "717": {
      "op": "MLOAD"
    },
    "718": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "720": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "722": {
      "op": "DUP5"
    },
    "723": {
      "op": "ADD"
    },
    "724": {
      "op": "MSTORE"
    },
    "725": {
      "op": "PUSH2",
      "value": "0x2E1"
    },
    "728": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "730": {
      "op": "DUP5"
    },
    "731": {
      "op": "ADD"
    },
    "732": {
      "op": "DUP3"
    },
    "733": {
      "op": "PUSH2",
      "value": "0x27A"
    },
    "736": {
      "op": "JUMP"
    },
    "737": {
      "op": "JUMPDEST"
    },
    "738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "740": {
      "op": "DUP6"
    },
    "741": {
      "op": "DUP2"
    },
    "742": {
      "op": "ADD"
    },
    "743": {
      "op": "MLOAD"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "748": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "750": {
      "op": "SHL"
    },
    "751": {
      "op": "SUB"
    },
    "752": {
      "op": "AND"
    },
    "753": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "755": {
      "op": "DUP7"
    },
    "756": {
      "op": "DUP2"
    },
    "757": {
      "op": "ADD"
    },
    "758": {
      "op": "SWAP2"
    },
    "759": {
      "op": "SWAP1"
    },
    "760": {
      "op": "SWAP2"
    },
    "761": {
      "op": "MSTORE"
    },
    "762": {
      "op": "DUP7"
    },
    "763": {
      "op": "ADD"
    },
    "764": {
      "op": "MLOAD"
    },
    "765": {
      "op": "DUP6"
    },
    "766": {
      "op": "DUP4"
    },
    "767": {
      "op": "SUB"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "770": {
      "op": "NOT"
    },
    "771": {
      "op": "ADD"
    },
    "772": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "774": {
      "op": "DUP8"
    },
    "775": {
      "op": "ADD"
    },
    "776": {
      "op": "MSTORE"
    },
    "777": {
      "op": "MLOAD"
    },
    "778": {
      "op": "DUP2"
    },
    "779": {
      "op": "DUP4"
    },
    "780": {
      "op": "MSTORE"
    },
    "781": {
      "op": "SWAP2"
    },
    "782": {
      "op": "SWAP3"
    },
    "783": {
      "op": "POP"
    },
    "784": {
      "op": "PUSH2",
      "value": "0x31B"
    },
    "787": {
      "op": "SWAP1"
    },
    "788": {
      "op": "DUP4"
    },
    "789": {
      "op": "ADD"
    },
    "790": {
      "op": "DUP3"
    },
    "791": {
      "op": "PUSH2",
      "value": "0x27A"
    },
    "794": {
      "op": "JUMP"
    },
    "795": {
      "op": "JUMPDEST"
    },
    "796": {
      "op": "SWAP2"
    },
    "797": {
      "op": "POP"
    },
    "798": {
      "op": "POP"
    },
    "799": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "801": {
      "op": "DUP5"
    },
    "802": {
      "op": "ADD"
    },
    "803": {
      "op": "MLOAD"
    },
    "804": {
      "op": "MLOAD"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "807": {
      "op": "DUP5"
    },
    "808": {
      "op": "ADD"
    },
    "809": {
      "op": "MSTORE"
    },
    "810": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "812": {
      "op": "DUP5"
    },
    "813": {
      "op": "ADD"
    },
    "814": {
      "op": "MLOAD"
    },
    "815": {
      "op": "ISZERO"
    },
    "816": {
      "op": "ISZERO"
    },
    "817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "819": {
      "op": "DUP5"
    },
    "820": {
      "op": "ADD"
    },
    "821": {
      "op": "MSTORE"
    },
    "822": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "824": {
      "op": "DUP5"
    },
    "825": {
      "op": "ADD"
    },
    "826": {
      "op": "MLOAD"
    },
    "827": {
      "op": "ISZERO"
    },
    "828": {
      "op": "ISZERO"
    },
    "829": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "831": {
      "op": "DUP5"
    },
    "832": {
      "op": "ADD"
    },
    "833": {
      "op": "MSTORE"
    },
    "834": {
      "op": "DUP1"
    },
    "835": {
      "op": "SWAP2"
    },
    "836": {
      "op": "POP"
    },
    "837": {
      "op": "POP"
    },
    "838": {
      "op": "SWAP3"
    },
    "839": {
      "op": "SWAP2"
    },
    "840": {
      "op": "POP"
    },
    "841": {
      "op": "POP"
    },
    "842": {
      "op": "JUMP"
    }
  },
  "sha1": "44b8f83630eab2d267e53b0cce929fb65c8fc094",
  "source": "pragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"./Ownable.sol\";\n\n// NFT type define \nlibrary NftLibs {\n    /*\n     *  Store a reference to an image, stored in IPFS, in an ethereum smart contract.\n     */\n    struct ImageInfo {\n        string ipfsInfo;\n    }\n\n    struct Price {\n        uint price;\n    }\n\n    struct NftInfo {\n        string nftName;\n        address nftProducer;\n        ImageInfo imageInfo;\n        Price price;\n        bool hasStarted;\n        bool publicEnabledShow;\n    }\n\n    modifier hasMandotaryFields(string memory _name, address _address, string memory _ipfsInfo) {\n        bytes memory tempEmptyNameStringTest = bytes(_name); \n        bytes memory tempEmptyImageStringTest = bytes(_ipfsInfo); \n\n        require(tempEmptyNameStringTest.length > 0 \n                && tempEmptyImageStringTest.length > 0\n                && _address != address(0));\n\n        _;\n    }\n\n    function createNftInfo(string memory _name, address _address, string memory _ipfsInfo) \n            public hasMandotaryFields(_name, _address, _ipfsInfo) \n            returns (NftInfo memory) {\n        NftInfo memory nftInfo = NftInfo(_name, _address, ImageInfo(_ipfsInfo), Price(0), false, false);\n        return nftInfo;\n    }\n}\n\ncontract NftCollection is Ownable {\n    /*\n     * Store all NFT for each address has.\n     * Stores the number of tokens each address has\n     */\n    mapping (address => NftLibs.NftInfo[]) AddressToNftInfos;\n\n    // Stores the maximum number of tokens that you wanna sell.\n    uint32 maxSupply = 0;\n\n    // Stores the remaining mints.\n    uint32 numberOfMints = 0;\n\n    uint gasPay = 0.0001 ether;\n\n    function createToken(string memory _name, address _address, string memory _ipfsInfo) public {\n        NftLibs.NftInfo memory nftInfo = NftLibs.createNftInfo(_name, _address, _ipfsInfo);\n        AddressToNftInfos[_address].push(nftInfo);\n        maxSupply ++;\n    }\n\n    function getNftInfo() private view hasMinted returns(NftLibs.NftInfo storage) {\n        NftLibs.NftInfo[] storage nftInfos = AddressToNftInfos[msg.sender];\n\n        // TODO: Fix bellow.\n        return nftInfos[0];\n    }\n\n    modifier hasMinted() {\n        require(AddressToNftInfos[msg.sender].length > 0);\n        _;\n    }\n\n    function withdraw() external onlyOwner {\n        address payable _owner = address(uint160(owner()));\n        _owner.transfer(address(this).balance);\n    }\n\n    function safeMint() external payable hasMinted() {\n        // Check to make sure gasPay ether was sent to the function call:\n        require(msg.value == gasPay);\n\n        // After get GAS could convert token to Non-Fungible token :)))\n    }\n\n    // Display status if sale has started.\n    function getSaleStarted() public view returns (bool) {\n        NftLibs.NftInfo storage nftInfo = getNftInfo();\n        return nftInfo.hasStarted;\n    }\n\n    // Once public enabled show it and enable mint button for all\n    function getOpenToPublic() public view returns (bool) {\n        NftLibs.NftInfo storage nftInfo = getNftInfo();\n        return nftInfo.publicEnabledShow;\n    }\n\n    // TODO: Implement function.\n    function getOnWhiteList(address) public pure returns (bool) {\n        return true;\n    }\n}",
  "sourceMap": "104:1140:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/NftCollection.sol",
  "type": "library"
}