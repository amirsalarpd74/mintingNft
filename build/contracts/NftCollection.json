{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_ipfsInfo",
          "type": "string"
        }
      ],
      "name": "createToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getOnWhiteList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOpenToPublic",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRemainingMints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSaleStarted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "safeMint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/NftCollection.sol",
    "1": "contracts/Ownable.sol"
  },
  "ast": {
    "absolutePath": "contracts/NftCollection.sol",
    "exportedSymbols": {
      "NftCollection": [
        277
      ],
      "NftLibs": [
        100
      ]
    },
    "id": 278,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:0"
      },
      {
        "absolutePath": "contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 278,
        "sourceUnit": 399,
        "src": "59:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": null,
        "fullyImplemented": true,
        "id": 100,
        "linearizedBaseContracts": [
          100
        ],
        "name": "NftLibs",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "NftLibs.ImageInfo",
            "id": 6,
            "members": [
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "ipfsInfo",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 6,
                "src": "254:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "254:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "ImageInfo",
            "nodeType": "StructDefinition",
            "scope": 100,
            "src": "227:49:0",
            "visibility": "public"
          },
          {
            "canonicalName": "NftLibs.Price",
            "id": 9,
            "members": [
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "price",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 9,
                "src": "305:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "305:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Price",
            "nodeType": "StructDefinition",
            "scope": 100,
            "src": "282:40:0",
            "visibility": "public"
          },
          {
            "canonicalName": "NftLibs.NftInfo",
            "id": 22,
            "members": [
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "nftName",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22,
                "src": "353:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 10,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "353:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "nftProducer",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22,
                "src": "377:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 12,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "377:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "imageInfo",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22,
                "src": "406:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ImageInfo_$6_storage_ptr",
                  "typeString": "struct NftLibs.ImageInfo"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 14,
                  "name": "ImageInfo",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 6,
                  "src": "406:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ImageInfo_$6_storage_ptr",
                    "typeString": "struct NftLibs.ImageInfo"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "price",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22,
                "src": "435:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Price_$9_storage_ptr",
                  "typeString": "struct NftLibs.Price"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 16,
                  "name": "Price",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 9,
                  "src": "435:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Price_$9_storage_ptr",
                    "typeString": "struct NftLibs.Price"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "hasStarted",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22,
                "src": "456:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 18,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "456:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "publicEnabledShow",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22,
                "src": "481:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 20,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "481:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "NftInfo",
            "nodeType": "StructDefinition",
            "scope": 100,
            "src": "328:182:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "608:300:0",
              "statements": [
                {
                  "assignments": [
                    31
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31,
                      "mutability": "mutable",
                      "name": "tempEmptyNameStringTest",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 64,
                      "src": "618:36:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 30,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "618:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 36,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 34,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "663:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 33,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "657:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                        "typeString": "type(bytes storage pointer)"
                      },
                      "typeName": {
                        "id": 32,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "657:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "657:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "618:51:0"
                },
                {
                  "assignments": [
                    38
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38,
                      "mutability": "mutable",
                      "name": "tempEmptyImageStringTest",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 64,
                      "src": "680:37:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 37,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "680:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 43,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 41,
                        "name": "_ipfsInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "726:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "720:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                        "typeString": "type(bytes storage pointer)"
                      },
                      "typeName": {
                        "id": 39,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "720:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "720:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "680:56:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 53,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 48,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 45,
                                "name": "tempEmptyNameStringTest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "756:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 46,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "756:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 47,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "789:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "756:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 52,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 49,
                                "name": "tempEmptyImageStringTest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "811:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 50,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "811:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 51,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "845:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "811:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "756:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 54,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "866:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 57,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "886:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "878:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 55,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "878:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 58,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "878:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "866:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "756:132:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 44,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "748:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "748:141:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "748:141:0"
                },
                {
                  "id": 63,
                  "nodeType": "PlaceholderStatement",
                  "src": "900:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 65,
            "name": "hasMandotaryFields",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 65,
                  "src": "544:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 65,
                  "src": "565:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "565:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "_ipfsInfo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 65,
                  "src": "583:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "583:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "543:64:0"
            },
            "src": "516:392:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "1106:136:0",
              "statements": [
                {
                  "assignments": [
                    82
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 82,
                      "mutability": "mutable",
                      "name": "nftInfo",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 98,
                      "src": "1116:22:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NftInfo_$22_memory_ptr",
                        "typeString": "struct NftLibs.NftInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 81,
                        "name": "NftInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 22,
                        "src": "1116:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                          "typeString": "struct NftLibs.NftInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 95,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 84,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "1149:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 85,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "1156:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 87,
                            "name": "_ipfsInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71,
                            "src": "1176:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 86,
                          "name": "ImageInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "1166:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_ImageInfo_$6_storage_ptr_$",
                            "typeString": "type(struct NftLibs.ImageInfo storage pointer)"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1166:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ImageInfo_$6_memory_ptr",
                          "typeString": "struct NftLibs.ImageInfo memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 90,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1194:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 89,
                          "name": "Price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "1188:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Price_$9_storage_ptr_$",
                            "typeString": "type(struct NftLibs.Price storage pointer)"
                          }
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1188:8:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Price_$9_memory_ptr",
                          "typeString": "struct NftLibs.Price memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1198:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 93,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1205:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ImageInfo_$6_memory_ptr",
                          "typeString": "struct NftLibs.ImageInfo memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_Price_$9_memory_ptr",
                          "typeString": "struct NftLibs.Price memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 83,
                      "name": "NftInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1141:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_NftInfo_$22_storage_ptr_$",
                        "typeString": "type(struct NftLibs.NftInfo storage pointer)"
                      }
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1141:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$22_memory_ptr",
                      "typeString": "struct NftLibs.NftInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1116:95:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 96,
                    "name": "nftInfo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 82,
                    "src": "1228:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$22_memory_ptr",
                      "typeString": "struct NftLibs.NftInfo memory"
                    }
                  },
                  "functionReturnParameters": 80,
                  "id": 97,
                  "nodeType": "Return",
                  "src": "1221:14:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "019e08a0",
            "id": 99,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 74,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 67,
                    "src": "1040:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 75,
                    "name": "_address",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 69,
                    "src": "1047:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 76,
                    "name": "_ipfsInfo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 71,
                    "src": "1057:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 77,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 73,
                  "name": "hasMandotaryFields",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 65,
                  "src": "1021:18:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory,address,string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1021:46:0"
              }
            ],
            "name": "createNftInfo",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 99,
                  "src": "937:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "937:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 99,
                  "src": "958:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "958:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "_ipfsInfo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 99,
                  "src": "976:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "976:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "936:64:0"
            },
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 99,
                  "src": "1090:14:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NftInfo_$22_memory_ptr",
                    "typeString": "struct NftLibs.NftInfo"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 78,
                    "name": "NftInfo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 22,
                    "src": "1090:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                      "typeString": "struct NftLibs.NftInfo"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1089:16:0"
            },
            "scope": 100,
            "src": "914:328:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 278,
        "src": "104:1140:0"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 101,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 398,
              "src": "1272:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$398",
                "typeString": "contract Ownable"
              }
            },
            "id": 102,
            "nodeType": "InheritanceSpecifier",
            "src": "1272:7:0"
          }
        ],
        "contractDependencies": [
          398
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 277,
        "linearizedBaseContracts": [
          277,
          398
        ],
        "name": "NftCollection",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 107,
            "mutability": "mutable",
            "name": "AddressToNftInfos",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 277,
            "src": "1396:56:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct NftLibs.NftInfo[])"
            },
            "typeName": {
              "id": 106,
              "keyType": {
                "id": 103,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1405:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1396:38:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct NftLibs.NftInfo[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 104,
                  "name": "NftLibs.NftInfo",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 22,
                  "src": "1416:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                    "typeString": "struct NftLibs.NftInfo"
                  }
                },
                "id": 105,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1416:17:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage_ptr",
                  "typeString": "struct NftLibs.NftInfo[]"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 110,
            "mutability": "mutable",
            "name": "maxSupply",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 277,
            "src": "1523:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 108,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1523:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 109,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1542:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 113,
            "mutability": "mutable",
            "name": "numberOfMints",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 277,
            "src": "1585:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 111,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1585:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 112,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1608:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 116,
            "mutability": "mutable",
            "name": "gasPay",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 277,
            "src": "1616:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 114,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1616:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "302e303030303031",
              "id": 115,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1630:14:0",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000_by_1",
                "typeString": "int_const 1000000000000"
              },
              "value": "0.000001"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 146,
              "nodeType": "Block",
              "src": "1767:172:0",
              "statements": [
                {
                  "assignments": [
                    128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 128,
                      "mutability": "mutable",
                      "name": "nftInfo",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 146,
                      "src": "1777:30:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NftInfo_$22_memory_ptr",
                        "typeString": "struct NftLibs.NftInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 127,
                        "name": "NftLibs.NftInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 22,
                        "src": "1777:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                          "typeString": "struct NftLibs.NftInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 135,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 131,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "1832:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 132,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "1839:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 133,
                        "name": "_ipfsInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "1849:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 129,
                        "name": "NftLibs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "1810:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NftLibs_$100_$",
                          "typeString": "type(library NftLibs)"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createNftInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 99,
                      "src": "1810:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$returns$_t_struct$_NftInfo_$22_memory_ptr_$",
                        "typeString": "function (string memory,address,string memory) returns (struct NftLibs.NftInfo memory)"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1810:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$22_memory_ptr",
                      "typeString": "struct NftLibs.NftInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1777:82:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 140,
                        "name": "nftInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 128,
                        "src": "1902:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NftInfo_$22_memory_ptr",
                          "typeString": "struct NftLibs.NftInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_NftInfo_$22_memory_ptr",
                          "typeString": "struct NftLibs.NftInfo memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 136,
                          "name": "AddressToNftInfos",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "1869:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct NftLibs.NftInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 138,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 137,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120,
                          "src": "1887:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1869:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage",
                          "typeString": "struct NftLibs.NftInfo storage ref[] storage ref"
                        }
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1869:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_NftInfo_$22_storage_$returns$__$",
                        "typeString": "function (struct NftLibs.NftInfo storage ref)"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1869:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "1869:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1920:12:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 143,
                      "name": "maxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "1920:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "1920:12:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "77eb17b4",
            "id": 147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 147,
                  "src": "1696:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1696:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 147,
                  "src": "1717:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1717:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "_ipfsInfo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 147,
                  "src": "1735:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1735:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1695:64:0"
            },
            "returnParameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1767:0:0"
            },
            "scope": 277,
            "src": "1675:264:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "1995:33:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 152,
                    "name": "maxSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 110,
                    "src": "2012:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 151,
                  "id": 153,
                  "nodeType": "Return",
                  "src": "2005:16:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4c0f38c2",
            "id": 155,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMaxSupply",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1966:2:0"
            },
            "returnParameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 150,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 155,
                  "src": "1989:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1989:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1988:6:0"
            },
            "scope": 277,
            "src": "1945:83:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 164,
              "nodeType": "Block",
              "src": "2089:49:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 160,
                      "name": "maxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "2106:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 161,
                      "name": "numberOfMints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "2118:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2106:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 159,
                  "id": 163,
                  "nodeType": "Return",
                  "src": "2099:32:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "fd02c239",
            "id": 165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRemainingMints",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2060:2:0"
            },
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 165,
                  "src": "2083:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2083:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2082:6:0"
            },
            "scope": 277,
            "src": "2034:104:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "2240:98:0",
              "statements": [
                {
                  "assignments": [
                    173
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 173,
                      "mutability": "mutable",
                      "name": "nftInfo",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 180,
                      "src": "2250:31:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                        "typeString": "struct NftLibs.NftInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 172,
                        "name": "NftLibs.NftInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 22,
                        "src": "2250:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                          "typeString": "struct NftLibs.NftInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 176,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 174,
                      "name": "getNftInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 262,
                      "src": "2284:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_NftInfo_$22_storage_ptr_$",
                        "typeString": "function () view returns (struct NftLibs.NftInfo storage pointer)"
                      }
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2284:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                      "typeString": "struct NftLibs.NftInfo storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2250:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 177,
                      "name": "nftInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 173,
                      "src": "2313:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                        "typeString": "struct NftLibs.NftInfo storage pointer"
                      }
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "hasStarted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 19,
                    "src": "2313:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 169,
                  "id": 179,
                  "nodeType": "Return",
                  "src": "2306:25:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0b64251e",
            "id": 181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSaleStarted",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2210:2:0"
            },
            "returnParameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 181,
                  "src": "2234:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2234:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2233:6:0"
            },
            "scope": 277,
            "src": "2187:151:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 196,
              "nodeType": "Block",
              "src": "2464:105:0",
              "statements": [
                {
                  "assignments": [
                    189
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 189,
                      "mutability": "mutable",
                      "name": "nftInfo",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 196,
                      "src": "2474:31:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                        "typeString": "struct NftLibs.NftInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 188,
                        "name": "NftLibs.NftInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 22,
                        "src": "2474:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                          "typeString": "struct NftLibs.NftInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 192,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 190,
                      "name": "getNftInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 262,
                      "src": "2508:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_NftInfo_$22_storage_ptr_$",
                        "typeString": "function () view returns (struct NftLibs.NftInfo storage pointer)"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2508:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                      "typeString": "struct NftLibs.NftInfo storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2474:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 193,
                      "name": "nftInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 189,
                      "src": "2537:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                        "typeString": "struct NftLibs.NftInfo storage pointer"
                      }
                    },
                    "id": 194,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "publicEnabledShow",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21,
                    "src": "2537:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 185,
                  "id": 195,
                  "nodeType": "Return",
                  "src": "2530:32:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8680d87e",
            "id": 197,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOpenToPublic",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2434:2:0"
            },
            "returnParameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 184,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 197,
                  "src": "2458:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 183,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2458:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2457:6:0"
            },
            "scope": 277,
            "src": "2410:159:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 206,
              "nodeType": "Block",
              "src": "2668:28:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2685:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 203,
                  "id": 205,
                  "nodeType": "Return",
                  "src": "2678:11:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3acde386",
            "id": 207,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOnWhiteList",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 207,
                  "src": "2632:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2632:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2631:9:0"
            },
            "returnParameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 202,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 207,
                  "src": "2662:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2662:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2661:6:0"
            },
            "scope": 277,
            "src": "2608:88:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 239,
              "nodeType": "Block",
              "src": "2749:312:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 213,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2841:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2841:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 215,
                          "name": "gasPay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "2854:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2841:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 212,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2833:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2833:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "2833:28:0"
                },
                {
                  "assignments": [
                    220
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 220,
                      "mutability": "mutable",
                      "name": "_owner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 239,
                      "src": "2944:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 219,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2944:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 229,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 225,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "2985:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2985:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2977:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint160_$",
                            "typeString": "type(uint160)"
                          },
                          "typeName": {
                            "id": 223,
                            "name": "uint160",
                            "nodeType": "ElementaryTypeName",
                            "src": "2977:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2977:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      ],
                      "id": 222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2969:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 221,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2969:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2969:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2944:50:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 233,
                        "name": "gasPay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "3020:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 230,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "3004:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3004:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3004:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "3004:23:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3038:16:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 236,
                      "name": "numberOfMints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "3038:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "3038:16:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6871ee40",
            "id": 240,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 210,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 209,
                  "name": "hasMinted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 276,
                  "src": "2739:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2739:9:0"
              }
            ],
            "name": "safeMint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2719:2:0"
            },
            "returnParameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2749:0:0"
            },
            "scope": 277,
            "src": "2702:359:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 261,
              "nodeType": "Block",
              "src": "3170:141:0",
              "statements": [
                {
                  "assignments": [
                    251
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 251,
                      "mutability": "mutable",
                      "name": "nftInfos",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 261,
                      "src": "3180:34:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage_ptr",
                        "typeString": "struct NftLibs.NftInfo[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 249,
                          "name": "NftLibs.NftInfo",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 22,
                          "src": "3180:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                            "typeString": "struct NftLibs.NftInfo"
                          }
                        },
                        "id": 250,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3180:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage_ptr",
                          "typeString": "struct NftLibs.NftInfo[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 256,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 252,
                      "name": "AddressToNftInfos",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "3217:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct NftLibs.NftInfo storage ref[] storage ref)"
                      }
                    },
                    "id": 255,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 253,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3235:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3235:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3217:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage",
                      "typeString": "struct NftLibs.NftInfo storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3180:66:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 257,
                      "name": "nftInfos",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 251,
                      "src": "3293:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage_ptr",
                        "typeString": "struct NftLibs.NftInfo storage ref[] storage pointer"
                      }
                    },
                    "id": 259,
                    "indexExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3302:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3293:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$22_storage",
                      "typeString": "struct NftLibs.NftInfo storage ref"
                    }
                  },
                  "functionReturnParameters": 246,
                  "id": 260,
                  "nodeType": "Return",
                  "src": "3286:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 262,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 243,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 242,
                  "name": "hasMinted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 276,
                  "src": "3127:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3127:9:0"
              }
            ],
            "name": "getNftInfo",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3111:2:0"
            },
            "returnParameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 245,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 262,
                  "src": "3145:23:0",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                    "typeString": "struct NftLibs.NftInfo"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 244,
                    "name": "NftLibs.NftInfo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 22,
                    "src": "3145:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                      "typeString": "struct NftLibs.NftInfo"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3144:25:0"
            },
            "scope": 277,
            "src": "3092:219:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 275,
              "nodeType": "Block",
              "src": "3338:77:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 265,
                              "name": "AddressToNftInfos",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "3356:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct NftLibs.NftInfo storage ref[] storage ref)"
                              }
                            },
                            "id": 268,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 266,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3374:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3374:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3356:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage",
                              "typeString": "struct NftLibs.NftInfo storage ref[] storage ref"
                            }
                          },
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3356:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3395:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3356:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3348:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3348:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 273,
                  "nodeType": "ExpressionStatement",
                  "src": "3348:49:0"
                },
                {
                  "id": 274,
                  "nodeType": "PlaceholderStatement",
                  "src": "3407:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 276,
            "name": "hasMinted",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3335:2:0"
            },
            "src": "3317:98:0",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 278,
        "src": "1246:2172:0"
      }
    ],
    "src": "0:3418:0"
  },
  "bytecode": "6080604052600280546001600160401b031916905564e8d4a5100060035534801561002957600080fd5b50600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3610a92806100826000396000f3fe60806040526004361061009c5760003560e01c806377eb17b41161006457806377eb17b41461012d5780638680d87e1461014d5780638da5cb5b146101625780638f32d59b14610184578063f2fde38b14610199578063fd02c239146101b95761009c565b80630b64251e146100a15780633acde386146100cc5780634c0f38c2146100ec5780636871ee401461010e578063715018a614610118575b600080fd5b3480156100ad57600080fd5b506100b66101ce565b6040516100c3919061097a565b60405180910390f35b3480156100d857600080fd5b506100b66100e73660046107cc565b6101e6565b3480156100f857600080fd5b506101016101ec565b6040516100c391906109c3565b6101166101f8565b005b34801561012457600080fd5b50610116610295565b34801561013957600080fd5b506101166101483660046107ef565b6102f0565b34801561015957600080fd5b506100b6610476565b34801561016e57600080fd5b50610177610493565b6040516100c39190610966565b34801561019057600080fd5b506100b66104a2565b3480156101a557600080fd5b506101166101b43660046107cc565b6104b3565b3480156101c557600080fd5b506101016104d0565b6000806101d96104ed565b6004015460ff1691505090565b50600190565b60025463ffffffff1690565b3360009081526001602052604090205461021157600080fd5b60035434101561022057600080fd5b600061022a610493565b6003546040519192506001600160a01b0383169181156108fc0291906000818181858888f19350505050158015610265573d6000803e3d6000fd5b505060028054600163ffffffff640100000000808404821692909201160267ffffffff0000000019909116179055565b61029d6104a2565b6102a657600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6102f86105a3565b604051620cf04560e51b815273__NftLibs_______________________________9063019e08a09061033290879087908790600401610985565b60006040518083038186803b15801561034a57600080fd5b505af415801561035e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103869190810190610864565b6001600160a01b03841660009081526001602081815260408320805492830181558352918290208351805194955085946005909302909101926103ce928492909101906105e4565b506020828101516001830180546001600160a01b0319166001600160a01b039092169190911790556040830151805180519192600285019261041392849201906105e4565b505050606082015151600382015560808201516004909101805460a09093015115156101000261ff001992151560ff19909416939093179190911691909117905550506002805463ffffffff8082166001011663ffffffff199091161790555050565b6000806104816104ed565b60040154610100900460ff1692915050565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b6104bb6104a2565b6104c457600080fd5b6104cd81610535565b50565b60025463ffffffff64010000000082048116918116919091031690565b3360009081526001602052604081205461050657600080fd5b33600090815260016020526040812080549091829161052157fe5b906000526020600020906005020191505090565b6001600160a01b03811661054857600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160c08101825260608152600060208201529081016105c3610662565b81526020016105d0610675565b815260006020820181905260409091015290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061062557805160ff1916838001178555610652565b82800160010185558215610652579182015b82811115610652578251825591602001919060010190610637565b5061065e929150610688565b5090565b6040518060200160405280606081525090565b6040518060200160405280600081525090565b5b8082111561065e5760008155600101610689565b80516106a881610a47565b92915050565b805180151581146106a857600080fd5b600082601f8301126106ce578081fd5b81356106e16106dc826109f3565b6109cc565b91508082528360208285010111156106f857600080fd5b8060208401602084013760009082016020015292915050565b600082601f830112610721578081fd5b815161072f6106dc826109f3565b915080825283602082850101111561074657600080fd5b610757816020840160208601610a17565b5092915050565b60006020828403121561076f578081fd5b61077960206109cc565b9050815167ffffffffffffffff81111561079257600080fd5b61079e84828501610711565b82525092915050565b6000602082840312156107b8578081fd5b6107c260206109cc565b9151825250919050565b6000602082840312156107dd578081fd5b81356107e881610a47565b9392505050565b600080600060608486031215610803578182fd5b833567ffffffffffffffff8082111561081a578384fd5b610826878388016106be565b94506020860135915061083882610a47565b9092506040850135908082111561084d578283fd5b5061085a868287016106be565b9150509250925092565b600060208284031215610875578081fd5b815167ffffffffffffffff8082111561088c578283fd5b9083019060c0828603121561089f578283fd5b6108a960c06109cc565b8251828111156108b7578485fd5b6108c387828601610711565b8252506108d3866020850161069d565b60208201526040830151828111156108e9578485fd5b6108f58782860161075e565b60408301525061090886606085016107a7565b606082015261091a86608085016106ae565b608082015261092c8660a085016106ae565b60a082015295945050505050565b60008151808452610952816020860160208601610a17565b601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b901515815260200190565b600060608252610998606083018661093a565b6001600160a01b038516602084015282810360408401526109b9818561093a565b9695505050505050565b90815260200190565b60405181810167ffffffffffffffff811182821017156109eb57600080fd5b604052919050565b600067ffffffffffffffff821115610a09578081fd5b50601f01601f191660200190565b60005b83811015610a32578181015183820152602001610a1a565b83811115610a41576000848401525b50505050565b6001600160a01b03811681146104cd57600080fdfea26469706673582212205568fd17e03922544e03d2c76ec03a2f835c0cb8693c76f510979b76e928156d64736f6c634300060c0033",
  "bytecodeSha1": "9871a4f883db56eff96c86f1ac98f07264ff4304",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "NftCollection",
  "coverageMap": {
    "branches": {
      "0": {
        "NftCollection.safeMint": {
          "19": [
            2841,
            2860,
            true
          ]
        }
      },
      "1": {
        "Ownable._transferOwnership": {
          "21": [
            1840,
            1862,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "20": [
            812,
            821,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "NftCollection.createToken": {
          "8": [
            1869,
            1910
          ],
          "9": [
            1920,
            1932
          ]
        },
        "NftCollection.getMaxSupply": {
          "2": [
            2005,
            2021
          ]
        },
        "NftCollection.getNftInfo": {
          "15": [
            3286,
            3304
          ]
        },
        "NftCollection.getOnWhiteList": {
          "1": [
            2678,
            2689
          ]
        },
        "NftCollection.getOpenToPublic": {
          "10": [
            2530,
            2562
          ]
        },
        "NftCollection.getRemainingMints": {
          "14": [
            2099,
            2131
          ]
        },
        "NftCollection.getSaleStarted": {
          "0": [
            2306,
            2331
          ]
        },
        "NftCollection.safeMint": {
          "3": [
            2833,
            2861
          ],
          "4": [
            3004,
            3027
          ],
          "5": [
            3038,
            3054
          ]
        }
      },
      "1": {
        "Ownable._transferOwnership": {
          "16": [
            1832,
            1863
          ],
          "17": [
            1869,
            1912
          ],
          "18": [
            1918,
            1935
          ]
        },
        "Ownable.isOwner": {
          "12": [
            963,
            990
          ]
        },
        "Ownable.owner": {
          "11": [
            681,
            694
          ]
        },
        "Ownable.renounceOwnership": {
          "6": [
            1306,
            1351
          ],
          "7": [
            1357,
            1376
          ]
        },
        "Ownable.transferOwnership": {
          "13": [
            1607,
            1635
          ]
        }
      }
    }
  },
  "dependencies": [
    "NftLibs",
    "Ownable"
  ],
  "deployedBytecode": "60806040526004361061009c5760003560e01c806377eb17b41161006457806377eb17b41461012d5780638680d87e1461014d5780638da5cb5b146101625780638f32d59b14610184578063f2fde38b14610199578063fd02c239146101b95761009c565b80630b64251e146100a15780633acde386146100cc5780634c0f38c2146100ec5780636871ee401461010e578063715018a614610118575b600080fd5b3480156100ad57600080fd5b506100b66101ce565b6040516100c3919061097a565b60405180910390f35b3480156100d857600080fd5b506100b66100e73660046107cc565b6101e6565b3480156100f857600080fd5b506101016101ec565b6040516100c391906109c3565b6101166101f8565b005b34801561012457600080fd5b50610116610295565b34801561013957600080fd5b506101166101483660046107ef565b6102f0565b34801561015957600080fd5b506100b6610476565b34801561016e57600080fd5b50610177610493565b6040516100c39190610966565b34801561019057600080fd5b506100b66104a2565b3480156101a557600080fd5b506101166101b43660046107cc565b6104b3565b3480156101c557600080fd5b506101016104d0565b6000806101d96104ed565b6004015460ff1691505090565b50600190565b60025463ffffffff1690565b3360009081526001602052604090205461021157600080fd5b60035434101561022057600080fd5b600061022a610493565b6003546040519192506001600160a01b0383169181156108fc0291906000818181858888f19350505050158015610265573d6000803e3d6000fd5b505060028054600163ffffffff640100000000808404821692909201160267ffffffff0000000019909116179055565b61029d6104a2565b6102a657600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6102f86105a3565b604051620cf04560e51b815273__$67ab562366c52fcbcaecae584739bc0d72$__9063019e08a09061033290879087908790600401610985565b60006040518083038186803b15801561034a57600080fd5b505af415801561035e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103869190810190610864565b6001600160a01b03841660009081526001602081815260408320805492830181558352918290208351805194955085946005909302909101926103ce928492909101906105e4565b506020828101516001830180546001600160a01b0319166001600160a01b039092169190911790556040830151805180519192600285019261041392849201906105e4565b505050606082015151600382015560808201516004909101805460a09093015115156101000261ff001992151560ff19909416939093179190911691909117905550506002805463ffffffff8082166001011663ffffffff199091161790555050565b6000806104816104ed565b60040154610100900460ff1692915050565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b6104bb6104a2565b6104c457600080fd5b6104cd81610535565b50565b60025463ffffffff64010000000082048116918116919091031690565b3360009081526001602052604081205461050657600080fd5b33600090815260016020526040812080549091829161052157fe5b906000526020600020906005020191505090565b6001600160a01b03811661054857600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160c08101825260608152600060208201529081016105c3610662565b81526020016105d0610675565b815260006020820181905260409091015290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061062557805160ff1916838001178555610652565b82800160010185558215610652579182015b82811115610652578251825591602001919060010190610637565b5061065e929150610688565b5090565b6040518060200160405280606081525090565b6040518060200160405280600081525090565b5b8082111561065e5760008155600101610689565b80516106a881610a47565b92915050565b805180151581146106a857600080fd5b600082601f8301126106ce578081fd5b81356106e16106dc826109f3565b6109cc565b91508082528360208285010111156106f857600080fd5b8060208401602084013760009082016020015292915050565b600082601f830112610721578081fd5b815161072f6106dc826109f3565b915080825283602082850101111561074657600080fd5b610757816020840160208601610a17565b5092915050565b60006020828403121561076f578081fd5b61077960206109cc565b9050815167ffffffffffffffff81111561079257600080fd5b61079e84828501610711565b82525092915050565b6000602082840312156107b8578081fd5b6107c260206109cc565b9151825250919050565b6000602082840312156107dd578081fd5b81356107e881610a47565b9392505050565b600080600060608486031215610803578182fd5b833567ffffffffffffffff8082111561081a578384fd5b610826878388016106be565b94506020860135915061083882610a47565b9092506040850135908082111561084d578283fd5b5061085a868287016106be565b9150509250925092565b600060208284031215610875578081fd5b815167ffffffffffffffff8082111561088c578283fd5b9083019060c0828603121561089f578283fd5b6108a960c06109cc565b8251828111156108b7578485fd5b6108c387828601610711565b8252506108d3866020850161069d565b60208201526040830151828111156108e9578485fd5b6108f58782860161075e565b60408301525061090886606085016107a7565b606082015261091a86608085016106ae565b608082015261092c8660a085016106ae565b60a082015295945050505050565b60008151808452610952816020860160208601610a17565b601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b901515815260200190565b600060608252610998606083018661093a565b6001600160a01b038516602084015282810360408401526109b9818561093a565b9695505050505050565b90815260200190565b60405181810167ffffffffffffffff811182821017156109eb57600080fd5b604052919050565b600067ffffffffffffffff821115610a09578081fd5b50601f01601f191660200190565b60005b83811015610a32578181015183820152602001610a1a565b83811115610a41576000848401525b50505050565b6001600160a01b03811681146104cd57600080fdfea26469706673582212205568fd17e03922544e03d2c76ec03a2f835c0cb8693c76f510979b76e928156d64736f6c634300060c0033",
  "deployedSourceMap": "1246:2172:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2187:151;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2608:88;;;;;;;;;;-1:-1:-1;2608:88:0;;;;;:::i;:::-;;:::i;1945:83::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2702:359::-;;;:::i;:::-;;1254:127:1;;;;;;;;;;;;;:::i;1675:264:0:-;;;;;;;;;;-1:-1:-1;1675:264:0;;;;;:::i;:::-;;:::i;2410:159::-;;;;;;;;;;;;;:::i;629:70:1:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;912:83::-;;;;;;;;;;;;;:::i;1539:101::-;;;;;;;;;;-1:-1:-1;1539:101:1;;;;;:::i;:::-;;:::i;2034:104:0:-;;;;;;;;;;;;;:::i;2187:151::-;2234:4;2250:31;2284:12;:10;:12::i;:::-;2313:18;;;;;;-1:-1:-1;;2187:151:0;:::o;2608:88::-;-1:-1:-1;2685:4:0;;2608:88::o;1945:83::-;2012:9;;;;1945:83;:::o;2702:359::-;3374:10;3395:1;3356:29;;;:17;:29;;;;;:36;3348:49;;;;;;2854:6:::1;;2841:9;:19;;2833:28;;;::::0;::::1;;2944:22;2985:7;:5;:7::i;:::-;3020:6;::::0;3004:23:::1;::::0;2944:50;;-1:-1:-1;;;;;;3004:15:0;::::1;::::0;:23;::::1;;;::::0;3020:6;3004:23:::1;::::0;;;3020:6;3004:15;:23;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3038:13:0::1;:16:::0;;::::1;;::::0;;;::::1;::::0;::::1;::::0;;;::::1;;;-1:-1:-1::0;;3038:16:0;;::::1;;::::0;;2702:359::o;1254:127:1:-;812:9;:7;:9::i;:::-;804:18;;;;;;1348:1:::1;1332:6:::0;;1311:40:::1;::::0;-1:-1:-1;;;;;1332:6:1;;::::1;::::0;1311:40:::1;::::0;1348:1;;1311:40:::1;1374:1;1357:19:::0;;-1:-1:-1;;;;;;1357:19:1::1;::::0;;1254:127::o;1675:264:0:-;1777:30;;:::i;:::-;1810:49;;-1:-1:-1;;;1810:49:0;;:7;;:21;;:49;;1832:5;;1839:8;;1849:9;;1810:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1810:49:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1869:27:0;;;;;;:17;:27;;;;;;;:41;;;;;;;;;;;;;;;;;1777:82;;-1:-1:-1;1777:82:0;;1869:41;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1869:41:0;;;;;;;;;;-1:-1:-1;;;;;;1869:41:0;-1:-1:-1;;;;;1869:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;1869:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1869:41:0;;;-1:-1:-1;;1869:41:0;;;;;;;;;;;;;;;;;-1:-1:-1;;1920:9:0;:12;;;;;;1869:41;1920:12;;-1:-1:-1;;1920:12:0;;;;;;-1:-1:-1;;1675:264:0:o;2410:159::-;2458:4;2474:31;2508:12;:10;:12::i;:::-;2537:25;;;;;;;;;2410:159;-1:-1:-1;;2410:159:0:o;629:70:1:-;666:7;688:6;-1:-1:-1;;;;;688:6:1;629:70;:::o;912:83::-;951:4;984:6;-1:-1:-1;;;;;984:6:1;970:10;:20;;912:83::o;1539:101::-;812:9;:7;:9::i;:::-;804:18;;;;;;1607:28:::1;1626:8;1607:18;:28::i;:::-;1539:101:::0;:::o;2034:104:0:-;2118:13;;;;;;;;2106:9;;;:25;;;;2099:32;2034:104;:::o;3092:219::-;3374:10;3145:23;3356:29;;;:17;:29;;;;;:36;3348:49;;;;;;3235:10:::1;3180:34;3217:29:::0;;;:17:::1;:29;::::0;;;;3293:11;;3217:29;;;;3293:11:::1;;;;;;;;;;;;;;3286:18;;;3092:219:::0;:::o;1771:169:1:-;-1:-1:-1;;;;;1840:22:1;;1832:31;;;;;;1895:6;;;1874:38;;-1:-1:-1;;;;;1874:38:1;;;;1895:6;;;1874:38;;;1918:6;:17;;-1:-1:-1;;;;;;1918:17:1;-1:-1:-1;;;;;1918:17:1;;;;;;;;;;1771:169::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;142:134;220:13;;238:33;220:13;238:33;:::i;:::-;205:71;;;;:::o;283:128::-;358:13;;8311;;8304:21;9260:32;;9250:2;;9306:1;;9296:12;419:442;;521:3;514:4;506:6;502:17;498:27;488:2;;-1:-1;;529:12;488:2;576:6;563:20;598:65;613:49;655:6;613:49;:::i;:::-;598:65;:::i;:::-;589:74;;683:6;676:5;669:21;787:3;719:4;778:6;711;769:16;;766:25;763:2;;;804:1;;794:12;763:2;8626:6;719:4;711:6;707:17;719:4;745:5;741:16;8603:30;8682:1;8664:16;;;719:4;8664:16;8657:27;745:5;481:380;-1:-1;;481:380::o;870:444::-;;983:3;976:4;968:6;964:17;960:27;950:2;;-1:-1;;991:12;950:2;1031:6;1025:13;1053:65;1068:49;1110:6;1068:49;:::i;1053:65::-;1044:74;;1138:6;1131:5;1124:21;1242:3;1174:4;1233:6;1166;1224:16;;1221:25;1218:2;;;1259:1;;1249:12;1218:2;1269:39;1301:6;1174:4;1200:5;1196:16;1174:4;1166:6;1162:17;1269:39;:::i;:::-;;943:371;;;;:::o;1353:437::-;;1477:4;1465:9;1460:3;1456:19;1452:30;1449:2;;;-1:-1;;1485:12;1449:2;1513:20;1477:4;1513:20;:::i;:::-;1504:29;;1593:17;1587:24;1631:18;1623:6;1620:30;1617:2;;;1608:1;;1653:12;1617:2;1698:70;1764:3;1755:6;1744:9;1740:22;1698:70;:::i;:::-;1680:16;1673:96;;1443:347;;;;:::o;3221:341::-;;3341:4;3329:9;3324:3;3320:19;3316:30;3313:2;;;-1:-1;;3349:12;3313:2;3377:20;3341:4;3377:20;:::i;:::-;3647:13;;3455:86;;-1:-1;3368:29;3307:255;-1:-1;3307:255::o;3710:241::-;;3814:2;3802:9;3793:7;3789:23;3785:32;3782:2;;;-1:-1;;3820:12;3782:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;3872:63;3776:175;-1:-1;;;3776:175::o;3958:703::-;;;;4116:2;4104:9;4095:7;4091:23;4087:32;4084:2;;;-1:-1;;4122:12;4084:2;4180:17;4167:31;4218:18;;4210:6;4207:30;4204:2;;;-1:-1;;4240:12;4204:2;4270:63;4325:7;4316:6;4305:9;4301:22;4270:63;:::i;:::-;4260:73;;4370:2;4413:9;4409:22;72:20;63:29;;97:33;124:5;97:33;:::i;:::-;4378:63;;-1:-1;4506:2;4491:18;;4478:32;;4519:30;;;4516:2;;;-1:-1;;4552:12;4516:2;;4582:63;4637:7;4628:6;4617:9;4613:22;4582:63;:::i;:::-;4572:73;;;4078:583;;;;;:::o;4668:388::-;;4806:2;4794:9;4785:7;4781:23;4777:32;4774:2;;;-1:-1;;4812:12;4774:2;4863:17;4857:24;4901:18;;4893:6;4890:30;4887:2;;;-1:-1;;4923:12;4887:2;5008:22;;;;1949:4;1928:19;;;1924:30;1921:2;;;-1:-1;;1957:12;1921:2;1985:20;1949:4;1985:20;:::i;:::-;2064:17;2058:24;4901:18;2094:6;2091:30;2088:2;;;-1:-1;;2124:12;2088:2;2169:70;2235:3;2226:6;2215:9;2211:22;2169:70;:::i;:::-;2151:16;2144:96;;2341:60;2397:3;4806:2;2377:9;2373:22;2341:60;:::i;:::-;4806:2;2327:5;2323:16;2316:86;2489:2;2478:9;2474:18;2468:25;4901:18;2505:6;2502:30;2499:2;;;-1:-1;;2535:12;2499:2;2580:84;2660:3;2651:6;2640:9;2636:22;2580:84;:::i;:::-;2489:2;2566:5;2562:16;2555:110;;2760:80;2836:3;2727:2;2816:9;2812:22;2760:80;:::i;:::-;2727:2;2746:5;2742:16;2735:106;2942:57;2995:3;2908;2975:9;2971:22;2942:57;:::i;:::-;2908:3;2928:5;2924:16;2917:83;3108:57;3161:3;3074;3141:9;3137:22;3108:57;:::i;:::-;3074:3;3090:16;;3083:83;3094:5;4768:288;-1:-1;;;;;4768:288::o;5422:363::-;;5575:5;7926:12;8091:6;8086:3;8079:19;5677:52;5722:6;8128:4;8123:3;8119:14;8128:4;5703:5;5699:16;5677:52;:::i;:::-;9059:7;9043:14;-1:-1;;9039:28;5741:39;;;;8128:4;5741:39;;5522:263;-1:-1;;5522:263::o;5912:222::-;-1:-1;;;;;8399:54;;;;5134:37;;6039:2;6024:18;;6010:124::o;6141:210::-;8311:13;;8304:21;5376:34;;6262:2;6247:18;;6233:118::o;6358:652::-;;6589:2;6610:17;6603:47;6664:86;6589:2;6578:9;6574:18;6736:6;6664:86;:::i;:::-;-1:-1;;;;;8399:54;;6837:2;6822:18;;5134:37;6879:20;;;6874:2;6859:18;;6852:48;6914:86;6883:4;6986:6;6914:86;:::i;:::-;6906:94;6560:450;-1:-1;;;;;;6560:450::o;7017:222::-;5863:37;;;7144:2;7129:18;;7115:124::o;7246:256::-;7308:2;7302:9;7334:17;;;7409:18;7394:34;;7430:22;;;7391:62;7388:2;;;7466:1;;7456:12;7388:2;7308;7475:22;7286:216;;-1:-1;7286:216::o;7509:322::-;;7653:18;7645:6;7642:30;7639:2;;;-1:-1;;7675:12;7639:2;-1:-1;9059:7;7729:17;-1:-1;;7725:33;7816:4;7806:15;;7576:255::o;8699:268::-;8764:1;8771:101;8785:6;8782:1;8779:13;8771:101;;;8852:11;;;8846:18;8833:11;;;8826:39;8807:2;8800:10;8771:101;;;8887:6;8884:1;8881:13;8878:2;;;8764:1;8943:6;8938:3;8934:16;8927:27;8878:2;;8748:219;;;:::o;9080:117::-;-1:-1;;;;;8399:54;;9139:35;;9129:2;;9188:1;;9178:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "isOwner()": {
        "returns": {
          "_0": "true if `msg.sender` is the owner of the contract."
        }
      },
      "owner()": {
        "returns": {
          "_0": "the address of the owner."
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract.",
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "version": 1
  },
  "offset": [
    1246,
    3418
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x77EB17B4 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x77EB17B4 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x8680D87E EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xFD02C239 EQ PUSH2 0x1B9 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0xB64251E EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x3ACDE386 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x4C0F38C2 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x6871EE40 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x118 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x97A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0xE7 CALLDATASIZE PUSH1 0x4 PUSH2 0x7CC JUMP JUMPDEST PUSH2 0x1E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 PUSH2 0x1EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x9C3 JUMP JUMPDEST PUSH2 0x116 PUSH2 0x1F8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x116 PUSH2 0x295 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x116 PUSH2 0x148 CALLDATASIZE PUSH1 0x4 PUSH2 0x7EF JUMP JUMPDEST PUSH2 0x2F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x476 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x493 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x966 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x4A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x116 PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x7CC JUMP JUMPDEST PUSH2 0x4B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1D9 PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD CALLVALUE LT ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x22A PUSH2 0x493 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x265 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH5 0x100000000 DUP1 DUP5 DIV DUP3 AND SWAP3 SWAP1 SWAP3 ADD AND MUL PUSH8 0xFFFFFFFF00000000 NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x29D PUSH2 0x4A2 JUMP JUMPDEST PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x2F8 PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xCF045 PUSH1 0xE5 SHL DUP2 MSTORE PUSH20 0x0 SWAP1 PUSH4 0x19E08A0 SWAP1 PUSH2 0x332 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x985 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x35E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x386 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE DUP4 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP1 MLOAD SWAP5 SWAP6 POP DUP6 SWAP5 PUSH1 0x5 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD SWAP3 PUSH2 0x3CE SWAP3 DUP5 SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x5E4 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD DUP1 MLOAD SWAP2 SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 PUSH2 0x413 SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0x5E4 JUMP JUMPDEST POP POP POP PUSH1 0x60 DUP3 ADD MLOAD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xA0 SWAP1 SWAP4 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP2 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP PUSH1 0x2 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x1 ADD AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x481 PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x4 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH2 0x4BB PUSH2 0x4A2 JUMP JUMPDEST PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4CD DUP2 PUSH2 0x535 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH4 0xFFFFFFFF PUSH5 0x100000000 DUP3 DIV DUP2 AND SWAP2 DUP2 AND SWAP2 SWAP1 SWAP2 SUB AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH2 0x521 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x548 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD PUSH2 0x5C3 PUSH2 0x662 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5D0 PUSH2 0x675 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x625 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x652 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x652 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x652 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x637 JUMP JUMPDEST POP PUSH2 0x65E SWAP3 SWAP2 POP PUSH2 0x688 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x65E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x689 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x6A8 DUP2 PUSH2 0xA47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x6A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6CE JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6E1 PUSH2 0x6DC DUP3 PUSH2 0x9F3 JUMP JUMPDEST PUSH2 0x9CC JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x6F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP3 ADD PUSH1 0x20 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x721 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x72F PUSH2 0x6DC DUP3 PUSH2 0x9F3 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x757 DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xA17 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x76F JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x779 PUSH1 0x20 PUSH2 0x9CC JUMP JUMPDEST SWAP1 POP DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79E DUP5 DUP3 DUP6 ADD PUSH2 0x711 JUMP JUMPDEST DUP3 MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7B8 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x7C2 PUSH1 0x20 PUSH2 0x9CC JUMP JUMPDEST SWAP2 MLOAD DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7DD JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7E8 DUP2 PUSH2 0xA47 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x803 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x81A JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x826 DUP8 DUP4 DUP9 ADD PUSH2 0x6BE JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH2 0x838 DUP3 PUSH2 0xA47 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x84D JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x85A DUP7 DUP3 DUP8 ADD PUSH2 0x6BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x875 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x88C JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0xC0 DUP3 DUP7 SUB SLT ISZERO PUSH2 0x89F JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x8A9 PUSH1 0xC0 PUSH2 0x9CC JUMP JUMPDEST DUP3 MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x8B7 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x8C3 DUP8 DUP3 DUP7 ADD PUSH2 0x711 JUMP JUMPDEST DUP3 MSTORE POP PUSH2 0x8D3 DUP7 PUSH1 0x20 DUP6 ADD PUSH2 0x69D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x8E9 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x8F5 DUP8 DUP3 DUP7 ADD PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH2 0x908 DUP7 PUSH1 0x60 DUP6 ADD PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x91A DUP7 PUSH1 0x80 DUP6 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x92C DUP7 PUSH1 0xA0 DUP6 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x952 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xA17 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 MSTORE PUSH2 0x998 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x93A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x9B9 DUP2 DUP6 PUSH2 0x93A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x9EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA09 JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA32 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xA1A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xA41 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4CD JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE PUSH9 0xFD17E03922544E03D2 0xC7 PUSH15 0xC03A2F835C0CB8693C76F510979B76 0xE9 0x28 ISZERO PUSH14 0x64736F6C634300060C0033000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C"
    },
    "12": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x77EB17B4"
    },
    "25": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "GT",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64"
    },
    "29": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x77EB17B4"
    },
    "36": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12D"
    },
    "40": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8680D87E"
    },
    "47": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D"
    },
    "51": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA5CB5B"
    },
    "58": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x162"
    },
    "62": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8F32D59B"
    },
    "69": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184"
    },
    "73": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "DUP1",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "EQ",
      "path": "0"
    },
    "81": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x199"
    },
    "84": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "85": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "DUP1",
      "path": "0"
    },
    "86": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFD02C239"
    },
    "91": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "EQ",
      "path": "0"
    },
    "92": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B9"
    },
    "95": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "96": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C"
    },
    "99": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "JUMP",
      "path": "0"
    },
    "100": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "DUP1",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB64251E"
    },
    "107": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "EQ",
      "path": "0"
    },
    "108": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA1"
    },
    "111": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "DUP1",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3ACDE386"
    },
    "118": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "EQ",
      "path": "0"
    },
    "119": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC"
    },
    "122": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "123": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "DUP1",
      "path": "0"
    },
    "124": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4C0F38C2"
    },
    "129": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "EQ",
      "path": "0"
    },
    "130": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEC"
    },
    "133": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "134": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "DUP1",
      "path": "0"
    },
    "135": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6871EE40"
    },
    "140": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "EQ",
      "path": "0"
    },
    "141": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E"
    },
    "144": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "145": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "DUP1",
      "path": "0"
    },
    "146": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x715018A6"
    },
    "151": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "EQ",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x118"
    },
    "155": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "156": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "157": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "159": {
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "DUP1",
      "path": "0"
    },
    "160": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1246,
        3418
      ],
      "op": "REVERT",
      "path": "0"
    },
    "161": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "162": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "163": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "DUP1",
      "path": "0"
    },
    "164": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "165": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD"
    },
    "168": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "169": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "171": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "DUP1",
      "path": "0"
    },
    "172": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "REVERT",
      "path": "0"
    },
    "173": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "174": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "POP",
      "path": "0"
    },
    "175": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "178": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CE"
    },
    "181": {
      "fn": "NftCollection.getSaleStarted",
      "jump": "i",
      "offset": [
        2187,
        2338
      ],
      "op": "JUMP",
      "path": "0"
    },
    "182": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "183": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "185": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "186": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3"
    },
    "189": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "190": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "191": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97A"
    },
    "194": {
      "fn": "NftCollection.getSaleStarted",
      "jump": "i",
      "offset": [
        2187,
        2338
      ],
      "op": "JUMP",
      "path": "0"
    },
    "195": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "196": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "198": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "199": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "DUP1",
      "path": "0"
    },
    "200": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "201": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "SUB",
      "path": "0"
    },
    "202": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "203": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "RETURN",
      "path": "0"
    },
    "204": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        2608,
        2696
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "205": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        2608,
        2696
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "206": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        2608,
        2696
      ],
      "op": "DUP1",
      "path": "0"
    },
    "207": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        2608,
        2696
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "208": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        2608,
        2696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD8"
    },
    "211": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        2608,
        2696
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "212": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        2608,
        2696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "214": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        2608,
        2696
      ],
      "op": "DUP1",
      "path": "0"
    },
    "215": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        2608,
        2696
      ],
      "op": "REVERT",
      "path": "0"
    },
    "216": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        2608,
        2696
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "217": {
      "op": "POP"
    },
    "218": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        2608,
        2696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "221": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        2608,
        2696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7"
    },
    "224": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        2608,
        2696
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "225": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        2608,
        2696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "227": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        2608,
        2696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7CC"
    },
    "230": {
      "fn": "NftCollection.getOnWhiteList",
      "jump": "i",
      "offset": [
        2608,
        2696
      ],
      "op": "JUMP",
      "path": "0"
    },
    "231": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        2608,
        2696
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "232": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        2608,
        2696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E6"
    },
    "235": {
      "fn": "NftCollection.getOnWhiteList",
      "jump": "i",
      "offset": [
        2608,
        2696
      ],
      "op": "JUMP",
      "path": "0"
    },
    "236": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        1945,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "237": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        1945,
        2028
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "238": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        1945,
        2028
      ],
      "op": "DUP1",
      "path": "0"
    },
    "239": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        1945,
        2028
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "240": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        1945,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF8"
    },
    "243": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        1945,
        2028
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "244": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        1945,
        2028
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "246": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        1945,
        2028
      ],
      "op": "DUP1",
      "path": "0"
    },
    "247": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        1945,
        2028
      ],
      "op": "REVERT",
      "path": "0"
    },
    "248": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        1945,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "249": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        1945,
        2028
      ],
      "op": "POP",
      "path": "0"
    },
    "250": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        1945,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x101"
    },
    "253": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        1945,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EC"
    },
    "256": {
      "fn": "NftCollection.getMaxSupply",
      "jump": "i",
      "offset": [
        1945,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "257": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        1945,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "258": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        1945,
        2028
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "260": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        1945,
        2028
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "261": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        1945,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3"
    },
    "264": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        1945,
        2028
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "265": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        1945,
        2028
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "266": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        1945,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C3"
    },
    "269": {
      "fn": "NftCollection.getMaxSupply",
      "jump": "i",
      "offset": [
        1945,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "270": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2702,
        3061
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "271": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2702,
        3061
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x116"
    },
    "274": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2702,
        3061
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F8"
    },
    "277": {
      "fn": "NftCollection.safeMint",
      "jump": "i",
      "offset": [
        2702,
        3061
      ],
      "op": "JUMP",
      "path": "0"
    },
    "278": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2702,
        3061
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "279": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2702,
        3061
      ],
      "op": "STOP",
      "path": "0"
    },
    "280": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "281": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "282": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "DUP1",
      "path": "1"
    },
    "283": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "284": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x124"
    },
    "287": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "288": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "290": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "DUP1",
      "path": "1"
    },
    "291": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "REVERT",
      "path": "1"
    },
    "292": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "293": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "POP",
      "path": "1"
    },
    "294": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x116"
    },
    "297": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x295"
    },
    "300": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1254,
        1381
      ],
      "op": "JUMP",
      "path": "1"
    },
    "301": {
      "fn": "NftCollection.createToken",
      "offset": [
        1675,
        1939
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "302": {
      "fn": "NftCollection.createToken",
      "offset": [
        1675,
        1939
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "303": {
      "fn": "NftCollection.createToken",
      "offset": [
        1675,
        1939
      ],
      "op": "DUP1",
      "path": "0"
    },
    "304": {
      "fn": "NftCollection.createToken",
      "offset": [
        1675,
        1939
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "305": {
      "fn": "NftCollection.createToken",
      "offset": [
        1675,
        1939
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x139"
    },
    "308": {
      "fn": "NftCollection.createToken",
      "offset": [
        1675,
        1939
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "309": {
      "fn": "NftCollection.createToken",
      "offset": [
        1675,
        1939
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "311": {
      "fn": "NftCollection.createToken",
      "offset": [
        1675,
        1939
      ],
      "op": "DUP1",
      "path": "0"
    },
    "312": {
      "fn": "NftCollection.createToken",
      "offset": [
        1675,
        1939
      ],
      "op": "REVERT",
      "path": "0"
    },
    "313": {
      "fn": "NftCollection.createToken",
      "offset": [
        1675,
        1939
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "314": {
      "op": "POP"
    },
    "315": {
      "fn": "NftCollection.createToken",
      "offset": [
        1675,
        1939
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x116"
    },
    "318": {
      "fn": "NftCollection.createToken",
      "offset": [
        1675,
        1939
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x148"
    },
    "321": {
      "fn": "NftCollection.createToken",
      "offset": [
        1675,
        1939
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "322": {
      "fn": "NftCollection.createToken",
      "offset": [
        1675,
        1939
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "324": {
      "fn": "NftCollection.createToken",
      "offset": [
        1675,
        1939
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7EF"
    },
    "327": {
      "fn": "NftCollection.createToken",
      "jump": "i",
      "offset": [
        1675,
        1939
      ],
      "op": "JUMP",
      "path": "0"
    },
    "328": {
      "fn": "NftCollection.createToken",
      "offset": [
        1675,
        1939
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "329": {
      "fn": "NftCollection.createToken",
      "offset": [
        1675,
        1939
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F0"
    },
    "332": {
      "fn": "NftCollection.createToken",
      "jump": "i",
      "offset": [
        1675,
        1939
      ],
      "op": "JUMP",
      "path": "0"
    },
    "333": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2410,
        2569
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "334": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2410,
        2569
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "335": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2410,
        2569
      ],
      "op": "DUP1",
      "path": "0"
    },
    "336": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2410,
        2569
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "337": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2410,
        2569
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x159"
    },
    "340": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2410,
        2569
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "341": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2410,
        2569
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "343": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2410,
        2569
      ],
      "op": "DUP1",
      "path": "0"
    },
    "344": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2410,
        2569
      ],
      "op": "REVERT",
      "path": "0"
    },
    "345": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2410,
        2569
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "346": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2410,
        2569
      ],
      "op": "POP",
      "path": "0"
    },
    "347": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2410,
        2569
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "350": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2410,
        2569
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x476"
    },
    "353": {
      "fn": "NftCollection.getOpenToPublic",
      "jump": "i",
      "offset": [
        2410,
        2569
      ],
      "op": "JUMP",
      "path": "0"
    },
    "354": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "355": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "356": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "DUP1",
      "path": "1"
    },
    "357": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "358": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16E"
    },
    "361": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "362": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "364": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "DUP1",
      "path": "1"
    },
    "365": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "REVERT",
      "path": "1"
    },
    "366": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "367": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "POP",
      "path": "1"
    },
    "368": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x177"
    },
    "371": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x493"
    },
    "374": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        629,
        699
      ],
      "op": "JUMP",
      "path": "1"
    },
    "375": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "376": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "378": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "379": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC3"
    },
    "382": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "383": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "384": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x966"
    },
    "387": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        629,
        699
      ],
      "op": "JUMP",
      "path": "1"
    },
    "388": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "389": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "390": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "DUP1",
      "path": "1"
    },
    "391": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "392": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x190"
    },
    "395": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "396": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "398": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "DUP1",
      "path": "1"
    },
    "399": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "REVERT",
      "path": "1"
    },
    "400": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "401": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "POP",
      "path": "1"
    },
    "402": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB6"
    },
    "405": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4A2"
    },
    "408": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        912,
        995
      ],
      "op": "JUMP",
      "path": "1"
    },
    "409": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "410": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "411": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "DUP1",
      "path": "1"
    },
    "412": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "413": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A5"
    },
    "416": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "417": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "419": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "DUP1",
      "path": "1"
    },
    "420": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "REVERT",
      "path": "1"
    },
    "421": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "422": {
      "op": "POP"
    },
    "423": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x116"
    },
    "426": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B4"
    },
    "429": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "430": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "432": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7CC"
    },
    "435": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1539,
        1640
      ],
      "op": "JUMP",
      "path": "1"
    },
    "436": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "437": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4B3"
    },
    "440": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1539,
        1640
      ],
      "op": "JUMP",
      "path": "1"
    },
    "441": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2034,
        2138
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "442": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2034,
        2138
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "443": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2034,
        2138
      ],
      "op": "DUP1",
      "path": "0"
    },
    "444": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2034,
        2138
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "445": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2034,
        2138
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C5"
    },
    "448": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2034,
        2138
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "449": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2034,
        2138
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "451": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2034,
        2138
      ],
      "op": "DUP1",
      "path": "0"
    },
    "452": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2034,
        2138
      ],
      "op": "REVERT",
      "path": "0"
    },
    "453": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2034,
        2138
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "454": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2034,
        2138
      ],
      "op": "POP",
      "path": "0"
    },
    "455": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2034,
        2138
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x101"
    },
    "458": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2034,
        2138
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D0"
    },
    "461": {
      "fn": "NftCollection.getRemainingMints",
      "jump": "i",
      "offset": [
        2034,
        2138
      ],
      "op": "JUMP",
      "path": "0"
    },
    "462": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "463": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2234,
        2238
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "465": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2250,
        2281
      ],
      "op": "DUP1",
      "path": "0"
    },
    "466": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2284,
        2296
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D9"
    },
    "469": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2284,
        2294
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4ED"
    },
    "472": {
      "fn": "NftCollection.getSaleStarted",
      "jump": "i",
      "offset": [
        2284,
        2296
      ],
      "op": "JUMP",
      "path": "0"
    },
    "473": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2284,
        2296
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "474": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2313,
        2331
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x4"
    },
    "476": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2313,
        2331
      ],
      "op": "ADD",
      "path": "0"
    },
    "477": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2313,
        2331
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "478": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2313,
        2331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "480": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2313,
        2331
      ],
      "op": "AND",
      "path": "0"
    },
    "481": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2313,
        2331
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "482": {
      "op": "POP"
    },
    "483": {
      "op": "POP"
    },
    "484": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2187,
        2338
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "485": {
      "fn": "NftCollection.getSaleStarted",
      "jump": "o",
      "offset": [
        2187,
        2338
      ],
      "op": "JUMP",
      "path": "0"
    },
    "486": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        2608,
        2696
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "487": {
      "op": "POP"
    },
    "488": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        2685,
        2689
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x1"
    },
    "490": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        2685,
        2689
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "491": {
      "fn": "NftCollection.getOnWhiteList",
      "jump": "o",
      "offset": [
        2608,
        2696
      ],
      "op": "JUMP",
      "path": "0"
    },
    "492": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        1945,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "493": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2012,
        2021
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x2"
    },
    "495": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2012,
        2021
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "496": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2012,
        2021
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "501": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2012,
        2021
      ],
      "op": "AND",
      "path": "0"
    },
    "502": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        1945,
        2028
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "503": {
      "fn": "NftCollection.getMaxSupply",
      "jump": "o",
      "offset": [
        1945,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "504": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2702,
        3061
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "505": {
      "offset": [
        3374,
        3384
      ],
      "op": "CALLER",
      "path": "0"
    },
    "506": {
      "offset": [
        3395,
        3396
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "508": {
      "offset": [
        3356,
        3385
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "509": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3356,
        3385
      ],
      "op": "DUP2",
      "path": "0"
    },
    "510": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3356,
        3385
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "511": {
      "offset": [
        3356,
        3373
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "513": {
      "offset": [
        3356,
        3385
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "515": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3356,
        3385
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "516": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3356,
        3385
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "518": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3356,
        3385
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "519": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3356,
        3385
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "520": {
      "offset": [
        3356,
        3392
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "521": {
      "offset": [
        3348,
        3397
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x211"
    },
    "524": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3348,
        3397
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "525": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3348,
        3397
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "527": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3348,
        3397
      ],
      "op": "DUP1",
      "path": "0"
    },
    "528": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3348,
        3397
      ],
      "op": "REVERT",
      "path": "0"
    },
    "529": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3348,
        3397
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "530": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2854,
        2860
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x3"
    },
    "532": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2854,
        2860
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "533": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2841,
        2850
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "534": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2841,
        2860
      ],
      "op": "LT",
      "path": "0"
    },
    "535": {
      "branch": 19,
      "fn": "NftCollection.safeMint",
      "offset": [
        2841,
        2860
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "536": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2833,
        2861
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "539": {
      "branch": 19,
      "fn": "NftCollection.safeMint",
      "offset": [
        2833,
        2861
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "540": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2833,
        2861
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "542": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2833,
        2861
      ],
      "op": "DUP1",
      "path": "0"
    },
    "543": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2833,
        2861
      ],
      "op": "REVERT",
      "path": "0"
    },
    "544": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2833,
        2861
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "545": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2944,
        2966
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "547": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2985,
        2992
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22A"
    },
    "550": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2985,
        2990
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x493"
    },
    "553": {
      "fn": "NftCollection.safeMint",
      "jump": "i",
      "offset": [
        2985,
        2992
      ],
      "op": "JUMP",
      "path": "0"
    },
    "554": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2985,
        2992
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "555": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3020,
        3026
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x3"
    },
    "557": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3020,
        3026
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "558": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "560": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "561": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2944,
        2994
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "562": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2944,
        2994
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "563": {
      "op": "POP"
    },
    "564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "568": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "570": {
      "op": "SHL"
    },
    "571": {
      "op": "SUB"
    },
    "572": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3019
      ],
      "op": "DUP4",
      "path": "0"
    },
    "573": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3019
      ],
      "op": "AND",
      "path": "0"
    },
    "574": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3019
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "575": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "576": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "577": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "580": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "MUL",
      "path": "0"
    },
    "581": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "582": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3020,
        3026
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "583": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "585": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "586": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "587": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "588": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3020,
        3026
      ],
      "op": "DUP6",
      "path": "0"
    },
    "589": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3019
      ],
      "op": "DUP9",
      "path": "0"
    },
    "590": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "DUP9",
      "path": "0"
    },
    "591": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "CALL",
      "path": "0"
    },
    "592": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "593": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "POP",
      "path": "0"
    },
    "594": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "POP",
      "path": "0"
    },
    "595": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "POP",
      "path": "0"
    },
    "596": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "POP",
      "path": "0"
    },
    "597": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "598": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "DUP1",
      "path": "0"
    },
    "599": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "600": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x265"
    },
    "603": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "604": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "605": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "607": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "DUP1",
      "path": "0"
    },
    "608": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "609": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "610": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "612": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "REVERT",
      "path": "0"
    },
    "613": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3004,
        3027
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "614": {
      "op": "POP"
    },
    "615": {
      "op": "POP"
    },
    "616": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3038,
        3051
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x2"
    },
    "618": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3038,
        3054
      ],
      "op": "DUP1",
      "path": "0"
    },
    "619": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3038,
        3054
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "620": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3038,
        3054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "622": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3038,
        3054
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "627": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3038,
        3054
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x100000000"
    },
    "633": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3038,
        3054
      ],
      "op": "DUP1",
      "path": "0"
    },
    "634": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3038,
        3054
      ],
      "op": "DUP5",
      "path": "0"
    },
    "635": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3038,
        3054
      ],
      "op": "DIV",
      "path": "0"
    },
    "636": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3038,
        3054
      ],
      "op": "DUP3",
      "path": "0"
    },
    "637": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3038,
        3054
      ],
      "op": "AND",
      "path": "0"
    },
    "638": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3038,
        3054
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "639": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3038,
        3054
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "640": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3038,
        3054
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "641": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3038,
        3054
      ],
      "op": "ADD",
      "path": "0"
    },
    "642": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3038,
        3054
      ],
      "op": "AND",
      "path": "0"
    },
    "643": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3038,
        3054
      ],
      "op": "MUL",
      "path": "0"
    },
    "644": {
      "op": "PUSH8",
      "value": "0xFFFFFFFF00000000"
    },
    "653": {
      "op": "NOT"
    },
    "654": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3038,
        3054
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "655": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3038,
        3054
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "656": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3038,
        3054
      ],
      "op": "AND",
      "path": "0"
    },
    "657": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3038,
        3054
      ],
      "op": "OR",
      "path": "0"
    },
    "658": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3038,
        3054
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "659": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3038,
        3054
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "660": {
      "fn": "NftCollection.safeMint",
      "jump": "o",
      "offset": [
        2702,
        3061
      ],
      "op": "JUMP",
      "path": "0"
    },
    "661": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "662": {
      "offset": [
        812,
        821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x29D"
    },
    "665": {
      "offset": [
        812,
        819
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4A2"
    },
    "668": {
      "jump": "i",
      "offset": [
        812,
        821
      ],
      "op": "JUMP",
      "path": "1"
    },
    "669": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        812,
        821
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "670": {
      "offset": [
        804,
        822
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A6"
    },
    "673": {
      "offset": [
        804,
        822
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "674": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        804,
        822
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "676": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        804,
        822
      ],
      "op": "DUP1",
      "path": "1"
    },
    "677": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        804,
        822
      ],
      "op": "REVERT",
      "path": "1"
    },
    "678": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        804,
        822
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "679": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1349
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 6,
      "value": "0x0"
    },
    "681": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1332,
        1338
      ],
      "op": "DUP1",
      "path": "1"
    },
    "682": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1332,
        1338
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "683": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1311,
        1351
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "685": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1311,
        1351
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "692": {
      "op": "SHL"
    },
    "693": {
      "op": "SUB"
    },
    "694": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1332,
        1338
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "695": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1332,
        1338
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "696": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1332,
        1338
      ],
      "op": "AND",
      "path": "1"
    },
    "697": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1332,
        1338
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "698": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1311,
        1351
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "731": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1311,
        1351
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "732": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1349
      ],
      "op": "DUP4",
      "path": "1"
    },
    "733": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1349
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "734": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1311,
        1351
      ],
      "op": "LOG3",
      "path": "1"
    },
    "735": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1374,
        1375
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 7,
      "value": "0x0"
    },
    "737": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1357,
        1376
      ],
      "op": "DUP1",
      "path": "1"
    },
    "738": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1357,
        1376
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "745": {
      "op": "SHL"
    },
    "746": {
      "op": "SUB"
    },
    "747": {
      "op": "NOT"
    },
    "748": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1357,
        1376
      ],
      "op": "AND",
      "path": "1"
    },
    "749": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1357,
        1376
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "750": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1357,
        1376
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "751": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1254,
        1381
      ],
      "op": "JUMP",
      "path": "1"
    },
    "752": {
      "fn": "NftCollection.createToken",
      "offset": [
        1675,
        1939
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "753": {
      "fn": "NftCollection.createToken",
      "offset": [
        1777,
        1807
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F8"
    },
    "756": {
      "fn": "NftCollection.createToken",
      "offset": [
        1777,
        1807
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A3"
    },
    "759": {
      "fn": "NftCollection.createToken",
      "jump": "i",
      "offset": [
        1777,
        1807
      ],
      "op": "JUMP",
      "path": "0"
    },
    "760": {
      "fn": "NftCollection.createToken",
      "offset": [
        1777,
        1807
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "761": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "763": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "764": {
      "op": "PUSH3",
      "value": "0xCF045"
    },
    "768": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "770": {
      "op": "SHL"
    },
    "771": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "DUP2",
      "path": "0"
    },
    "772": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "773": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1817
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0x0"
    },
    "794": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "795": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1831
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x19E08A0"
    },
    "800": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1831
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "801": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "804": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "805": {
      "fn": "NftCollection.createToken",
      "offset": [
        1832,
        1837
      ],
      "op": "DUP8",
      "path": "0"
    },
    "806": {
      "fn": "NftCollection.createToken",
      "offset": [
        1832,
        1837
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "807": {
      "fn": "NftCollection.createToken",
      "offset": [
        1839,
        1847
      ],
      "op": "DUP8",
      "path": "0"
    },
    "808": {
      "fn": "NftCollection.createToken",
      "offset": [
        1839,
        1847
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "809": {
      "fn": "NftCollection.createToken",
      "offset": [
        1849,
        1858
      ],
      "op": "DUP8",
      "path": "0"
    },
    "810": {
      "fn": "NftCollection.createToken",
      "offset": [
        1849,
        1858
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "811": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "813": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "ADD",
      "path": "0"
    },
    "814": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x985"
    },
    "817": {
      "fn": "NftCollection.createToken",
      "jump": "i",
      "offset": [
        1810,
        1859
      ],
      "op": "JUMP",
      "path": "0"
    },
    "818": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "819": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "821": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "823": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "824": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "DUP1",
      "path": "0"
    },
    "825": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "DUP4",
      "path": "0"
    },
    "826": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "SUB",
      "path": "0"
    },
    "827": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "DUP2",
      "path": "0"
    },
    "828": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "DUP7",
      "path": "0"
    },
    "829": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "DUP1",
      "path": "0"
    },
    "830": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "831": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "832": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "DUP1",
      "path": "0"
    },
    "833": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "834": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34A"
    },
    "837": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "838": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "840": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "DUP1",
      "path": "0"
    },
    "841": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "REVERT",
      "path": "0"
    },
    "842": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "843": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "POP",
      "path": "0"
    },
    "844": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "GAS",
      "path": "0"
    },
    "845": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "DELEGATECALL",
      "path": "0"
    },
    "846": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "847": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "DUP1",
      "path": "0"
    },
    "848": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "849": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35E"
    },
    "852": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "853": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "854": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "856": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "DUP1",
      "path": "0"
    },
    "857": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "858": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "859": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "861": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "REVERT",
      "path": "0"
    },
    "862": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "863": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "POP",
      "path": "0"
    },
    "864": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "POP",
      "path": "0"
    },
    "865": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "POP",
      "path": "0"
    },
    "866": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "POP",
      "path": "0"
    },
    "867": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "869": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "870": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "871": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "873": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "DUP3",
      "path": "0"
    },
    "874": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "875": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "877": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "878": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "879": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "DUP2",
      "path": "0"
    },
    "880": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "ADD",
      "path": "0"
    },
    "881": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "883": {
      "op": "NOT"
    },
    "884": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "AND",
      "path": "0"
    },
    "885": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "DUP3",
      "path": "0"
    },
    "886": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "ADD",
      "path": "0"
    },
    "887": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "889": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "890": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386"
    },
    "893": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "894": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "895": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "DUP2",
      "path": "0"
    },
    "896": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "ADD",
      "path": "0"
    },
    "897": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "898": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x864"
    },
    "901": {
      "fn": "NftCollection.createToken",
      "jump": "i",
      "offset": [
        1810,
        1859
      ],
      "op": "JUMP",
      "path": "0"
    },
    "902": {
      "fn": "NftCollection.createToken",
      "offset": [
        1810,
        1859
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "909": {
      "op": "SHL"
    },
    "910": {
      "op": "SUB"
    },
    "911": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1896
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 8
    },
    "912": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1896
      ],
      "op": "AND",
      "path": "0"
    },
    "913": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1896
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "915": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1896
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "916": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1896
      ],
      "op": "DUP2",
      "path": "0"
    },
    "917": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1896
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "918": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1886
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "920": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1896
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "922": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1896
      ],
      "op": "DUP2",
      "path": "0"
    },
    "923": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1896
      ],
      "op": "DUP2",
      "path": "0"
    },
    "924": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1896
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "925": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1896
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "927": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1896
      ],
      "op": "DUP4",
      "path": "0"
    },
    "928": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1896
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "929": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "930": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "931": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "932": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "DUP4",
      "path": "0"
    },
    "933": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "ADD",
      "path": "0"
    },
    "934": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "DUP2",
      "path": "0"
    },
    "935": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "936": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "DUP4",
      "path": "0"
    },
    "937": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "938": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "939": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "DUP3",
      "path": "0"
    },
    "940": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "941": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "942": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "DUP4",
      "path": "0"
    },
    "943": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "944": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "945": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "946": {
      "fn": "NftCollection.createToken",
      "offset": [
        1777,
        1859
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "947": {
      "fn": "NftCollection.createToken",
      "offset": [
        1777,
        1859
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "948": {
      "op": "POP"
    },
    "949": {
      "fn": "NftCollection.createToken",
      "offset": [
        1777,
        1859
      ],
      "op": "DUP6",
      "path": "0"
    },
    "950": {
      "fn": "NftCollection.createToken",
      "offset": [
        1777,
        1859
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "951": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "953": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "954": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "955": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "MUL",
      "path": "0"
    },
    "956": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "957": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "958": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "ADD",
      "path": "0"
    },
    "959": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "960": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CE"
    },
    "963": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "964": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "DUP5",
      "path": "0"
    },
    "965": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "966": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "967": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "968": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "ADD",
      "path": "0"
    },
    "969": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "970": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E4"
    },
    "973": {
      "fn": "NftCollection.createToken",
      "jump": "i",
      "offset": [
        1869,
        1910
      ],
      "op": "JUMP",
      "path": "0"
    },
    "974": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "975": {
      "op": "POP"
    },
    "976": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "978": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "DUP3",
      "path": "0"
    },
    "979": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "DUP2",
      "path": "0"
    },
    "980": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "ADD",
      "path": "0"
    },
    "981": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "982": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "984": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "DUP4",
      "path": "0"
    },
    "985": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "ADD",
      "path": "0"
    },
    "986": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "987": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "992": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "994": {
      "op": "SHL"
    },
    "995": {
      "op": "SUB"
    },
    "996": {
      "op": "NOT"
    },
    "997": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "AND",
      "path": "0"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1004": {
      "op": "SHL"
    },
    "1005": {
      "op": "SUB"
    },
    "1006": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1007": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1008": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "AND",
      "path": "0"
    },
    "1009": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1010": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1011": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1012": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "OR",
      "path": "0"
    },
    "1013": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1014": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1015": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1017": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1018": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "ADD",
      "path": "0"
    },
    "1019": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1020": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1021": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1022": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1023": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1024": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1025": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1026": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1028": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1029": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "ADD",
      "path": "0"
    },
    "1030": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1031": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x413"
    },
    "1034": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1035": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1036": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1037": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "ADD",
      "path": "0"
    },
    "1038": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1039": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E4"
    },
    "1042": {
      "fn": "NftCollection.createToken",
      "jump": "i",
      "offset": [
        1869,
        1910
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1043": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1044": {
      "op": "POP"
    },
    "1045": {
      "op": "POP"
    },
    "1046": {
      "op": "POP"
    },
    "1047": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1049": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1050": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "ADD",
      "path": "0"
    },
    "1051": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1052": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1053": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1055": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1056": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "ADD",
      "path": "0"
    },
    "1057": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1058": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "1060": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1061": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "ADD",
      "path": "0"
    },
    "1062": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1063": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1065": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1066": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1067": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "ADD",
      "path": "0"
    },
    "1068": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1069": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1070": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1072": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1073": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1074": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "ADD",
      "path": "0"
    },
    "1075": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1076": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1077": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1078": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1081": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "MUL",
      "path": "0"
    },
    "1082": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "1085": {
      "op": "NOT"
    },
    "1086": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1087": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1088": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1091": {
      "op": "NOT"
    },
    "1092": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1093": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1094": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "AND",
      "path": "0"
    },
    "1095": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1096": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1097": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1098": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "OR",
      "path": "0"
    },
    "1099": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1100": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1101": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1102": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "AND",
      "path": "0"
    },
    "1103": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1104": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1105": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1106": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "OR",
      "path": "0"
    },
    "1107": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1108": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1109": {
      "op": "POP"
    },
    "1110": {
      "op": "POP"
    },
    "1111": {
      "fn": "NftCollection.createToken",
      "offset": [
        1920,
        1929
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x2"
    },
    "1113": {
      "fn": "NftCollection.createToken",
      "offset": [
        1920,
        1932
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1114": {
      "fn": "NftCollection.createToken",
      "offset": [
        1920,
        1932
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1115": {
      "fn": "NftCollection.createToken",
      "offset": [
        1920,
        1932
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1120": {
      "fn": "NftCollection.createToken",
      "offset": [
        1920,
        1932
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1121": {
      "fn": "NftCollection.createToken",
      "offset": [
        1920,
        1932
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1122": {
      "fn": "NftCollection.createToken",
      "offset": [
        1920,
        1932
      ],
      "op": "AND",
      "path": "0"
    },
    "1123": {
      "fn": "NftCollection.createToken",
      "offset": [
        1869,
        1910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1125": {
      "fn": "NftCollection.createToken",
      "offset": [
        1920,
        1932
      ],
      "op": "ADD",
      "path": "0"
    },
    "1126": {
      "fn": "NftCollection.createToken",
      "offset": [
        1920,
        1932
      ],
      "op": "AND",
      "path": "0"
    },
    "1127": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1132": {
      "op": "NOT"
    },
    "1133": {
      "fn": "NftCollection.createToken",
      "offset": [
        1920,
        1932
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1134": {
      "fn": "NftCollection.createToken",
      "offset": [
        1920,
        1932
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1135": {
      "fn": "NftCollection.createToken",
      "offset": [
        1920,
        1932
      ],
      "op": "AND",
      "path": "0"
    },
    "1136": {
      "fn": "NftCollection.createToken",
      "offset": [
        1920,
        1932
      ],
      "op": "OR",
      "path": "0"
    },
    "1137": {
      "fn": "NftCollection.createToken",
      "offset": [
        1920,
        1932
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1138": {
      "fn": "NftCollection.createToken",
      "offset": [
        1920,
        1932
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1139": {
      "op": "POP"
    },
    "1140": {
      "op": "POP"
    },
    "1141": {
      "fn": "NftCollection.createToken",
      "jump": "o",
      "offset": [
        1675,
        1939
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1142": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2410,
        2569
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1143": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2458,
        2462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1145": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2474,
        2505
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1146": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2508,
        2520
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x481"
    },
    "1149": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2508,
        2518
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4ED"
    },
    "1152": {
      "fn": "NftCollection.getOpenToPublic",
      "jump": "i",
      "offset": [
        2508,
        2520
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1153": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2508,
        2520
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1154": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2537,
        2562
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x4"
    },
    "1156": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2537,
        2562
      ],
      "op": "ADD",
      "path": "0"
    },
    "1157": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2537,
        2562
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1158": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2537,
        2562
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1161": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2537,
        2562
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1162": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2537,
        2562
      ],
      "op": "DIV",
      "path": "0"
    },
    "1163": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2537,
        2562
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1165": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2537,
        2562
      ],
      "op": "AND",
      "path": "0"
    },
    "1166": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2537,
        2562
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1167": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2410,
        2569
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1168": {
      "op": "POP"
    },
    "1169": {
      "op": "POP"
    },
    "1170": {
      "fn": "NftCollection.getOpenToPublic",
      "jump": "o",
      "offset": [
        2410,
        2569
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1171": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1172": {
      "fn": "Ownable.owner",
      "offset": [
        666,
        673
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1174": {
      "fn": "Ownable.owner",
      "offset": [
        688,
        694
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 11
    },
    "1175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1181": {
      "op": "SHL"
    },
    "1182": {
      "op": "SUB"
    },
    "1183": {
      "fn": "Ownable.owner",
      "offset": [
        688,
        694
      ],
      "op": "AND",
      "path": "1"
    },
    "1184": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1185": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        629,
        699
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1186": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1187": {
      "fn": "Ownable.isOwner",
      "offset": [
        951,
        955
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1189": {
      "fn": "Ownable.isOwner",
      "offset": [
        984,
        990
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 12
    },
    "1190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1196": {
      "op": "SHL"
    },
    "1197": {
      "op": "SUB"
    },
    "1198": {
      "fn": "Ownable.isOwner",
      "offset": [
        984,
        990
      ],
      "op": "AND",
      "path": "1"
    },
    "1199": {
      "fn": "Ownable.isOwner",
      "offset": [
        970,
        980
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1200": {
      "fn": "Ownable.isOwner",
      "offset": [
        970,
        990
      ],
      "op": "EQ",
      "path": "1"
    },
    "1201": {
      "fn": "Ownable.isOwner",
      "offset": [
        970,
        990
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1202": {
      "fn": "Ownable.isOwner",
      "jump": "o",
      "offset": [
        912,
        995
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1203": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1204": {
      "offset": [
        812,
        821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4BB"
    },
    "1207": {
      "offset": [
        812,
        819
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4A2"
    },
    "1210": {
      "jump": "i",
      "offset": [
        812,
        821
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1211": {
      "branch": 20,
      "fn": "Ownable.transferOwnership",
      "offset": [
        812,
        821
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1212": {
      "offset": [
        804,
        822
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4C4"
    },
    "1215": {
      "branch": 20,
      "offset": [
        804,
        822
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1216": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        804,
        822
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1218": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        804,
        822
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1219": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        804,
        822
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1220": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        804,
        822
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1221": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1607,
        1635
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 13,
      "value": "0x4CD"
    },
    "1224": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1626,
        1634
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1225": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1607,
        1625
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x535"
    },
    "1228": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1607,
        1635
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1229": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1607,
        1635
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1230": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "POP",
      "path": "1"
    },
    "1231": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1539,
        1640
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1232": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2034,
        2138
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1233": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2118,
        2131
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x2"
    },
    "1235": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2118,
        2131
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1236": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2118,
        2131
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1241": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2118,
        2131
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x100000000"
    },
    "1247": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2118,
        2131
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1248": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2118,
        2131
      ],
      "op": "DIV",
      "path": "0"
    },
    "1249": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2118,
        2131
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1250": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2118,
        2131
      ],
      "op": "AND",
      "path": "0"
    },
    "1251": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2106,
        2115
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1252": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2106,
        2115
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1253": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2106,
        2115
      ],
      "op": "AND",
      "path": "0"
    },
    "1254": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2106,
        2131
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1255": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2106,
        2131
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1256": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2106,
        2131
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1257": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2106,
        2131
      ],
      "op": "SUB",
      "path": "0"
    },
    "1258": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2099,
        2131
      ],
      "op": "AND",
      "path": "0"
    },
    "1259": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2034,
        2138
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1260": {
      "fn": "NftCollection.getRemainingMints",
      "jump": "o",
      "offset": [
        2034,
        2138
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1261": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3092,
        3311
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1262": {
      "offset": [
        3374,
        3384
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1263": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3145,
        3168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1265": {
      "offset": [
        3356,
        3385
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1266": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3356,
        3385
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1267": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3356,
        3385
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1268": {
      "offset": [
        3356,
        3373
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1270": {
      "offset": [
        3356,
        3385
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1272": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3356,
        3385
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1273": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3356,
        3385
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1275": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3356,
        3385
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1276": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3356,
        3385
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1277": {
      "offset": [
        3356,
        3392
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1278": {
      "offset": [
        3348,
        3397
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x506"
    },
    "1281": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3348,
        3397
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1282": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3348,
        3397
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1284": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3348,
        3397
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1285": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3348,
        3397
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1286": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3348,
        3397
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1287": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3235,
        3245
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1288": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3180,
        3214
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1290": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3217,
        3246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1291": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3217,
        3246
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1292": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3217,
        3246
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1293": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3217,
        3234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1295": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3217,
        3246
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1297": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3217,
        3246
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1298": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3217,
        3246
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1300": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3217,
        3246
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1301": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3217,
        3246
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1302": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3293,
        3304
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 15
    },
    "1303": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3293,
        3304
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1304": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3217,
        3246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1305": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3217,
        3246
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1306": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3217,
        3246
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1307": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3217,
        3246
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1308": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3293,
        3304
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x521"
    },
    "1311": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3293,
        3304
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1312": {
      "dev": "Index out of range",
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3293,
        3304
      ],
      "op": "INVALID",
      "path": "0"
    },
    "1313": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3293,
        3304
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1314": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3293,
        3304
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1315": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3293,
        3304
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1317": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3293,
        3304
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1318": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3293,
        3304
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1320": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3293,
        3304
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1322": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3293,
        3304
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1323": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3293,
        3304
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1324": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3293,
        3304
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1326": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3293,
        3304
      ],
      "op": "MUL",
      "path": "0"
    },
    "1327": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3293,
        3304
      ],
      "op": "ADD",
      "path": "0"
    },
    "1328": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3286,
        3304
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1329": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3286,
        3304
      ],
      "op": "POP",
      "path": "0"
    },
    "1330": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3286,
        3304
      ],
      "op": "POP",
      "path": "0"
    },
    "1331": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        3092,
        3311
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1332": {
      "fn": "NftCollection.getNftInfo",
      "jump": "o",
      "offset": [
        3092,
        3311
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1333": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1771,
        1940
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1340": {
      "op": "SHL"
    },
    "1341": {
      "op": "SUB"
    },
    "1342": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1840,
        1862
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 16
    },
    "1343": {
      "branch": 21,
      "fn": "Ownable._transferOwnership",
      "offset": [
        1840,
        1862
      ],
      "op": "AND",
      "path": "1"
    },
    "1344": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1832,
        1863
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x548"
    },
    "1347": {
      "branch": 21,
      "fn": "Ownable._transferOwnership",
      "offset": [
        1832,
        1863
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1348": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1832,
        1863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1350": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1832,
        1863
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1351": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1832,
        1863
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1352": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1832,
        1863
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1353": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1895,
        1901
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 17,
      "value": "0x0"
    },
    "1355": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1895,
        1901
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1356": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1895,
        1901
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1357": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1874,
        1912
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1359": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1874,
        1912
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1366": {
      "op": "SHL"
    },
    "1367": {
      "op": "SUB"
    },
    "1368": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1874,
        1912
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1369": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1874,
        1912
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1370": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1874,
        1912
      ],
      "op": "AND",
      "path": "1"
    },
    "1371": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1874,
        1912
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1372": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1895,
        1901
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1373": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1895,
        1901
      ],
      "op": "AND",
      "path": "1"
    },
    "1374": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1895,
        1901
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1375": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1874,
        1912
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1408": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1874,
        1912
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1409": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1874,
        1912
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1410": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1924
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 18,
      "value": "0x0"
    },
    "1412": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1413": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1420": {
      "op": "SHL"
    },
    "1421": {
      "op": "SUB"
    },
    "1422": {
      "op": "NOT"
    },
    "1423": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "AND",
      "path": "1"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1430": {
      "op": "SHL"
    },
    "1431": {
      "op": "SUB"
    },
    "1432": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1433": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1434": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1435": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "AND",
      "path": "1"
    },
    "1436": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1437": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1438": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1439": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "OR",
      "path": "1"
    },
    "1440": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1441": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1442": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        1771,
        1940
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1443": {
      "op": "JUMPDEST"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1446": {
      "op": "DUP1"
    },
    "1447": {
      "op": "MLOAD"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1450": {
      "op": "DUP2"
    },
    "1451": {
      "op": "ADD"
    },
    "1452": {
      "op": "DUP3"
    },
    "1453": {
      "op": "MSTORE"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1456": {
      "op": "DUP2"
    },
    "1457": {
      "op": "MSTORE"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1462": {
      "op": "DUP3"
    },
    "1463": {
      "op": "ADD"
    },
    "1464": {
      "op": "MSTORE"
    },
    "1465": {
      "op": "SWAP1"
    },
    "1466": {
      "op": "DUP2"
    },
    "1467": {
      "op": "ADD"
    },
    "1468": {
      "op": "PUSH2",
      "value": "0x5C3"
    },
    "1471": {
      "op": "PUSH2",
      "value": "0x662"
    },
    "1474": {
      "op": "JUMP"
    },
    "1475": {
      "op": "JUMPDEST"
    },
    "1476": {
      "op": "DUP2"
    },
    "1477": {
      "op": "MSTORE"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1480": {
      "op": "ADD"
    },
    "1481": {
      "op": "PUSH2",
      "value": "0x5D0"
    },
    "1484": {
      "op": "PUSH2",
      "value": "0x675"
    },
    "1487": {
      "op": "JUMP"
    },
    "1488": {
      "op": "JUMPDEST"
    },
    "1489": {
      "op": "DUP2"
    },
    "1490": {
      "op": "MSTORE"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1495": {
      "op": "DUP3"
    },
    "1496": {
      "op": "ADD"
    },
    "1497": {
      "op": "DUP2"
    },
    "1498": {
      "op": "SWAP1"
    },
    "1499": {
      "op": "MSTORE"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1502": {
      "op": "SWAP1"
    },
    "1503": {
      "op": "SWAP2"
    },
    "1504": {
      "op": "ADD"
    },
    "1505": {
      "op": "MSTORE"
    },
    "1506": {
      "op": "SWAP1"
    },
    "1507": {
      "op": "JUMP"
    },
    "1508": {
      "op": "JUMPDEST"
    },
    "1509": {
      "op": "DUP3"
    },
    "1510": {
      "op": "DUP1"
    },
    "1511": {
      "op": "SLOAD"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1514": {
      "op": "DUP2"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1517": {
      "op": "AND"
    },
    "1518": {
      "op": "ISZERO"
    },
    "1519": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1522": {
      "op": "MUL"
    },
    "1523": {
      "op": "SUB"
    },
    "1524": {
      "op": "AND"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1527": {
      "op": "SWAP1"
    },
    "1528": {
      "op": "DIV"
    },
    "1529": {
      "op": "SWAP1"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1532": {
      "op": "MSTORE"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1537": {
      "op": "KECCAK256"
    },
    "1538": {
      "op": "SWAP1"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1541": {
      "op": "ADD"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1544": {
      "op": "SWAP1"
    },
    "1545": {
      "op": "DIV"
    },
    "1546": {
      "op": "DUP2"
    },
    "1547": {
      "op": "ADD"
    },
    "1548": {
      "op": "SWAP3"
    },
    "1549": {
      "op": "DUP3"
    },
    "1550": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1552": {
      "op": "LT"
    },
    "1553": {
      "op": "PUSH2",
      "value": "0x625"
    },
    "1556": {
      "op": "JUMPI"
    },
    "1557": {
      "op": "DUP1"
    },
    "1558": {
      "op": "MLOAD"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1561": {
      "op": "NOT"
    },
    "1562": {
      "op": "AND"
    },
    "1563": {
      "op": "DUP4"
    },
    "1564": {
      "op": "DUP1"
    },
    "1565": {
      "op": "ADD"
    },
    "1566": {
      "op": "OR"
    },
    "1567": {
      "op": "DUP6"
    },
    "1568": {
      "op": "SSTORE"
    },
    "1569": {
      "op": "PUSH2",
      "value": "0x652"
    },
    "1572": {
      "op": "JUMP"
    },
    "1573": {
      "op": "JUMPDEST"
    },
    "1574": {
      "op": "DUP3"
    },
    "1575": {
      "op": "DUP1"
    },
    "1576": {
      "op": "ADD"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1579": {
      "op": "ADD"
    },
    "1580": {
      "op": "DUP6"
    },
    "1581": {
      "op": "SSTORE"
    },
    "1582": {
      "op": "DUP3"
    },
    "1583": {
      "op": "ISZERO"
    },
    "1584": {
      "op": "PUSH2",
      "value": "0x652"
    },
    "1587": {
      "op": "JUMPI"
    },
    "1588": {
      "op": "SWAP2"
    },
    "1589": {
      "op": "DUP3"
    },
    "1590": {
      "op": "ADD"
    },
    "1591": {
      "op": "JUMPDEST"
    },
    "1592": {
      "op": "DUP3"
    },
    "1593": {
      "op": "DUP2"
    },
    "1594": {
      "op": "GT"
    },
    "1595": {
      "op": "ISZERO"
    },
    "1596": {
      "op": "PUSH2",
      "value": "0x652"
    },
    "1599": {
      "op": "JUMPI"
    },
    "1600": {
      "op": "DUP3"
    },
    "1601": {
      "op": "MLOAD"
    },
    "1602": {
      "op": "DUP3"
    },
    "1603": {
      "op": "SSTORE"
    },
    "1604": {
      "op": "SWAP2"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1607": {
      "op": "ADD"
    },
    "1608": {
      "op": "SWAP2"
    },
    "1609": {
      "op": "SWAP1"
    },
    "1610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1612": {
      "op": "ADD"
    },
    "1613": {
      "op": "SWAP1"
    },
    "1614": {
      "op": "PUSH2",
      "value": "0x637"
    },
    "1617": {
      "op": "JUMP"
    },
    "1618": {
      "op": "JUMPDEST"
    },
    "1619": {
      "op": "POP"
    },
    "1620": {
      "op": "PUSH2",
      "value": "0x65E"
    },
    "1623": {
      "op": "SWAP3"
    },
    "1624": {
      "op": "SWAP2"
    },
    "1625": {
      "op": "POP"
    },
    "1626": {
      "op": "PUSH2",
      "value": "0x688"
    },
    "1629": {
      "op": "JUMP"
    },
    "1630": {
      "op": "JUMPDEST"
    },
    "1631": {
      "op": "POP"
    },
    "1632": {
      "op": "SWAP1"
    },
    "1633": {
      "op": "JUMP"
    },
    "1634": {
      "op": "JUMPDEST"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1637": {
      "op": "MLOAD"
    },
    "1638": {
      "op": "DUP1"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1641": {
      "op": "ADD"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1644": {
      "op": "MSTORE"
    },
    "1645": {
      "op": "DUP1"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1648": {
      "op": "DUP2"
    },
    "1649": {
      "op": "MSTORE"
    },
    "1650": {
      "op": "POP"
    },
    "1651": {
      "op": "SWAP1"
    },
    "1652": {
      "op": "JUMP"
    },
    "1653": {
      "op": "JUMPDEST"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1656": {
      "op": "MLOAD"
    },
    "1657": {
      "op": "DUP1"
    },
    "1658": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1660": {
      "op": "ADD"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1663": {
      "op": "MSTORE"
    },
    "1664": {
      "op": "DUP1"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1667": {
      "op": "DUP2"
    },
    "1668": {
      "op": "MSTORE"
    },
    "1669": {
      "op": "POP"
    },
    "1670": {
      "op": "SWAP1"
    },
    "1671": {
      "op": "JUMP"
    },
    "1672": {
      "op": "JUMPDEST"
    },
    "1673": {
      "op": "JUMPDEST"
    },
    "1674": {
      "op": "DUP1"
    },
    "1675": {
      "op": "DUP3"
    },
    "1676": {
      "op": "GT"
    },
    "1677": {
      "op": "ISZERO"
    },
    "1678": {
      "op": "PUSH2",
      "value": "0x65E"
    },
    "1681": {
      "op": "JUMPI"
    },
    "1682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1684": {
      "op": "DUP2"
    },
    "1685": {
      "op": "SSTORE"
    },
    "1686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1688": {
      "op": "ADD"
    },
    "1689": {
      "op": "PUSH2",
      "value": "0x689"
    },
    "1692": {
      "op": "JUMP"
    },
    "1693": {
      "op": "JUMPDEST"
    },
    "1694": {
      "op": "DUP1"
    },
    "1695": {
      "op": "MLOAD"
    },
    "1696": {
      "op": "PUSH2",
      "value": "0x6A8"
    },
    "1699": {
      "op": "DUP2"
    },
    "1700": {
      "op": "PUSH2",
      "value": "0xA47"
    },
    "1703": {
      "op": "JUMP"
    },
    "1704": {
      "op": "JUMPDEST"
    },
    "1705": {
      "op": "SWAP3"
    },
    "1706": {
      "op": "SWAP2"
    },
    "1707": {
      "op": "POP"
    },
    "1708": {
      "op": "POP"
    },
    "1709": {
      "op": "JUMP"
    },
    "1710": {
      "op": "JUMPDEST"
    },
    "1711": {
      "op": "DUP1"
    },
    "1712": {
      "op": "MLOAD"
    },
    "1713": {
      "op": "DUP1"
    },
    "1714": {
      "op": "ISZERO"
    },
    "1715": {
      "op": "ISZERO"
    },
    "1716": {
      "op": "DUP2"
    },
    "1717": {
      "op": "EQ"
    },
    "1718": {
      "op": "PUSH2",
      "value": "0x6A8"
    },
    "1721": {
      "op": "JUMPI"
    },
    "1722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1724": {
      "op": "DUP1"
    },
    "1725": {
      "op": "REVERT"
    },
    "1726": {
      "op": "JUMPDEST"
    },
    "1727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1729": {
      "op": "DUP3"
    },
    "1730": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1732": {
      "op": "DUP4"
    },
    "1733": {
      "op": "ADD"
    },
    "1734": {
      "op": "SLT"
    },
    "1735": {
      "op": "PUSH2",
      "value": "0x6CE"
    },
    "1738": {
      "op": "JUMPI"
    },
    "1739": {
      "op": "DUP1"
    },
    "1740": {
      "op": "DUP2"
    },
    "1741": {
      "op": "REVERT"
    },
    "1742": {
      "op": "JUMPDEST"
    },
    "1743": {
      "op": "DUP2"
    },
    "1744": {
      "op": "CALLDATALOAD"
    },
    "1745": {
      "op": "PUSH2",
      "value": "0x6E1"
    },
    "1748": {
      "op": "PUSH2",
      "value": "0x6DC"
    },
    "1751": {
      "op": "DUP3"
    },
    "1752": {
      "op": "PUSH2",
      "value": "0x9F3"
    },
    "1755": {
      "op": "JUMP"
    },
    "1756": {
      "op": "JUMPDEST"
    },
    "1757": {
      "op": "PUSH2",
      "value": "0x9CC"
    },
    "1760": {
      "op": "JUMP"
    },
    "1761": {
      "op": "JUMPDEST"
    },
    "1762": {
      "op": "SWAP2"
    },
    "1763": {
      "op": "POP"
    },
    "1764": {
      "op": "DUP1"
    },
    "1765": {
      "op": "DUP3"
    },
    "1766": {
      "op": "MSTORE"
    },
    "1767": {
      "op": "DUP4"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1770": {
      "op": "DUP3"
    },
    "1771": {
      "op": "DUP6"
    },
    "1772": {
      "op": "ADD"
    },
    "1773": {
      "op": "ADD"
    },
    "1774": {
      "op": "GT"
    },
    "1775": {
      "op": "ISZERO"
    },
    "1776": {
      "op": "PUSH2",
      "value": "0x6F8"
    },
    "1779": {
      "op": "JUMPI"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1782": {
      "op": "DUP1"
    },
    "1783": {
      "op": "REVERT"
    },
    "1784": {
      "op": "JUMPDEST"
    },
    "1785": {
      "op": "DUP1"
    },
    "1786": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1788": {
      "op": "DUP5"
    },
    "1789": {
      "op": "ADD"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1792": {
      "op": "DUP5"
    },
    "1793": {
      "op": "ADD"
    },
    "1794": {
      "op": "CALLDATACOPY"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1797": {
      "op": "SWAP1"
    },
    "1798": {
      "op": "DUP3"
    },
    "1799": {
      "op": "ADD"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1802": {
      "op": "ADD"
    },
    "1803": {
      "op": "MSTORE"
    },
    "1804": {
      "op": "SWAP3"
    },
    "1805": {
      "op": "SWAP2"
    },
    "1806": {
      "op": "POP"
    },
    "1807": {
      "op": "POP"
    },
    "1808": {
      "op": "JUMP"
    },
    "1809": {
      "op": "JUMPDEST"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1812": {
      "op": "DUP3"
    },
    "1813": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1815": {
      "op": "DUP4"
    },
    "1816": {
      "op": "ADD"
    },
    "1817": {
      "op": "SLT"
    },
    "1818": {
      "op": "PUSH2",
      "value": "0x721"
    },
    "1821": {
      "op": "JUMPI"
    },
    "1822": {
      "op": "DUP1"
    },
    "1823": {
      "op": "DUP2"
    },
    "1824": {
      "op": "REVERT"
    },
    "1825": {
      "op": "JUMPDEST"
    },
    "1826": {
      "op": "DUP2"
    },
    "1827": {
      "op": "MLOAD"
    },
    "1828": {
      "op": "PUSH2",
      "value": "0x72F"
    },
    "1831": {
      "op": "PUSH2",
      "value": "0x6DC"
    },
    "1834": {
      "op": "DUP3"
    },
    "1835": {
      "op": "PUSH2",
      "value": "0x9F3"
    },
    "1838": {
      "op": "JUMP"
    },
    "1839": {
      "op": "JUMPDEST"
    },
    "1840": {
      "op": "SWAP2"
    },
    "1841": {
      "op": "POP"
    },
    "1842": {
      "op": "DUP1"
    },
    "1843": {
      "op": "DUP3"
    },
    "1844": {
      "op": "MSTORE"
    },
    "1845": {
      "op": "DUP4"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1848": {
      "op": "DUP3"
    },
    "1849": {
      "op": "DUP6"
    },
    "1850": {
      "op": "ADD"
    },
    "1851": {
      "op": "ADD"
    },
    "1852": {
      "op": "GT"
    },
    "1853": {
      "op": "ISZERO"
    },
    "1854": {
      "op": "PUSH2",
      "value": "0x746"
    },
    "1857": {
      "op": "JUMPI"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1860": {
      "op": "DUP1"
    },
    "1861": {
      "op": "REVERT"
    },
    "1862": {
      "op": "JUMPDEST"
    },
    "1863": {
      "op": "PUSH2",
      "value": "0x757"
    },
    "1866": {
      "op": "DUP2"
    },
    "1867": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1869": {
      "op": "DUP5"
    },
    "1870": {
      "op": "ADD"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1873": {
      "op": "DUP7"
    },
    "1874": {
      "op": "ADD"
    },
    "1875": {
      "op": "PUSH2",
      "value": "0xA17"
    },
    "1878": {
      "op": "JUMP"
    },
    "1879": {
      "op": "JUMPDEST"
    },
    "1880": {
      "op": "POP"
    },
    "1881": {
      "op": "SWAP3"
    },
    "1882": {
      "op": "SWAP2"
    },
    "1883": {
      "op": "POP"
    },
    "1884": {
      "op": "POP"
    },
    "1885": {
      "op": "JUMP"
    },
    "1886": {
      "op": "JUMPDEST"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1891": {
      "op": "DUP3"
    },
    "1892": {
      "op": "DUP5"
    },
    "1893": {
      "op": "SUB"
    },
    "1894": {
      "op": "SLT"
    },
    "1895": {
      "op": "ISZERO"
    },
    "1896": {
      "op": "PUSH2",
      "value": "0x76F"
    },
    "1899": {
      "op": "JUMPI"
    },
    "1900": {
      "op": "DUP1"
    },
    "1901": {
      "op": "DUP2"
    },
    "1902": {
      "op": "REVERT"
    },
    "1903": {
      "op": "JUMPDEST"
    },
    "1904": {
      "op": "PUSH2",
      "value": "0x779"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1909": {
      "op": "PUSH2",
      "value": "0x9CC"
    },
    "1912": {
      "op": "JUMP"
    },
    "1913": {
      "op": "JUMPDEST"
    },
    "1914": {
      "op": "SWAP1"
    },
    "1915": {
      "op": "POP"
    },
    "1916": {
      "op": "DUP2"
    },
    "1917": {
      "op": "MLOAD"
    },
    "1918": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1927": {
      "op": "DUP2"
    },
    "1928": {
      "op": "GT"
    },
    "1929": {
      "op": "ISZERO"
    },
    "1930": {
      "op": "PUSH2",
      "value": "0x792"
    },
    "1933": {
      "op": "JUMPI"
    },
    "1934": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1936": {
      "op": "DUP1"
    },
    "1937": {
      "op": "REVERT"
    },
    "1938": {
      "op": "JUMPDEST"
    },
    "1939": {
      "op": "PUSH2",
      "value": "0x79E"
    },
    "1942": {
      "op": "DUP5"
    },
    "1943": {
      "op": "DUP3"
    },
    "1944": {
      "op": "DUP6"
    },
    "1945": {
      "op": "ADD"
    },
    "1946": {
      "op": "PUSH2",
      "value": "0x711"
    },
    "1949": {
      "op": "JUMP"
    },
    "1950": {
      "op": "JUMPDEST"
    },
    "1951": {
      "op": "DUP3"
    },
    "1952": {
      "op": "MSTORE"
    },
    "1953": {
      "op": "POP"
    },
    "1954": {
      "op": "SWAP3"
    },
    "1955": {
      "op": "SWAP2"
    },
    "1956": {
      "op": "POP"
    },
    "1957": {
      "op": "POP"
    },
    "1958": {
      "op": "JUMP"
    },
    "1959": {
      "op": "JUMPDEST"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1964": {
      "op": "DUP3"
    },
    "1965": {
      "op": "DUP5"
    },
    "1966": {
      "op": "SUB"
    },
    "1967": {
      "op": "SLT"
    },
    "1968": {
      "op": "ISZERO"
    },
    "1969": {
      "op": "PUSH2",
      "value": "0x7B8"
    },
    "1972": {
      "op": "JUMPI"
    },
    "1973": {
      "op": "DUP1"
    },
    "1974": {
      "op": "DUP2"
    },
    "1975": {
      "op": "REVERT"
    },
    "1976": {
      "op": "JUMPDEST"
    },
    "1977": {
      "op": "PUSH2",
      "value": "0x7C2"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1982": {
      "op": "PUSH2",
      "value": "0x9CC"
    },
    "1985": {
      "op": "JUMP"
    },
    "1986": {
      "op": "JUMPDEST"
    },
    "1987": {
      "op": "SWAP2"
    },
    "1988": {
      "op": "MLOAD"
    },
    "1989": {
      "op": "DUP3"
    },
    "1990": {
      "op": "MSTORE"
    },
    "1991": {
      "op": "POP"
    },
    "1992": {
      "op": "SWAP2"
    },
    "1993": {
      "op": "SWAP1"
    },
    "1994": {
      "op": "POP"
    },
    "1995": {
      "op": "JUMP"
    },
    "1996": {
      "op": "JUMPDEST"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1999": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2001": {
      "op": "DUP3"
    },
    "2002": {
      "op": "DUP5"
    },
    "2003": {
      "op": "SUB"
    },
    "2004": {
      "op": "SLT"
    },
    "2005": {
      "op": "ISZERO"
    },
    "2006": {
      "op": "PUSH2",
      "value": "0x7DD"
    },
    "2009": {
      "op": "JUMPI"
    },
    "2010": {
      "op": "DUP1"
    },
    "2011": {
      "op": "DUP2"
    },
    "2012": {
      "op": "REVERT"
    },
    "2013": {
      "op": "JUMPDEST"
    },
    "2014": {
      "op": "DUP2"
    },
    "2015": {
      "op": "CALLDATALOAD"
    },
    "2016": {
      "op": "PUSH2",
      "value": "0x7E8"
    },
    "2019": {
      "op": "DUP2"
    },
    "2020": {
      "op": "PUSH2",
      "value": "0xA47"
    },
    "2023": {
      "op": "JUMP"
    },
    "2024": {
      "op": "JUMPDEST"
    },
    "2025": {
      "op": "SWAP4"
    },
    "2026": {
      "op": "SWAP3"
    },
    "2027": {
      "op": "POP"
    },
    "2028": {
      "op": "POP"
    },
    "2029": {
      "op": "POP"
    },
    "2030": {
      "op": "JUMP"
    },
    "2031": {
      "op": "JUMPDEST"
    },
    "2032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2034": {
      "op": "DUP1"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2039": {
      "op": "DUP5"
    },
    "2040": {
      "op": "DUP7"
    },
    "2041": {
      "op": "SUB"
    },
    "2042": {
      "op": "SLT"
    },
    "2043": {
      "op": "ISZERO"
    },
    "2044": {
      "op": "PUSH2",
      "value": "0x803"
    },
    "2047": {
      "op": "JUMPI"
    },
    "2048": {
      "op": "DUP2"
    },
    "2049": {
      "op": "DUP3"
    },
    "2050": {
      "op": "REVERT"
    },
    "2051": {
      "op": "JUMPDEST"
    },
    "2052": {
      "op": "DUP4"
    },
    "2053": {
      "op": "CALLDATALOAD"
    },
    "2054": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2063": {
      "op": "DUP1"
    },
    "2064": {
      "op": "DUP3"
    },
    "2065": {
      "op": "GT"
    },
    "2066": {
      "op": "ISZERO"
    },
    "2067": {
      "op": "PUSH2",
      "value": "0x81A"
    },
    "2070": {
      "op": "JUMPI"
    },
    "2071": {
      "op": "DUP4"
    },
    "2072": {
      "op": "DUP5"
    },
    "2073": {
      "op": "REVERT"
    },
    "2074": {
      "op": "JUMPDEST"
    },
    "2075": {
      "op": "PUSH2",
      "value": "0x826"
    },
    "2078": {
      "op": "DUP8"
    },
    "2079": {
      "op": "DUP4"
    },
    "2080": {
      "op": "DUP9"
    },
    "2081": {
      "op": "ADD"
    },
    "2082": {
      "op": "PUSH2",
      "value": "0x6BE"
    },
    "2085": {
      "op": "JUMP"
    },
    "2086": {
      "op": "JUMPDEST"
    },
    "2087": {
      "op": "SWAP5"
    },
    "2088": {
      "op": "POP"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2091": {
      "op": "DUP7"
    },
    "2092": {
      "op": "ADD"
    },
    "2093": {
      "op": "CALLDATALOAD"
    },
    "2094": {
      "op": "SWAP2"
    },
    "2095": {
      "op": "POP"
    },
    "2096": {
      "op": "PUSH2",
      "value": "0x838"
    },
    "2099": {
      "op": "DUP3"
    },
    "2100": {
      "op": "PUSH2",
      "value": "0xA47"
    },
    "2103": {
      "op": "JUMP"
    },
    "2104": {
      "op": "JUMPDEST"
    },
    "2105": {
      "op": "SWAP1"
    },
    "2106": {
      "op": "SWAP3"
    },
    "2107": {
      "op": "POP"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2110": {
      "op": "DUP6"
    },
    "2111": {
      "op": "ADD"
    },
    "2112": {
      "op": "CALLDATALOAD"
    },
    "2113": {
      "op": "SWAP1"
    },
    "2114": {
      "op": "DUP1"
    },
    "2115": {
      "op": "DUP3"
    },
    "2116": {
      "op": "GT"
    },
    "2117": {
      "op": "ISZERO"
    },
    "2118": {
      "op": "PUSH2",
      "value": "0x84D"
    },
    "2121": {
      "op": "JUMPI"
    },
    "2122": {
      "op": "DUP3"
    },
    "2123": {
      "op": "DUP4"
    },
    "2124": {
      "op": "REVERT"
    },
    "2125": {
      "op": "JUMPDEST"
    },
    "2126": {
      "op": "POP"
    },
    "2127": {
      "op": "PUSH2",
      "value": "0x85A"
    },
    "2130": {
      "op": "DUP7"
    },
    "2131": {
      "op": "DUP3"
    },
    "2132": {
      "op": "DUP8"
    },
    "2133": {
      "op": "ADD"
    },
    "2134": {
      "op": "PUSH2",
      "value": "0x6BE"
    },
    "2137": {
      "op": "JUMP"
    },
    "2138": {
      "op": "JUMPDEST"
    },
    "2139": {
      "op": "SWAP2"
    },
    "2140": {
      "op": "POP"
    },
    "2141": {
      "op": "POP"
    },
    "2142": {
      "op": "SWAP3"
    },
    "2143": {
      "op": "POP"
    },
    "2144": {
      "op": "SWAP3"
    },
    "2145": {
      "op": "POP"
    },
    "2146": {
      "op": "SWAP3"
    },
    "2147": {
      "op": "JUMP"
    },
    "2148": {
      "op": "JUMPDEST"
    },
    "2149": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2153": {
      "op": "DUP3"
    },
    "2154": {
      "op": "DUP5"
    },
    "2155": {
      "op": "SUB"
    },
    "2156": {
      "op": "SLT"
    },
    "2157": {
      "op": "ISZERO"
    },
    "2158": {
      "op": "PUSH2",
      "value": "0x875"
    },
    "2161": {
      "op": "JUMPI"
    },
    "2162": {
      "op": "DUP1"
    },
    "2163": {
      "op": "DUP2"
    },
    "2164": {
      "op": "REVERT"
    },
    "2165": {
      "op": "JUMPDEST"
    },
    "2166": {
      "op": "DUP2"
    },
    "2167": {
      "op": "MLOAD"
    },
    "2168": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2177": {
      "op": "DUP1"
    },
    "2178": {
      "op": "DUP3"
    },
    "2179": {
      "op": "GT"
    },
    "2180": {
      "op": "ISZERO"
    },
    "2181": {
      "op": "PUSH2",
      "value": "0x88C"
    },
    "2184": {
      "op": "JUMPI"
    },
    "2185": {
      "op": "DUP3"
    },
    "2186": {
      "op": "DUP4"
    },
    "2187": {
      "op": "REVERT"
    },
    "2188": {
      "op": "JUMPDEST"
    },
    "2189": {
      "op": "SWAP1"
    },
    "2190": {
      "op": "DUP4"
    },
    "2191": {
      "op": "ADD"
    },
    "2192": {
      "op": "SWAP1"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2195": {
      "op": "DUP3"
    },
    "2196": {
      "op": "DUP7"
    },
    "2197": {
      "op": "SUB"
    },
    "2198": {
      "op": "SLT"
    },
    "2199": {
      "op": "ISZERO"
    },
    "2200": {
      "op": "PUSH2",
      "value": "0x89F"
    },
    "2203": {
      "op": "JUMPI"
    },
    "2204": {
      "op": "DUP3"
    },
    "2205": {
      "op": "DUP4"
    },
    "2206": {
      "op": "REVERT"
    },
    "2207": {
      "op": "JUMPDEST"
    },
    "2208": {
      "op": "PUSH2",
      "value": "0x8A9"
    },
    "2211": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2213": {
      "op": "PUSH2",
      "value": "0x9CC"
    },
    "2216": {
      "op": "JUMP"
    },
    "2217": {
      "op": "JUMPDEST"
    },
    "2218": {
      "op": "DUP3"
    },
    "2219": {
      "op": "MLOAD"
    },
    "2220": {
      "op": "DUP3"
    },
    "2221": {
      "op": "DUP2"
    },
    "2222": {
      "op": "GT"
    },
    "2223": {
      "op": "ISZERO"
    },
    "2224": {
      "op": "PUSH2",
      "value": "0x8B7"
    },
    "2227": {
      "op": "JUMPI"
    },
    "2228": {
      "op": "DUP5"
    },
    "2229": {
      "op": "DUP6"
    },
    "2230": {
      "op": "REVERT"
    },
    "2231": {
      "op": "JUMPDEST"
    },
    "2232": {
      "op": "PUSH2",
      "value": "0x8C3"
    },
    "2235": {
      "op": "DUP8"
    },
    "2236": {
      "op": "DUP3"
    },
    "2237": {
      "op": "DUP7"
    },
    "2238": {
      "op": "ADD"
    },
    "2239": {
      "op": "PUSH2",
      "value": "0x711"
    },
    "2242": {
      "op": "JUMP"
    },
    "2243": {
      "op": "JUMPDEST"
    },
    "2244": {
      "op": "DUP3"
    },
    "2245": {
      "op": "MSTORE"
    },
    "2246": {
      "op": "POP"
    },
    "2247": {
      "op": "PUSH2",
      "value": "0x8D3"
    },
    "2250": {
      "op": "DUP7"
    },
    "2251": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2253": {
      "op": "DUP6"
    },
    "2254": {
      "op": "ADD"
    },
    "2255": {
      "op": "PUSH2",
      "value": "0x69D"
    },
    "2258": {
      "op": "JUMP"
    },
    "2259": {
      "op": "JUMPDEST"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2262": {
      "op": "DUP3"
    },
    "2263": {
      "op": "ADD"
    },
    "2264": {
      "op": "MSTORE"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2267": {
      "op": "DUP4"
    },
    "2268": {
      "op": "ADD"
    },
    "2269": {
      "op": "MLOAD"
    },
    "2270": {
      "op": "DUP3"
    },
    "2271": {
      "op": "DUP2"
    },
    "2272": {
      "op": "GT"
    },
    "2273": {
      "op": "ISZERO"
    },
    "2274": {
      "op": "PUSH2",
      "value": "0x8E9"
    },
    "2277": {
      "op": "JUMPI"
    },
    "2278": {
      "op": "DUP5"
    },
    "2279": {
      "op": "DUP6"
    },
    "2280": {
      "op": "REVERT"
    },
    "2281": {
      "op": "JUMPDEST"
    },
    "2282": {
      "op": "PUSH2",
      "value": "0x8F5"
    },
    "2285": {
      "op": "DUP8"
    },
    "2286": {
      "op": "DUP3"
    },
    "2287": {
      "op": "DUP7"
    },
    "2288": {
      "op": "ADD"
    },
    "2289": {
      "op": "PUSH2",
      "value": "0x75E"
    },
    "2292": {
      "op": "JUMP"
    },
    "2293": {
      "op": "JUMPDEST"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2296": {
      "op": "DUP4"
    },
    "2297": {
      "op": "ADD"
    },
    "2298": {
      "op": "MSTORE"
    },
    "2299": {
      "op": "POP"
    },
    "2300": {
      "op": "PUSH2",
      "value": "0x908"
    },
    "2303": {
      "op": "DUP7"
    },
    "2304": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2306": {
      "op": "DUP6"
    },
    "2307": {
      "op": "ADD"
    },
    "2308": {
      "op": "PUSH2",
      "value": "0x7A7"
    },
    "2311": {
      "op": "JUMP"
    },
    "2312": {
      "op": "JUMPDEST"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2315": {
      "op": "DUP3"
    },
    "2316": {
      "op": "ADD"
    },
    "2317": {
      "op": "MSTORE"
    },
    "2318": {
      "op": "PUSH2",
      "value": "0x91A"
    },
    "2321": {
      "op": "DUP7"
    },
    "2322": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2324": {
      "op": "DUP6"
    },
    "2325": {
      "op": "ADD"
    },
    "2326": {
      "op": "PUSH2",
      "value": "0x6AE"
    },
    "2329": {
      "op": "JUMP"
    },
    "2330": {
      "op": "JUMPDEST"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2333": {
      "op": "DUP3"
    },
    "2334": {
      "op": "ADD"
    },
    "2335": {
      "op": "MSTORE"
    },
    "2336": {
      "op": "PUSH2",
      "value": "0x92C"
    },
    "2339": {
      "op": "DUP7"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2342": {
      "op": "DUP6"
    },
    "2343": {
      "op": "ADD"
    },
    "2344": {
      "op": "PUSH2",
      "value": "0x6AE"
    },
    "2347": {
      "op": "JUMP"
    },
    "2348": {
      "op": "JUMPDEST"
    },
    "2349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2351": {
      "op": "DUP3"
    },
    "2352": {
      "op": "ADD"
    },
    "2353": {
      "op": "MSTORE"
    },
    "2354": {
      "op": "SWAP6"
    },
    "2355": {
      "op": "SWAP5"
    },
    "2356": {
      "op": "POP"
    },
    "2357": {
      "op": "POP"
    },
    "2358": {
      "op": "POP"
    },
    "2359": {
      "op": "POP"
    },
    "2360": {
      "op": "POP"
    },
    "2361": {
      "op": "JUMP"
    },
    "2362": {
      "op": "JUMPDEST"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2365": {
      "op": "DUP2"
    },
    "2366": {
      "op": "MLOAD"
    },
    "2367": {
      "op": "DUP1"
    },
    "2368": {
      "op": "DUP5"
    },
    "2369": {
      "op": "MSTORE"
    },
    "2370": {
      "op": "PUSH2",
      "value": "0x952"
    },
    "2373": {
      "op": "DUP2"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2376": {
      "op": "DUP7"
    },
    "2377": {
      "op": "ADD"
    },
    "2378": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2380": {
      "op": "DUP7"
    },
    "2381": {
      "op": "ADD"
    },
    "2382": {
      "op": "PUSH2",
      "value": "0xA17"
    },
    "2385": {
      "op": "JUMP"
    },
    "2386": {
      "op": "JUMPDEST"
    },
    "2387": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2389": {
      "op": "ADD"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2392": {
      "op": "NOT"
    },
    "2393": {
      "op": "AND"
    },
    "2394": {
      "op": "SWAP3"
    },
    "2395": {
      "op": "SWAP1"
    },
    "2396": {
      "op": "SWAP3"
    },
    "2397": {
      "op": "ADD"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2400": {
      "op": "ADD"
    },
    "2401": {
      "op": "SWAP3"
    },
    "2402": {
      "op": "SWAP2"
    },
    "2403": {
      "op": "POP"
    },
    "2404": {
      "op": "POP"
    },
    "2405": {
      "op": "JUMP"
    },
    "2406": {
      "op": "JUMPDEST"
    },
    "2407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2411": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2413": {
      "op": "SHL"
    },
    "2414": {
      "op": "SUB"
    },
    "2415": {
      "op": "SWAP2"
    },
    "2416": {
      "op": "SWAP1"
    },
    "2417": {
      "op": "SWAP2"
    },
    "2418": {
      "op": "AND"
    },
    "2419": {
      "op": "DUP2"
    },
    "2420": {
      "op": "MSTORE"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2423": {
      "op": "ADD"
    },
    "2424": {
      "op": "SWAP1"
    },
    "2425": {
      "op": "JUMP"
    },
    "2426": {
      "op": "JUMPDEST"
    },
    "2427": {
      "op": "SWAP1"
    },
    "2428": {
      "op": "ISZERO"
    },
    "2429": {
      "op": "ISZERO"
    },
    "2430": {
      "op": "DUP2"
    },
    "2431": {
      "op": "MSTORE"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2434": {
      "op": "ADD"
    },
    "2435": {
      "op": "SWAP1"
    },
    "2436": {
      "op": "JUMP"
    },
    "2437": {
      "op": "JUMPDEST"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2442": {
      "op": "DUP3"
    },
    "2443": {
      "op": "MSTORE"
    },
    "2444": {
      "op": "PUSH2",
      "value": "0x998"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2449": {
      "op": "DUP4"
    },
    "2450": {
      "op": "ADD"
    },
    "2451": {
      "op": "DUP7"
    },
    "2452": {
      "op": "PUSH2",
      "value": "0x93A"
    },
    "2455": {
      "op": "JUMP"
    },
    "2456": {
      "op": "JUMPDEST"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2463": {
      "op": "SHL"
    },
    "2464": {
      "op": "SUB"
    },
    "2465": {
      "op": "DUP6"
    },
    "2466": {
      "op": "AND"
    },
    "2467": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2469": {
      "op": "DUP5"
    },
    "2470": {
      "op": "ADD"
    },
    "2471": {
      "op": "MSTORE"
    },
    "2472": {
      "op": "DUP3"
    },
    "2473": {
      "op": "DUP2"
    },
    "2474": {
      "op": "SUB"
    },
    "2475": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2477": {
      "op": "DUP5"
    },
    "2478": {
      "op": "ADD"
    },
    "2479": {
      "op": "MSTORE"
    },
    "2480": {
      "op": "PUSH2",
      "value": "0x9B9"
    },
    "2483": {
      "op": "DUP2"
    },
    "2484": {
      "op": "DUP6"
    },
    "2485": {
      "op": "PUSH2",
      "value": "0x93A"
    },
    "2488": {
      "op": "JUMP"
    },
    "2489": {
      "op": "JUMPDEST"
    },
    "2490": {
      "op": "SWAP7"
    },
    "2491": {
      "op": "SWAP6"
    },
    "2492": {
      "op": "POP"
    },
    "2493": {
      "op": "POP"
    },
    "2494": {
      "op": "POP"
    },
    "2495": {
      "op": "POP"
    },
    "2496": {
      "op": "POP"
    },
    "2497": {
      "op": "POP"
    },
    "2498": {
      "op": "JUMP"
    },
    "2499": {
      "op": "JUMPDEST"
    },
    "2500": {
      "op": "SWAP1"
    },
    "2501": {
      "op": "DUP2"
    },
    "2502": {
      "op": "MSTORE"
    },
    "2503": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2505": {
      "op": "ADD"
    },
    "2506": {
      "op": "SWAP1"
    },
    "2507": {
      "op": "JUMP"
    },
    "2508": {
      "op": "JUMPDEST"
    },
    "2509": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2511": {
      "op": "MLOAD"
    },
    "2512": {
      "op": "DUP2"
    },
    "2513": {
      "op": "DUP2"
    },
    "2514": {
      "op": "ADD"
    },
    "2515": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2524": {
      "op": "DUP2"
    },
    "2525": {
      "op": "GT"
    },
    "2526": {
      "op": "DUP3"
    },
    "2527": {
      "op": "DUP3"
    },
    "2528": {
      "op": "LT"
    },
    "2529": {
      "op": "OR"
    },
    "2530": {
      "op": "ISZERO"
    },
    "2531": {
      "op": "PUSH2",
      "value": "0x9EB"
    },
    "2534": {
      "op": "JUMPI"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2537": {
      "op": "DUP1"
    },
    "2538": {
      "op": "REVERT"
    },
    "2539": {
      "op": "JUMPDEST"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2542": {
      "op": "MSTORE"
    },
    "2543": {
      "op": "SWAP2"
    },
    "2544": {
      "op": "SWAP1"
    },
    "2545": {
      "op": "POP"
    },
    "2546": {
      "op": "JUMP"
    },
    "2547": {
      "op": "JUMPDEST"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2550": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2559": {
      "op": "DUP3"
    },
    "2560": {
      "op": "GT"
    },
    "2561": {
      "op": "ISZERO"
    },
    "2562": {
      "op": "PUSH2",
      "value": "0xA09"
    },
    "2565": {
      "op": "JUMPI"
    },
    "2566": {
      "op": "DUP1"
    },
    "2567": {
      "op": "DUP2"
    },
    "2568": {
      "op": "REVERT"
    },
    "2569": {
      "op": "JUMPDEST"
    },
    "2570": {
      "op": "POP"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2573": {
      "op": "ADD"
    },
    "2574": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2576": {
      "op": "NOT"
    },
    "2577": {
      "op": "AND"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2580": {
      "op": "ADD"
    },
    "2581": {
      "op": "SWAP1"
    },
    "2582": {
      "op": "JUMP"
    },
    "2583": {
      "op": "JUMPDEST"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2586": {
      "op": "JUMPDEST"
    },
    "2587": {
      "op": "DUP4"
    },
    "2588": {
      "op": "DUP2"
    },
    "2589": {
      "op": "LT"
    },
    "2590": {
      "op": "ISZERO"
    },
    "2591": {
      "op": "PUSH2",
      "value": "0xA32"
    },
    "2594": {
      "op": "JUMPI"
    },
    "2595": {
      "op": "DUP2"
    },
    "2596": {
      "op": "DUP2"
    },
    "2597": {
      "op": "ADD"
    },
    "2598": {
      "op": "MLOAD"
    },
    "2599": {
      "op": "DUP4"
    },
    "2600": {
      "op": "DUP3"
    },
    "2601": {
      "op": "ADD"
    },
    "2602": {
      "op": "MSTORE"
    },
    "2603": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2605": {
      "op": "ADD"
    },
    "2606": {
      "op": "PUSH2",
      "value": "0xA1A"
    },
    "2609": {
      "op": "JUMP"
    },
    "2610": {
      "op": "JUMPDEST"
    },
    "2611": {
      "op": "DUP4"
    },
    "2612": {
      "op": "DUP2"
    },
    "2613": {
      "op": "GT"
    },
    "2614": {
      "op": "ISZERO"
    },
    "2615": {
      "op": "PUSH2",
      "value": "0xA41"
    },
    "2618": {
      "op": "JUMPI"
    },
    "2619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2621": {
      "op": "DUP5"
    },
    "2622": {
      "op": "DUP5"
    },
    "2623": {
      "op": "ADD"
    },
    "2624": {
      "op": "MSTORE"
    },
    "2625": {
      "op": "JUMPDEST"
    },
    "2626": {
      "op": "POP"
    },
    "2627": {
      "op": "POP"
    },
    "2628": {
      "op": "POP"
    },
    "2629": {
      "op": "POP"
    },
    "2630": {
      "op": "JUMP"
    },
    "2631": {
      "op": "JUMPDEST"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2638": {
      "op": "SHL"
    },
    "2639": {
      "op": "SUB"
    },
    "2640": {
      "op": "DUP2"
    },
    "2641": {
      "op": "AND"
    },
    "2642": {
      "op": "DUP2"
    },
    "2643": {
      "op": "EQ"
    },
    "2644": {
      "op": "PUSH2",
      "value": "0x4CD"
    },
    "2647": {
      "op": "JUMPI"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2650": {
      "op": "DUP1"
    },
    "2651": {
      "op": "REVERT"
    }
  },
  "sha1": "7abf3995d2d664661710ff595d4fe8ad87715c4f",
  "source": "pragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"./Ownable.sol\";\n\n// NFT type define \nlibrary NftLibs {\n    /*\n     *  Store a reference to an image, stored in IPFS, in an ethereum smart contract.\n     */\n    struct ImageInfo {\n        string ipfsInfo;\n    }\n\n    struct Price {\n        uint price;\n    }\n\n    struct NftInfo {\n        string nftName;\n        address nftProducer;\n        ImageInfo imageInfo;\n        Price price;\n        bool hasStarted;\n        bool publicEnabledShow;\n    }\n\n    modifier hasMandotaryFields(string memory _name, address _address, string memory _ipfsInfo) {\n        bytes memory tempEmptyNameStringTest = bytes(_name); \n        bytes memory tempEmptyImageStringTest = bytes(_ipfsInfo); \n\n        require(tempEmptyNameStringTest.length > 0 \n                && tempEmptyImageStringTest.length > 0\n                && _address != address(0));\n\n        _;\n    }\n\n    function createNftInfo(string memory _name, address _address, string memory _ipfsInfo) \n            public hasMandotaryFields(_name, _address, _ipfsInfo) \n            returns (NftInfo memory) {\n        NftInfo memory nftInfo = NftInfo(_name, _address, ImageInfo(_ipfsInfo), Price(0), false, false);\n        return nftInfo;\n    }\n}\n\ncontract NftCollection is Ownable {\n    /*\n     * Store all NFT for each address has.\n     * Stores the number of tokens each address has\n     */\n    mapping (address => NftLibs.NftInfo[]) AddressToNftInfos;\n\n    // Stores the maximum number of tokens that you wanna sell.\n    uint32 maxSupply = 0;\n\n    // Stores the remaining mints.\n    uint32 numberOfMints = 0;\n\n    uint gasPay = 0.000001 ether;\n\n    // Public functions\n    function createToken(string memory _name, address _address, string memory _ipfsInfo) public {\n        NftLibs.NftInfo memory nftInfo = NftLibs.createNftInfo(_name, _address, _ipfsInfo);\n        AddressToNftInfos[_address].push(nftInfo);\n        maxSupply ++;\n    }\n\n    function getMaxSupply() public view returns(uint) {\n        return maxSupply;\n    }\n\n    function getRemainingMints() public view returns(uint) {\n        return maxSupply - numberOfMints;\n    }\n\n    // Display status if sale has started.\n    function getSaleStarted() public view returns (bool) {\n        NftLibs.NftInfo storage nftInfo = getNftInfo();\n        return nftInfo.hasStarted;\n    }\n\n    // Once public enabled show it and enable mint button for all\n    function getOpenToPublic() public view returns (bool) {\n        NftLibs.NftInfo storage nftInfo = getNftInfo();\n        return nftInfo.publicEnabledShow;\n    }\n\n    // TODO: Implement function.\n    function getOnWhiteList(address) public pure returns (bool) {\n        return true;\n    }\n\n    function safeMint() external payable hasMinted {\n        // Check to make sure gasPay ether was sent to the function call:\n        require(msg.value >= gasPay);\n\n        // After get GAS could convert token to Non-Fungible token :)))\n        address payable _owner = address(uint160(owner()));\n        _owner.transfer(gasPay);\n\n        numberOfMints ++;\n    }\n\n    // Private functions\n    function getNftInfo() private view hasMinted returns(NftLibs.NftInfo storage) {\n        NftLibs.NftInfo[] storage nftInfos = AddressToNftInfos[msg.sender];\n\n        // TODO: Fix bellow.\n        return nftInfos[0];\n    }\n\n    modifier hasMinted() {\n        require(AddressToNftInfos[msg.sender].length > 0);\n        _;\n    } \n}",
  "sourceMap": "1246:2172:0:-:0;;;1523:20;;;-1:-1:-1;;;;;;1585:24:0;;;1630:14;1616:28;;1246:2172;;;;;;;;;-1:-1:-1;501:6:1;:19;;-1:-1:-1;;;;;;501:19:1;510:10;501:19;;;;531:40;;-1:-1:-1;;;;;564:6:1;;;;;501;531:40;;501:6;;531:40;1246:2172:0;;;;;;",
  "sourcePath": "contracts/NftCollection.sol",
  "type": "contract"
}