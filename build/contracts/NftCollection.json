{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addToWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_ipfsInfo",
          "type": "string"
        }
      ],
      "name": "createToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumberOfPreSale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumberOfPubliSale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOnWhiteList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOpenToPublic",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRemainingMints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSaleStarted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "safeMint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setClosedToPublic",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setOpenToPublic",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/NftCollection.sol",
    "1": "contracts/Ownable.sol"
  },
  "ast": {
    "absolutePath": "contracts/NftCollection.sol",
    "exportedSymbols": {
      "NftCollection": [
        362
      ],
      "NftLibs": [
        97
      ]
    },
    "id": 363,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:0"
      },
      {
        "absolutePath": "contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 363,
        "sourceUnit": 484,
        "src": "59:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": null,
        "fullyImplemented": true,
        "id": 97,
        "linearizedBaseContracts": [
          97
        ],
        "name": "NftLibs",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "NftLibs.ImageInfo",
            "id": 6,
            "members": [
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "ipfsInfo",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 6,
                "src": "254:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "254:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "ImageInfo",
            "nodeType": "StructDefinition",
            "scope": 97,
            "src": "227:49:0",
            "visibility": "public"
          },
          {
            "canonicalName": "NftLibs.Price",
            "id": 9,
            "members": [
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "price",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 9,
                "src": "305:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "305:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Price",
            "nodeType": "StructDefinition",
            "scope": 97,
            "src": "282:40:0",
            "visibility": "public"
          },
          {
            "canonicalName": "NftLibs.NftInfo",
            "id": 20,
            "members": [
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "nftName",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 20,
                "src": "353:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 10,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "353:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "nftProducer",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 20,
                "src": "377:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 12,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "377:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "imageInfo",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 20,
                "src": "406:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ImageInfo_$6_storage_ptr",
                  "typeString": "struct NftLibs.ImageInfo"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 14,
                  "name": "ImageInfo",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 6,
                  "src": "406:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ImageInfo_$6_storage_ptr",
                    "typeString": "struct NftLibs.ImageInfo"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "price",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 20,
                "src": "435:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Price_$9_storage_ptr",
                  "typeString": "struct NftLibs.Price"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 16,
                  "name": "Price",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 9,
                  "src": "435:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Price_$9_storage_ptr",
                    "typeString": "struct NftLibs.Price"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "hasStarted",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 20,
                "src": "456:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 18,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "456:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "NftInfo",
            "nodeType": "StructDefinition",
            "scope": 97,
            "src": "328:150:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 62,
              "nodeType": "Block",
              "src": "576:300:0",
              "statements": [
                {
                  "assignments": [
                    29
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29,
                      "mutability": "mutable",
                      "name": "tempEmptyNameStringTest",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 62,
                      "src": "586:36:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 28,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "586:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 34,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 32,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "631:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 31,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "625:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                        "typeString": "type(bytes storage pointer)"
                      },
                      "typeName": {
                        "id": 30,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "625:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "625:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "586:51:0"
                },
                {
                  "assignments": [
                    36
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36,
                      "mutability": "mutable",
                      "name": "tempEmptyImageStringTest",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 62,
                      "src": "648:37:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 35,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "648:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 41,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 39,
                        "name": "_ipfsInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "694:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 38,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "688:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                        "typeString": "type(bytes storage pointer)"
                      },
                      "typeName": {
                        "id": 37,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "688:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "688:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "648:56:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 58,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 46,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 43,
                                "name": "tempEmptyNameStringTest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29,
                                "src": "724:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 44,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "724:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 45,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "757:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "724:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 50,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 47,
                                "name": "tempEmptyImageStringTest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36,
                                "src": "779:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 48,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "779:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 49,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "813:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "779:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "724:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 52,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "834:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 55,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "854:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 54,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "846:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "846:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 56,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "846:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "834:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "724:132:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 42,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "716:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "716:141:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "716:141:0"
                },
                {
                  "id": 61,
                  "nodeType": "PlaceholderStatement",
                  "src": "868:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 63,
            "name": "hasMandotaryFields",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 63,
                  "src": "512:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 63,
                  "src": "533:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "533:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "_ipfsInfo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 63,
                  "src": "551:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "551:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "511:64:0"
            },
            "src": "484:392:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "1074:129:0",
              "statements": [
                {
                  "assignments": [
                    80
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80,
                      "mutability": "mutable",
                      "name": "nftInfo",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 95,
                      "src": "1084:22:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NftInfo_$20_memory_ptr",
                        "typeString": "struct NftLibs.NftInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 79,
                        "name": "NftInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 20,
                        "src": "1084:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NftInfo_$20_storage_ptr",
                          "typeString": "struct NftLibs.NftInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 92,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 82,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "1117:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 83,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "1124:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 85,
                            "name": "_ipfsInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "1144:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 84,
                          "name": "ImageInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "1134:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_ImageInfo_$6_storage_ptr_$",
                            "typeString": "type(struct NftLibs.ImageInfo storage pointer)"
                          }
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1134:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ImageInfo_$6_memory_ptr",
                          "typeString": "struct NftLibs.ImageInfo memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 88,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1162:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 87,
                          "name": "Price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "1156:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Price_$9_storage_ptr_$",
                            "typeString": "type(struct NftLibs.Price storage pointer)"
                          }
                        },
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1156:8:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Price_$9_memory_ptr",
                          "typeString": "struct NftLibs.Price memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1166:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ImageInfo_$6_memory_ptr",
                          "typeString": "struct NftLibs.ImageInfo memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_Price_$9_memory_ptr",
                          "typeString": "struct NftLibs.Price memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81,
                      "name": "NftInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "1109:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_NftInfo_$20_storage_ptr_$",
                        "typeString": "type(struct NftLibs.NftInfo storage pointer)"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1109:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$20_memory_ptr",
                      "typeString": "struct NftLibs.NftInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1084:88:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 93,
                    "name": "nftInfo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 80,
                    "src": "1189:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$20_memory_ptr",
                      "typeString": "struct NftLibs.NftInfo memory"
                    }
                  },
                  "functionReturnParameters": 78,
                  "id": 94,
                  "nodeType": "Return",
                  "src": "1182:14:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "019e08a0",
            "id": 96,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 72,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 65,
                    "src": "1008:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 73,
                    "name": "_address",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 67,
                    "src": "1015:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 74,
                    "name": "_ipfsInfo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 69,
                    "src": "1025:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 75,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 71,
                  "name": "hasMandotaryFields",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 63,
                  "src": "989:18:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory,address,string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "989:46:0"
              }
            ],
            "name": "createNftInfo",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 96,
                  "src": "905:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "905:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 96,
                  "src": "926:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "926:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "_ipfsInfo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 96,
                  "src": "944:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "944:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "904:64:0"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 96,
                  "src": "1058:14:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NftInfo_$20_memory_ptr",
                    "typeString": "struct NftLibs.NftInfo"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 76,
                    "name": "NftInfo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 20,
                    "src": "1058:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$20_storage_ptr",
                      "typeString": "struct NftLibs.NftInfo"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1057:16:0"
            },
            "scope": 97,
            "src": "882:321:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 363,
        "src": "104:1101:0"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 98,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 483,
              "src": "1233:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$483",
                "typeString": "contract Ownable"
              }
            },
            "id": 99,
            "nodeType": "InheritanceSpecifier",
            "src": "1233:7:0"
          }
        ],
        "contractDependencies": [
          483
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 362,
        "linearizedBaseContracts": [
          362,
          483
        ],
        "name": "NftCollection",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 104,
            "mutability": "mutable",
            "name": "AddressToNftInfos",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 362,
            "src": "1357:64:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_NftInfo_$20_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct NftLibs.NftInfo[])"
            },
            "typeName": {
              "id": 103,
              "keyType": {
                "id": 100,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1366:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1357:38:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_NftInfo_$20_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct NftLibs.NftInfo[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 101,
                  "name": "NftLibs.NftInfo",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 20,
                  "src": "1377:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NftInfo_$20_storage_ptr",
                    "typeString": "struct NftLibs.NftInfo"
                  }
                },
                "id": 102,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1377:17:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_NftInfo_$20_storage_$dyn_storage_ptr",
                  "typeString": "struct NftLibs.NftInfo[]"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 108,
            "mutability": "mutable",
            "name": "WhiteList",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 362,
            "src": "1747:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 107,
              "keyType": {
                "id": 105,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1756:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1747:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 106,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1767:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 111,
            "mutability": "mutable",
            "name": "publicEnabledShow",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 362,
            "src": "1887:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 109,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1887:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 110,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1920:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 114,
            "mutability": "mutable",
            "name": "maxSupply",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 362,
            "src": "1996:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 112,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1996:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 113,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2023:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 117,
            "mutability": "mutable",
            "name": "numberOfMints",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 362,
            "src": "2066:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 115,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "2066:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 116,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2097:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 120,
            "mutability": "mutable",
            "name": "preSale",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 362,
            "src": "2191:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 118,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "2191:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 119,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2216:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 123,
            "mutability": "mutable",
            "name": "publicSale",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 362,
            "src": "2223:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 121,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "2223:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 122,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2251:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 126,
            "mutability": "mutable",
            "name": "gasPay",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 362,
            "src": "2259:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 124,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "2259:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "302e303030303031",
              "id": 125,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2281:14:0",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000_by_1",
                "typeString": "int_const 1000000000000"
              },
              "value": "0.000001"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "2358:31:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 131,
                    "name": "preSale",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 120,
                    "src": "2375:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 130,
                  "id": 132,
                  "nodeType": "Return",
                  "src": "2368:14:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c42946c7",
            "id": 134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumberOfPreSale",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2329:2:0"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 134,
                  "src": "2352:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2352:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2351:6:0"
            },
            "scope": 362,
            "src": "2302:87:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "2453:34:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 139,
                    "name": "publicSale",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 123,
                    "src": "2470:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 138,
                  "id": 140,
                  "nodeType": "Return",
                  "src": "2463:17:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8c23c4bc",
            "id": 142,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumberOfPubliSale",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2424:2:0"
            },
            "returnParameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 142,
                  "src": "2447:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2447:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2446:6:0"
            },
            "scope": 362,
            "src": "2395:92:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 155,
              "nodeType": "Block",
              "src": "2554:43:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 149,
                        "name": "WhiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "2564:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 151,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 150,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "2574:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2564:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2586:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2564:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "2564:26:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "47ee0394",
            "id": 156,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 147,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 146,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 410,
                  "src": "2535:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2535:9:0"
              }
            ],
            "name": "addToWhiteList",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 156,
                  "src": "2517:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2517:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2516:18:0"
            },
            "returnParameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2554:0:0"
            },
            "scope": 362,
            "src": "2493:104:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 186,
              "nodeType": "Block",
              "src": "2695:172:0",
              "statements": [
                {
                  "assignments": [
                    168
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 168,
                      "mutability": "mutable",
                      "name": "nftInfo",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 186,
                      "src": "2705:30:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NftInfo_$20_memory_ptr",
                        "typeString": "struct NftLibs.NftInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 167,
                        "name": "NftLibs.NftInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 20,
                        "src": "2705:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NftInfo_$20_storage_ptr",
                          "typeString": "struct NftLibs.NftInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 175,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 171,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 158,
                        "src": "2760:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 172,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "2767:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 173,
                        "name": "_ipfsInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 162,
                        "src": "2777:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 169,
                        "name": "NftLibs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "2738:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NftLibs_$97_$",
                          "typeString": "type(library NftLibs)"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createNftInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 96,
                      "src": "2738:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$returns$_t_struct$_NftInfo_$20_memory_ptr_$",
                        "typeString": "function (string memory,address,string memory) returns (struct NftLibs.NftInfo memory)"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2738:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$20_memory_ptr",
                      "typeString": "struct NftLibs.NftInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2705:82:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 180,
                        "name": "nftInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 168,
                        "src": "2830:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NftInfo_$20_memory_ptr",
                          "typeString": "struct NftLibs.NftInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_NftInfo_$20_memory_ptr",
                          "typeString": "struct NftLibs.NftInfo memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 176,
                          "name": "AddressToNftInfos",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104,
                          "src": "2797:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_NftInfo_$20_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct NftLibs.NftInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 178,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 177,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 160,
                          "src": "2815:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2797:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NftInfo_$20_storage_$dyn_storage",
                          "typeString": "struct NftLibs.NftInfo storage ref[] storage ref"
                        }
                      },
                      "id": 179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2797:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_NftInfo_$20_storage_$returns$__$",
                        "typeString": "function (struct NftLibs.NftInfo storage ref)"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2797:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "2797:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2848:12:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 183,
                      "name": "maxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 114,
                      "src": "2848:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 185,
                  "nodeType": "ExpressionStatement",
                  "src": "2848:12:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "77eb17b4",
            "id": 187,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 187,
                  "src": "2624:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2624:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 160,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 187,
                  "src": "2645:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2645:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "_ipfsInfo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 187,
                  "src": "2663:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2663:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2623:64:0"
            },
            "returnParameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2695:0:0"
            },
            "scope": 362,
            "src": "2603:264:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 194,
              "nodeType": "Block",
              "src": "2923:33:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 192,
                    "name": "maxSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 114,
                    "src": "2940:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 191,
                  "id": 193,
                  "nodeType": "Return",
                  "src": "2933:16:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4c0f38c2",
            "id": 195,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMaxSupply",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2894:2:0"
            },
            "returnParameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 190,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 195,
                  "src": "2917:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2917:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2916:6:0"
            },
            "scope": 362,
            "src": "2873:83:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 204,
              "nodeType": "Block",
              "src": "3017:49:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 200,
                      "name": "maxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 114,
                      "src": "3034:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 201,
                      "name": "numberOfMints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "3046:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3034:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 199,
                  "id": 203,
                  "nodeType": "Return",
                  "src": "3027:32:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "fd02c239",
            "id": 205,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRemainingMints",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2988:2:0"
            },
            "returnParameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 205,
                  "src": "3011:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3011:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3010:6:0"
            },
            "scope": 362,
            "src": "2962:104:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 220,
              "nodeType": "Block",
              "src": "3168:98:0",
              "statements": [
                {
                  "assignments": [
                    213
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 213,
                      "mutability": "mutable",
                      "name": "nftInfo",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 220,
                      "src": "3178:31:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NftInfo_$20_storage_ptr",
                        "typeString": "struct NftLibs.NftInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 212,
                        "name": "NftLibs.NftInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 20,
                        "src": "3178:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NftInfo_$20_storage_ptr",
                          "typeString": "struct NftLibs.NftInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 216,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 214,
                      "name": "getNftInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 335,
                      "src": "3212:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_NftInfo_$20_storage_ptr_$",
                        "typeString": "function () view returns (struct NftLibs.NftInfo storage pointer)"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3212:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$20_storage_ptr",
                      "typeString": "struct NftLibs.NftInfo storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3178:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 217,
                      "name": "nftInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 213,
                      "src": "3241:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NftInfo_$20_storage_ptr",
                        "typeString": "struct NftLibs.NftInfo storage pointer"
                      }
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "hasStarted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 19,
                    "src": "3241:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 209,
                  "id": 219,
                  "nodeType": "Return",
                  "src": "3234:25:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0b64251e",
            "id": 221,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSaleStarted",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3138:2:0"
            },
            "returnParameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 208,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 221,
                  "src": "3162:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3162:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3161:6:0"
            },
            "scope": 362,
            "src": "3115:151:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 228,
              "nodeType": "Block",
              "src": "3392:41:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 226,
                    "name": "publicEnabledShow",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 111,
                    "src": "3409:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 225,
                  "id": 227,
                  "nodeType": "Return",
                  "src": "3402:24:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8680d87e",
            "id": 229,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOpenToPublic",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3362:2:0"
            },
            "returnParameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 224,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 229,
                  "src": "3386:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3386:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3385:6:0"
            },
            "scope": 362,
            "src": "3338:95:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 240,
              "nodeType": "Block",
              "src": "3498:41:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 236,
                      "name": "publicEnabledShow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "3508:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3528:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3508:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "3508:24:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3a6be115",
            "id": 241,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 232,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 231,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 410,
                  "src": "3473:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3473:9:0"
              }
            ],
            "name": "setOpenToPublic",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3463:2:0"
            },
            "returnParameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 241,
                  "src": "3492:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3492:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3491:6:0"
            },
            "scope": 362,
            "src": "3439:100:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 252,
              "nodeType": "Block",
              "src": "3606:42:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 248,
                      "name": "publicEnabledShow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "3616:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3636:5:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3616:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "3616:25:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "491100c5",
            "id": 253,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 244,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 243,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 410,
                  "src": "3581:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3581:9:0"
              }
            ],
            "name": "setClosedToPublic",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 242,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3571:2:0"
            },
            "returnParameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 246,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 253,
                  "src": "3600:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3600:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3599:6:0"
            },
            "scope": 362,
            "src": "3545:103:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 263,
              "nodeType": "Block",
              "src": "3707:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 258,
                      "name": "WhiteList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "3724:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 261,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 259,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3734:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3734:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3724:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 257,
                  "id": 262,
                  "nodeType": "Return",
                  "src": "3717:28:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c987f403",
            "id": 264,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOnWhiteList",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3677:2:0"
            },
            "returnParameters": {
              "id": 257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 256,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 264,
                  "src": "3701:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 255,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3701:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3700:6:0"
            },
            "scope": 362,
            "src": "3654:98:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 312,
              "nodeType": "Block",
              "src": "3841:497:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 272,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3933:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3933:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 274,
                          "name": "gasPay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 126,
                          "src": "3946:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3933:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 271,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3925:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3925:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "3925:28:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 278,
                      "name": "getOpenToPublic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "3968:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3968:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 284,
                        "name": "getOnWhiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 264,
                        "src": "4034:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4034:16:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 290,
                    "nodeType": "IfStatement",
                    "src": "4031:108:0",
                    "trueBody": {
                      "id": 289,
                      "nodeType": "Block",
                      "src": "4052:87:0",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4118:10:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 286,
                              "name": "preSale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 120,
                              "src": "4118:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 288,
                          "nodeType": "ExpressionStatement",
                          "src": "4118:10:0"
                        }
                      ]
                    }
                  },
                  "id": 291,
                  "nodeType": "IfStatement",
                  "src": "3964:175:0",
                  "trueBody": {
                    "id": 283,
                    "nodeType": "Block",
                    "src": "3987:38:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "4001:13:0",
                          "subExpression": {
                            "argumentTypes": null,
                            "id": 280,
                            "name": "publicSale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 123,
                            "src": "4001:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 282,
                        "nodeType": "ExpressionStatement",
                        "src": "4001:13:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    293
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 293,
                      "mutability": "mutable",
                      "name": "_owner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 312,
                      "src": "4221:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 292,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4221:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 302,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 298,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 400,
                              "src": "4262:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4262:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4254:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint160_$",
                            "typeString": "type(uint160)"
                          },
                          "typeName": {
                            "id": 296,
                            "name": "uint160",
                            "nodeType": "ElementaryTypeName",
                            "src": "4254:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4254:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      ],
                      "id": 295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4246:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 294,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4246:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4246:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4221:50:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 306,
                        "name": "gasPay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "4297:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 303,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 293,
                        "src": "4281:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4281:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4281:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 308,
                  "nodeType": "ExpressionStatement",
                  "src": "4281:23:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4315:16:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 309,
                      "name": "numberOfMints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "4315:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "4315:16:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6871ee40",
            "id": 313,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 267,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 266,
                  "name": "hasMinted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 349,
                  "src": "3795:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3795:9:0"
              },
              {
                "arguments": null,
                "id": 269,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 268,
                  "name": "hasOnWhiteListOrIsPublicEnabledShow",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 361,
                  "src": "3805:35:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3805:35:0"
              }
            ],
            "name": "safeMint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3775:2:0"
            },
            "returnParameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3841:0:0"
            },
            "scope": 362,
            "src": "3758:580:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 334,
              "nodeType": "Block",
              "src": "4447:141:0",
              "statements": [
                {
                  "assignments": [
                    324
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 324,
                      "mutability": "mutable",
                      "name": "nftInfos",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 334,
                      "src": "4457:34:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_NftInfo_$20_storage_$dyn_storage_ptr",
                        "typeString": "struct NftLibs.NftInfo[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 322,
                          "name": "NftLibs.NftInfo",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 20,
                          "src": "4457:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NftInfo_$20_storage_ptr",
                            "typeString": "struct NftLibs.NftInfo"
                          }
                        },
                        "id": 323,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "4457:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NftInfo_$20_storage_$dyn_storage_ptr",
                          "typeString": "struct NftLibs.NftInfo[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 329,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 325,
                      "name": "AddressToNftInfos",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "4494:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_NftInfo_$20_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct NftLibs.NftInfo storage ref[] storage ref)"
                      }
                    },
                    "id": 328,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 326,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4512:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4512:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4494:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_NftInfo_$20_storage_$dyn_storage",
                      "typeString": "struct NftLibs.NftInfo storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4457:66:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 330,
                      "name": "nftInfos",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 324,
                      "src": "4570:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_NftInfo_$20_storage_$dyn_storage_ptr",
                        "typeString": "struct NftLibs.NftInfo storage ref[] storage pointer"
                      }
                    },
                    "id": 332,
                    "indexExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4579:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4570:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$20_storage",
                      "typeString": "struct NftLibs.NftInfo storage ref"
                    }
                  },
                  "functionReturnParameters": 319,
                  "id": 333,
                  "nodeType": "Return",
                  "src": "4563:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 335,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 316,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 315,
                  "name": "hasMinted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 349,
                  "src": "4404:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4404:9:0"
              }
            ],
            "name": "getNftInfo",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4388:2:0"
            },
            "returnParameters": {
              "id": 319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 318,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 335,
                  "src": "4422:23:0",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NftInfo_$20_storage_ptr",
                    "typeString": "struct NftLibs.NftInfo"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 317,
                    "name": "NftLibs.NftInfo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 20,
                    "src": "4422:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$20_storage_ptr",
                      "typeString": "struct NftLibs.NftInfo"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4421:25:0"
            },
            "scope": 362,
            "src": "4369:219:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 348,
              "nodeType": "Block",
              "src": "4615:77:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 338,
                              "name": "AddressToNftInfos",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 104,
                              "src": "4633:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_NftInfo_$20_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct NftLibs.NftInfo storage ref[] storage ref)"
                              }
                            },
                            "id": 341,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 339,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4651:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4651:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4633:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_NftInfo_$20_storage_$dyn_storage",
                              "typeString": "struct NftLibs.NftInfo storage ref[] storage ref"
                            }
                          },
                          "id": 342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4633:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4672:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4633:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 337,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4625:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4625:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "4625:49:0"
                },
                {
                  "id": 347,
                  "nodeType": "PlaceholderStatement",
                  "src": "4684:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 349,
            "name": "hasMinted",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4612:2:0"
            },
            "src": "4594:98:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 360,
              "nodeType": "Block",
              "src": "4746:74:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 352,
                            "name": "getOnWhiteList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 264,
                            "src": "4764:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4764:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 354,
                            "name": "getOpenToPublic",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 229,
                            "src": "4784:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4784:17:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4764:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 351,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4756:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4756:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 358,
                  "nodeType": "ExpressionStatement",
                  "src": "4756:46:0"
                },
                {
                  "id": 359,
                  "nodeType": "PlaceholderStatement",
                  "src": "4812:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 361,
            "name": "hasOnWhiteListOrIsPublicEnabledShow",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 350,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4743:2:0"
            },
            "src": "4699:121:0",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 363,
        "src": "1207:3615:0"
      }
    ],
    "src": "0:4822:0"
  },
  "bytecode": "6080604052600380546001600160881b031916905564e8d4a5100060045534801561002957600080fd5b50600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3610c6c806100826000396000f3fe6080604052600436106100f35760003560e01c80638680d87e1161008a578063c42946c711610059578063c42946c71461022f578063c987f40314610244578063f2fde38b14610259578063fd02c23914610279576100f3565b80638680d87e146101ce5780638c23c4bc146101e35780638da5cb5b146101f85780638f32d59b1461021a576100f3565b80634c0f38c2116100c65780634c0f38c21461016f5780636871ee4014610191578063715018a61461019957806377eb17b4146101ae576100f3565b80630b64251e146100f85780633a6be1151461012357806347ee039414610138578063491100c51461015a575b600080fd5b34801561010457600080fd5b5061010d61028e565b60405161011a9190610b54565b60405180910390f35b34801561012f57600080fd5b5061010d6102a6565b34801561014457600080fd5b506101586101533660046109b8565b6102c9565b005b34801561016657600080fd5b5061010d6102fe565b34801561017b57600080fd5b5061018461031e565b60405161011a9190610b9d565b61015861032f565b3480156101a557600080fd5b50610158610467565b3480156101ba57600080fd5b506101586101c93660046109db565b6104c2565b3480156101da57600080fd5b5061010d61063b565b3480156101ef57600080fd5b50610184610644565b34801561020457600080fd5b5061020d610657565b60405161011a9190610b40565b34801561022657600080fd5b5061010d610666565b34801561023b57600080fd5b50610184610677565b34801561025057600080fd5b5061010d61068a565b34801561026557600080fd5b506101586102743660046109b8565b6106a0565b34801561028557600080fd5b506101846106bd565b6000806102996106e0565b6004015460ff1691505090565b60006102b0610666565b6102b957600080fd5b6003805460ff1916600117905590565b6102d1610666565b6102da57600080fd5b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b6000610308610666565b61031157600080fd5b6003805460ff1916905590565b600354610100900463ffffffff1690565b3360009081526001602052604090205461034857600080fd5b61035061068a565b8061035e575061035e61063b565b61036757600080fd5b60045434101561037657600080fd5b61037e61063b565b156103b25760038054600163ffffffff600160681b808404821692909201160263ffffffff60681b199091161790556103f0565b6103ba61068a565b156103f05760038054600163ffffffff600160481b80840482169290920116026cffffffff000000000000000000199091161790555b60006103fa610657565b6004546040519192506001600160a01b0383169181156108fc0291906000818181858888f19350505050158015610435573d6000803e3d6000fd5b505060038054600163ffffffff65010000000000808404821692909201160268ffffffff000000000019909116179055565b61046f610666565b61047857600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6104ca610796565b604051620cf04560e51b815273__NftLibs_______________________________9063019e08a09061050490879087908790600401610b5f565b60006040518083038186803b15801561051c57600080fd5b505af4158015610530573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105589190810190610a50565b6001600160a01b03841660009081526001602081815260408320805492830181558352918290208351805194955085946005909302909101926105a0928492909101906107d0565b506020828101516001830180546001600160a01b0319166001600160a01b03909216919091179055604083015180518051919260028501926105e592849201906107d0565b5050506060820151516003828101919091556080909201516004909101805460ff1916911515919091179055805464ffffffff001981166101009182900463ffffffff9081166001011690910217905550505050565b60035460ff1690565b600354600160681b900463ffffffff1690565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b600354600160481b900463ffffffff1690565b3360009081526002602052604090205460ff1690565b6106a8610666565b6106b157600080fd5b6106ba81610728565b50565b60035463ffffffff65010000000000820481166101009092048116919091031690565b336000908152600160205260408120546106f957600080fd5b33600090815260016020526040812080549091829161071457fe5b906000526020600020906005020191505090565b6001600160a01b03811661073b57600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160a08101825260608152600060208201529081016107b661084e565b81526020016107c3610861565b8152600060209091015290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061081157805160ff191683800117855561083e565b8280016001018555821561083e579182015b8281111561083e578251825591602001919060010190610823565b5061084a929150610874565b5090565b6040518060200160405280606081525090565b6040518060200160405280600081525090565b5b8082111561084a5760008155600101610875565b805161089481610c21565b92915050565b8051801515811461089457600080fd5b600082601f8301126108ba578081fd5b81356108cd6108c882610bcd565b610ba6565b91508082528360208285010111156108e457600080fd5b8060208401602084013760009082016020015292915050565b600082601f83011261090d578081fd5b815161091b6108c882610bcd565b915080825283602082850101111561093257600080fd5b610943816020840160208601610bf1565b5092915050565b60006020828403121561095b578081fd5b6109656020610ba6565b9050815167ffffffffffffffff81111561097e57600080fd5b61098a848285016108fd565b82525092915050565b6000602082840312156109a4578081fd5b6109ae6020610ba6565b9151825250919050565b6000602082840312156109c9578081fd5b81356109d481610c21565b9392505050565b6000806000606084860312156109ef578182fd5b833567ffffffffffffffff80821115610a06578384fd5b610a12878388016108aa565b945060208601359150610a2482610c21565b90925060408501359080821115610a39578283fd5b50610a46868287016108aa565b9150509250925092565b600060208284031215610a61578081fd5b815167ffffffffffffffff80821115610a78578283fd5b9083019060a08286031215610a8b578283fd5b610a9560a0610ba6565b825182811115610aa3578485fd5b610aaf878286016108fd565b825250610abf8660208501610889565b6020820152604083015182811115610ad5578485fd5b610ae18782860161094a565b604083015250610af48660608501610993565b6060820152610b06866080850161089a565b608082015295945050505050565b60008151808452610b2c816020860160208601610bf1565b601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b901515815260200190565b600060608252610b726060830186610b14565b6001600160a01b03851660208401528281036040840152610b938185610b14565b9695505050505050565b90815260200190565b60405181810167ffffffffffffffff81118282101715610bc557600080fd5b604052919050565b600067ffffffffffffffff821115610be3578081fd5b50601f01601f191660200190565b60005b83811015610c0c578181015183820152602001610bf4565b83811115610c1b576000848401525b50505050565b6001600160a01b03811681146106ba57600080fdfea264697066735822122050dadaf5524d5a5ff6a16a2a4e8951189240edc351cae4bdc9a6307567075ffe64736f6c634300060c0033",
  "bytecodeSha1": "cb03e47e90c1d38f5400fe08b4d786606ba27f05",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "NftCollection",
  "coverageMap": {
    "branches": {
      "0": {
        "NftCollection.safeMint": {
          "26": [
            4764,
            4780,
            true
          ],
          "27": [
            4784,
            4801,
            true
          ],
          "28": [
            3933,
            3952,
            true
          ],
          "29": [
            3968,
            3985,
            false
          ],
          "30": [
            4034,
            4050,
            false
          ]
        }
      },
      "1": {
        "Ownable._transferOwnership": {
          "32": [
            1840,
            1862,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "31": [
            812,
            821,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "NftCollection.addToWhiteList": {
          "2": [
            2564,
            2590
          ]
        },
        "NftCollection.createToken": {
          "12": [
            2797,
            2838
          ],
          "13": [
            2848,
            2860
          ]
        },
        "NftCollection.getMaxSupply": {
          "4": [
            2933,
            2949
          ]
        },
        "NftCollection.getNftInfo": {
          "22": [
            4563,
            4581
          ]
        },
        "NftCollection.getNumberOfPreSale": {
          "18": [
            2368,
            2382
          ]
        },
        "NftCollection.getNumberOfPubliSale": {
          "15": [
            2463,
            2480
          ]
        },
        "NftCollection.getOnWhiteList": {
          "19": [
            3717,
            3745
          ]
        },
        "NftCollection.getOpenToPublic": {
          "14": [
            3402,
            3426
          ]
        },
        "NftCollection.getRemainingMints": {
          "21": [
            3027,
            3059
          ]
        },
        "NftCollection.getSaleStarted": {
          "0": [
            3234,
            3259
          ]
        },
        "NftCollection.safeMint": {
          "5": [
            3925,
            3953
          ],
          "6": [
            4001,
            4014
          ],
          "7": [
            4118,
            4128
          ],
          "8": [
            4281,
            4304
          ],
          "9": [
            4315,
            4331
          ]
        },
        "NftCollection.setClosedToPublic": {
          "3": [
            3616,
            3641
          ]
        },
        "NftCollection.setOpenToPublic": {
          "1": [
            3508,
            3532
          ]
        }
      },
      "1": {
        "Ownable._transferOwnership": {
          "23": [
            1832,
            1863
          ],
          "24": [
            1869,
            1912
          ],
          "25": [
            1918,
            1935
          ]
        },
        "Ownable.isOwner": {
          "17": [
            963,
            990
          ]
        },
        "Ownable.owner": {
          "16": [
            681,
            694
          ]
        },
        "Ownable.renounceOwnership": {
          "10": [
            1306,
            1351
          ],
          "11": [
            1357,
            1376
          ]
        },
        "Ownable.transferOwnership": {
          "20": [
            1607,
            1635
          ]
        }
      }
    }
  },
  "dependencies": [
    "NftLibs",
    "Ownable"
  ],
  "deployedBytecode": "6080604052600436106100f35760003560e01c80638680d87e1161008a578063c42946c711610059578063c42946c71461022f578063c987f40314610244578063f2fde38b14610259578063fd02c23914610279576100f3565b80638680d87e146101ce5780638c23c4bc146101e35780638da5cb5b146101f85780638f32d59b1461021a576100f3565b80634c0f38c2116100c65780634c0f38c21461016f5780636871ee4014610191578063715018a61461019957806377eb17b4146101ae576100f3565b80630b64251e146100f85780633a6be1151461012357806347ee039414610138578063491100c51461015a575b600080fd5b34801561010457600080fd5b5061010d61028e565b60405161011a9190610b54565b60405180910390f35b34801561012f57600080fd5b5061010d6102a6565b34801561014457600080fd5b506101586101533660046109b8565b6102c9565b005b34801561016657600080fd5b5061010d6102fe565b34801561017b57600080fd5b5061018461031e565b60405161011a9190610b9d565b61015861032f565b3480156101a557600080fd5b50610158610467565b3480156101ba57600080fd5b506101586101c93660046109db565b6104c2565b3480156101da57600080fd5b5061010d61063b565b3480156101ef57600080fd5b50610184610644565b34801561020457600080fd5b5061020d610657565b60405161011a9190610b40565b34801561022657600080fd5b5061010d610666565b34801561023b57600080fd5b50610184610677565b34801561025057600080fd5b5061010d61068a565b34801561026557600080fd5b506101586102743660046109b8565b6106a0565b34801561028557600080fd5b506101846106bd565b6000806102996106e0565b6004015460ff1691505090565b60006102b0610666565b6102b957600080fd5b6003805460ff1916600117905590565b6102d1610666565b6102da57600080fd5b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b6000610308610666565b61031157600080fd5b6003805460ff1916905590565b600354610100900463ffffffff1690565b3360009081526001602052604090205461034857600080fd5b61035061068a565b8061035e575061035e61063b565b61036757600080fd5b60045434101561037657600080fd5b61037e61063b565b156103b25760038054600163ffffffff600160681b808404821692909201160263ffffffff60681b199091161790556103f0565b6103ba61068a565b156103f05760038054600163ffffffff600160481b80840482169290920116026cffffffff000000000000000000199091161790555b60006103fa610657565b6004546040519192506001600160a01b0383169181156108fc0291906000818181858888f19350505050158015610435573d6000803e3d6000fd5b505060038054600163ffffffff65010000000000808404821692909201160268ffffffff000000000019909116179055565b61046f610666565b61047857600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6104ca610796565b604051620cf04560e51b815273__$67ab562366c52fcbcaecae584739bc0d72$__9063019e08a09061050490879087908790600401610b5f565b60006040518083038186803b15801561051c57600080fd5b505af4158015610530573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105589190810190610a50565b6001600160a01b03841660009081526001602081815260408320805492830181558352918290208351805194955085946005909302909101926105a0928492909101906107d0565b506020828101516001830180546001600160a01b0319166001600160a01b03909216919091179055604083015180518051919260028501926105e592849201906107d0565b5050506060820151516003828101919091556080909201516004909101805460ff1916911515919091179055805464ffffffff001981166101009182900463ffffffff9081166001011690910217905550505050565b60035460ff1690565b600354600160681b900463ffffffff1690565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b600354600160481b900463ffffffff1690565b3360009081526002602052604090205460ff1690565b6106a8610666565b6106b157600080fd5b6106ba81610728565b50565b60035463ffffffff65010000000000820481166101009092048116919091031690565b336000908152600160205260408120546106f957600080fd5b33600090815260016020526040812080549091829161071457fe5b906000526020600020906005020191505090565b6001600160a01b03811661073b57600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160a08101825260608152600060208201529081016107b661084e565b81526020016107c3610861565b8152600060209091015290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061081157805160ff191683800117855561083e565b8280016001018555821561083e579182015b8281111561083e578251825591602001919060010190610823565b5061084a929150610874565b5090565b6040518060200160405280606081525090565b6040518060200160405280600081525090565b5b8082111561084a5760008155600101610875565b805161089481610c21565b92915050565b8051801515811461089457600080fd5b600082601f8301126108ba578081fd5b81356108cd6108c882610bcd565b610ba6565b91508082528360208285010111156108e457600080fd5b8060208401602084013760009082016020015292915050565b600082601f83011261090d578081fd5b815161091b6108c882610bcd565b915080825283602082850101111561093257600080fd5b610943816020840160208601610bf1565b5092915050565b60006020828403121561095b578081fd5b6109656020610ba6565b9050815167ffffffffffffffff81111561097e57600080fd5b61098a848285016108fd565b82525092915050565b6000602082840312156109a4578081fd5b6109ae6020610ba6565b9151825250919050565b6000602082840312156109c9578081fd5b81356109d481610c21565b9392505050565b6000806000606084860312156109ef578182fd5b833567ffffffffffffffff80821115610a06578384fd5b610a12878388016108aa565b945060208601359150610a2482610c21565b90925060408501359080821115610a39578283fd5b50610a46868287016108aa565b9150509250925092565b600060208284031215610a61578081fd5b815167ffffffffffffffff80821115610a78578283fd5b9083019060a08286031215610a8b578283fd5b610a9560a0610ba6565b825182811115610aa3578485fd5b610aaf878286016108fd565b825250610abf8660208501610889565b6020820152604083015182811115610ad5578485fd5b610ae18782860161094a565b604083015250610af48660608501610993565b6060820152610b06866080850161089a565b608082015295945050505050565b60008151808452610b2c816020860160208601610bf1565b601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b901515815260200190565b600060608252610b726060830186610b14565b6001600160a01b03851660208401528281036040840152610b938185610b14565b9695505050505050565b90815260200190565b60405181810167ffffffffffffffff81118282101715610bc557600080fd5b604052919050565b600067ffffffffffffffff821115610be3578081fd5b50601f01601f191660200190565b60005b83811015610c0c578181015183820152602001610bf4565b83811115610c1b576000848401525b50505050565b6001600160a01b03811681146106ba57600080fdfea264697066735822122050dadaf5524d5a5ff6a16a2a4e8951189240edc351cae4bdc9a6307567075ffe64736f6c634300060c0033",
  "deployedSourceMap": "1207:3615:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3115:151;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3439:100;;;;;;;;;;;;;:::i;2493:104::-;;;;;;;;;;-1:-1:-1;2493:104:0;;;;;:::i;:::-;;:::i;:::-;;3545:103;;;;;;;;;;;;;:::i;2873:83::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3758:580::-;;;:::i;1254:127:1:-;;;;;;;;;;;;;:::i;2603:264:0:-;;;;;;;;;;-1:-1:-1;2603:264:0;;;;;:::i;:::-;;:::i;3338:95::-;;;;;;;;;;;;;:::i;2395:92::-;;;;;;;;;;;;;:::i;629:70:1:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;912:83::-;;;;;;;;;;;;;:::i;2302:87:0:-;;;;;;;;;;;;;:::i;3654:98::-;;;;;;;;;;;;;:::i;1539:101:1:-;;;;;;;;;;-1:-1:-1;1539:101:1;;;;;:::i;:::-;;:::i;2962:104:0:-;;;;;;;;;;;;;:::i;3115:151::-;3162:4;3178:31;3212:12;:10;:12::i;:::-;3241:18;;;;;;-1:-1:-1;;3115:151:0;:::o;3439:100::-;3492:4;812:9:1;:7;:9::i;:::-;804:18;;;;;;3508:17:0::1;:24:::0;;-1:-1:-1;;3508:24:0::1;3528:4;3508:24;::::0;;3439:100;:::o;2493:104::-;812:9:1;:7;:9::i;:::-;804:18;;;;;;-1:-1:-1;;;;;2564:19:0::1;;::::0;;;:9:::1;:19;::::0;;;;:26;;-1:-1:-1;;2564:26:0::1;2586:4;2564:26;::::0;;2493:104::o;3545:103::-;3600:4;812:9:1;:7;:9::i;:::-;804:18;;;;;;3616:17:0::1;:25:::0;;-1:-1:-1;;3616:25:0::1;::::0;;3545:103;:::o;2873:83::-;2940:9;;;;;;;;2873:83::o;3758:580::-;4651:10;4672:1;4633:29;;;:17;:29;;;;;:36;4625:49;;;;;;4764:16:::1;:14;:16::i;:::-;:37;;;;4784:17;:15;:17::i;:::-;4756:46;;;::::0;::::1;;3946:6:::2;;3933:9;:19;;3925:28;;;::::0;::::2;;3968:17;:15;:17::i;:::-;3964:175;;;4001:10;:13:::0;;::::2;;-1:-1:-1::0;;;4001:13:0;;::::2;::::0;::::2;::::0;;;::::2;;;-1:-1:-1::0;;;;4001:13:0;;::::2;;::::0;;3964:175:::2;;;4034:16;:14;:16::i;:::-;4031:108;;;4118:7;:10:::0;;::::2;;-1:-1:-1::0;;;4118:10:0;;::::2;::::0;::::2;::::0;;;::::2;;;-1:-1:-1::0;;4118:10:0;;::::2;;::::0;;4031:108:::2;4221:22;4262:7;:5;:7::i;:::-;4297:6;::::0;4281:23:::2;::::0;4221:50;;-1:-1:-1;;;;;;4281:15:0;::::2;::::0;:23;::::2;;;::::0;4297:6;4281:23:::2;::::0;;;4297:6;4281:15;:23;::::2;;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;4315:13:0::2;:16:::0;;::::2;;::::0;;;::::2;::::0;::::2;::::0;;;::::2;;;-1:-1:-1::0;;4315:16:0;;::::2;;::::0;;3758:580::o;1254:127:1:-;812:9;:7;:9::i;:::-;804:18;;;;;;1348:1:::1;1332:6:::0;;1311:40:::1;::::0;-1:-1:-1;;;;;1332:6:1;;::::1;::::0;1311:40:::1;::::0;1348:1;;1311:40:::1;1374:1;1357:19:::0;;-1:-1:-1;;;;;;1357:19:1::1;::::0;;1254:127::o;2603:264:0:-;2705:30;;:::i;:::-;2738:49;;-1:-1:-1;;;2738:49:0;;:7;;:21;;:49;;2760:5;;2767:8;;2777:9;;2738:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2738:49:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2797:27:0;;;;;;:17;:27;;;;;;;:41;;;;;;;;;;;;;;;;;2705:82;;-1:-1:-1;2705:82:0;;2797:41;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2797:41:0;;;;;;;;;;-1:-1:-1;;;;;;2797:41:0;-1:-1:-1;;;;;2797:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;2797:41:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2797:41:0;;;;;;;;;;2848:12;;-1:-1:-1;;2848:12:0;;2797:41;2848:12;;;;;;;;-1:-1:-1;2848:12:0;;;;;;;;-1:-1:-1;;;;2603:264:0:o;3338:95::-;3409:17;;;;3338:95;:::o;2395:92::-;2470:10;;-1:-1:-1;;;2470:10:0;;;;;2395:92::o;629:70:1:-;666:7;688:6;-1:-1:-1;;;;;688:6:1;629:70;:::o;912:83::-;951:4;984:6;-1:-1:-1;;;;;984:6:1;970:10;:20;;912:83::o;2302:87:0:-;2375:7;;-1:-1:-1;;;2375:7:0;;;;;2302:87::o;3654:98::-;3734:10;3701:4;3724:21;;;:9;:21;;;;;;;;3654:98;:::o;1539:101:1:-;812:9;:7;:9::i;:::-;804:18;;;;;;1607:28:::1;1626:8;1607:18;:28::i;:::-;1539:101:::0;:::o;2962:104:0:-;3046:13;;;;;;;;;3034:9;;;;;:25;;;;3027:32;2962:104;:::o;4369:219::-;4651:10;4422:23;4633:29;;;:17;:29;;;;;:36;4625:49;;;;;;4512:10:::1;4457:34;4494:29:::0;;;:17:::1;:29;::::0;;;;4570:11;;4494:29;;;;4570:11:::1;;;;;;;;;;;;;;4563:18;;;4369:219:::0;:::o;1771:169:1:-;-1:-1:-1;;;;;1840:22:1;;1832:31;;;;;;1895:6;;;1874:38;;-1:-1:-1;;;;;1874:38:1;;;;1895:6;;;1874:38;;;1918:6;:17;;-1:-1:-1;;;;;;1918:17:1;-1:-1:-1;;;;;1918:17:1;;;;;;;;;;1771:169::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;142:134;220:13;;238:33;220:13;238:33;:::i;:::-;205:71;;;;:::o;283:128::-;358:13;;8145;;8138:21;9094:32;;9084:2;;9140:1;;9130:12;419:442;;521:3;514:4;506:6;502:17;498:27;488:2;;-1:-1;;529:12;488:2;576:6;563:20;598:65;613:49;655:6;613:49;:::i;:::-;598:65;:::i;:::-;589:74;;683:6;676:5;669:21;787:3;719:4;778:6;711;769:16;;766:25;763:2;;;804:1;;794:12;763:2;8460:6;719:4;711:6;707:17;719:4;745:5;741:16;8437:30;8516:1;8498:16;;;719:4;8498:16;8491:27;745:5;481:380;-1:-1;;481:380::o;870:444::-;;983:3;976:4;968:6;964:17;960:27;950:2;;-1:-1;;991:12;950:2;1031:6;1025:13;1053:65;1068:49;1110:6;1068:49;:::i;1053:65::-;1044:74;;1138:6;1131:5;1124:21;1242:3;1174:4;1233:6;1166;1224:16;;1221:25;1218:2;;;1259:1;;1249:12;1218:2;1269:39;1301:6;1174:4;1200:5;1196:16;1174:4;1166:6;1162:17;1269:39;:::i;:::-;;943:371;;;;:::o;1353:437::-;;1477:4;1465:9;1460:3;1456:19;1452:30;1449:2;;;-1:-1;;1485:12;1449:2;1513:20;1477:4;1513:20;:::i;:::-;1504:29;;1593:17;1587:24;1631:18;1623:6;1620:30;1617:2;;;1608:1;;1653:12;1617:2;1698:70;1764:3;1755:6;1744:9;1740:22;1698:70;:::i;:::-;1680:16;1673:96;;1443:347;;;;:::o;3055:341::-;;3175:4;3163:9;3158:3;3154:19;3150:30;3147:2;;;-1:-1;;3183:12;3147:2;3211:20;3175:4;3211:20;:::i;:::-;3481:13;;3289:86;;-1:-1;3202:29;3141:255;-1:-1;3141:255::o;3544:241::-;;3648:2;3636:9;3627:7;3623:23;3619:32;3616:2;;;-1:-1;;3654:12;3616:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;3706:63;3610:175;-1:-1;;;3610:175::o;3792:703::-;;;;3950:2;3938:9;3929:7;3925:23;3921:32;3918:2;;;-1:-1;;3956:12;3918:2;4014:17;4001:31;4052:18;;4044:6;4041:30;4038:2;;;-1:-1;;4074:12;4038:2;4104:63;4159:7;4150:6;4139:9;4135:22;4104:63;:::i;:::-;4094:73;;4204:2;4247:9;4243:22;72:20;63:29;;97:33;124:5;97:33;:::i;:::-;4212:63;;-1:-1;4340:2;4325:18;;4312:32;;4353:30;;;4350:2;;;-1:-1;;4386:12;4350:2;;4416:63;4471:7;4462:6;4451:9;4447:22;4416:63;:::i;:::-;4406:73;;;3912:583;;;;;:::o;4502:388::-;;4640:2;4628:9;4619:7;4615:23;4611:32;4608:2;;;-1:-1;;4646:12;4608:2;4697:17;4691:24;4735:18;;4727:6;4724:30;4721:2;;;-1:-1;;4757:12;4721:2;4842:22;;;;1949:4;1928:19;;;1924:30;1921:2;;;-1:-1;;1957:12;1921:2;1985:20;1949:4;1985:20;:::i;:::-;2064:17;2058:24;4735:18;2094:6;2091:30;2088:2;;;-1:-1;;2124:12;2088:2;2169:70;2235:3;2226:6;2215:9;2211:22;2169:70;:::i;:::-;2151:16;2144:96;;2341:60;2397:3;4640:2;2377:9;2373:22;2341:60;:::i;:::-;4640:2;2327:5;2323:16;2316:86;2489:2;2478:9;2474:18;2468:25;4735:18;2505:6;2502:30;2499:2;;;-1:-1;;2535:12;2499:2;2580:84;2660:3;2651:6;2640:9;2636:22;2580:84;:::i;:::-;2489:2;2566:5;2562:16;2555:110;;2760:80;2836:3;2727:2;2816:9;2812:22;2760:80;:::i;:::-;2727:2;2746:5;2742:16;2735:106;2942:57;2995:3;2908;2975:9;2971:22;2942:57;:::i;:::-;2908:3;2924:16;;2917:83;2928:5;4602:288;-1:-1;;;;;4602:288::o;5256:363::-;;5409:5;7760:12;7925:6;7920:3;7913:19;5511:52;5556:6;7962:4;7957:3;7953:14;7962:4;5537:5;5533:16;5511:52;:::i;:::-;8893:7;8877:14;-1:-1;;8873:28;5575:39;;;;7962:4;5575:39;;5356:263;-1:-1;;5356:263::o;5746:222::-;-1:-1;;;;;8233:54;;;;4968:37;;5873:2;5858:18;;5844:124::o;5975:210::-;8145:13;;8138:21;5210:34;;6096:2;6081:18;;6067:118::o;6192:652::-;;6423:2;6444:17;6437:47;6498:86;6423:2;6412:9;6408:18;6570:6;6498:86;:::i;:::-;-1:-1;;;;;8233:54;;6671:2;6656:18;;4968:37;6713:20;;;6708:2;6693:18;;6686:48;6748:86;6717:4;6820:6;6748:86;:::i;:::-;6740:94;6394:450;-1:-1;;;;;;6394:450::o;6851:222::-;5697:37;;;6978:2;6963:18;;6949:124::o;7080:256::-;7142:2;7136:9;7168:17;;;7243:18;7228:34;;7264:22;;;7225:62;7222:2;;;7300:1;;7290:12;7222:2;7142;7309:22;7120:216;;-1:-1;7120:216::o;7343:322::-;;7487:18;7479:6;7476:30;7473:2;;;-1:-1;;7509:12;7473:2;-1:-1;8893:7;7563:17;-1:-1;;7559:33;7650:4;7640:15;;7410:255::o;8533:268::-;8598:1;8605:101;8619:6;8616:1;8613:13;8605:101;;;8686:11;;;8680:18;8667:11;;;8660:39;8641:2;8634:10;8605:101;;;8721:6;8718:1;8715:13;8712:2;;;8598:1;8777:6;8772:3;8768:16;8761:27;8712:2;;8582:219;;;:::o;8914:117::-;-1:-1;;;;;8233:54;;8973:35;;8963:2;;9022:1;;9012:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "isOwner()": {
        "returns": {
          "_0": "true if `msg.sender` is the owner of the contract."
        }
      },
      "owner()": {
        "returns": {
          "_0": "the address of the owner."
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract.",
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "version": 1
  },
  "offset": [
    1207,
    4822
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8680D87E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC42946C7 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC42946C7 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0xC987F403 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xFD02C239 EQ PUSH2 0x279 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x8680D87E EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x8C23C4BC EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x21A JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x4C0F38C2 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x4C0F38C2 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x6871EE40 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x77EB17B4 EQ PUSH2 0x1AE JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0xB64251E EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x3A6BE115 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x47EE0394 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x491100C5 EQ PUSH2 0x15A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x28E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x2A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0x9B8 JUMP JUMPDEST PUSH2 0x2C9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x2FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0x31E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xB9D JUMP JUMPDEST PUSH2 0x158 PUSH2 0x32F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x467 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DB JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x63B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0x644 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xB40 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x666 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0x677 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x68A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x9B8 JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x299 PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B0 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x308 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x350 PUSH2 0x68A JUMP JUMPDEST DUP1 PUSH2 0x35E JUMPI POP PUSH2 0x35E PUSH2 0x63B JUMP JUMPDEST PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD CALLVALUE LT ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x37E PUSH2 0x63B JUMP JUMPDEST ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0x68 SHL DUP1 DUP5 DIV DUP3 AND SWAP3 SWAP1 SWAP3 ADD AND MUL PUSH4 0xFFFFFFFF PUSH1 0x68 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH2 0x3F0 JUMP JUMPDEST PUSH2 0x3BA PUSH2 0x68A JUMP JUMPDEST ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0x48 SHL DUP1 DUP5 DIV DUP3 AND SWAP3 SWAP1 SWAP3 ADD AND MUL PUSH13 0xFFFFFFFF000000000000000000 NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 PUSH2 0x3FA PUSH2 0x657 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x435 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH6 0x10000000000 DUP1 DUP5 DIV DUP3 AND SWAP3 SWAP1 SWAP3 ADD AND MUL PUSH9 0xFFFFFFFF0000000000 NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x46F PUSH2 0x666 JUMP JUMPDEST PUSH2 0x478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x4CA PUSH2 0x796 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xCF045 PUSH1 0xE5 SHL DUP2 MSTORE PUSH20 0x0 SWAP1 PUSH4 0x19E08A0 SWAP1 PUSH2 0x504 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0xB5F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x530 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x558 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xA50 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE DUP4 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP1 MLOAD SWAP5 SWAP6 POP DUP6 SWAP5 PUSH1 0x5 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD SWAP3 PUSH2 0x5A0 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x7D0 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD DUP1 MLOAD SWAP2 SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 PUSH2 0x5E5 SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0x7D0 JUMP JUMPDEST POP POP POP PUSH1 0x60 DUP3 ADD MLOAD MLOAD PUSH1 0x3 DUP3 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x80 SWAP1 SWAP3 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 SLOAD PUSH5 0xFFFFFFFF00 NOT DUP2 AND PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH1 0x1 ADD AND SWAP1 SWAP2 MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x68 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x48 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x6A8 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6BA DUP2 PUSH2 0x728 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH4 0xFFFFFFFF PUSH6 0x10000000000 DUP3 DIV DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV DUP2 AND SWAP2 SWAP1 SWAP2 SUB AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x6F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH2 0x714 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x73B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD PUSH2 0x7B6 PUSH2 0x84E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7C3 PUSH2 0x861 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x811 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x83E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x83E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x83E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x823 JUMP JUMPDEST POP PUSH2 0x84A SWAP3 SWAP2 POP PUSH2 0x874 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x84A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x875 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x894 DUP2 PUSH2 0xC21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x894 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8BA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8CD PUSH2 0x8C8 DUP3 PUSH2 0xBCD JUMP JUMPDEST PUSH2 0xBA6 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x8E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP3 ADD PUSH1 0x20 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x90D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x91B PUSH2 0x8C8 DUP3 PUSH2 0xBCD JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x943 DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xBF1 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x95B JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x965 PUSH1 0x20 PUSH2 0xBA6 JUMP JUMPDEST SWAP1 POP DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x97E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x98A DUP5 DUP3 DUP6 ADD PUSH2 0x8FD JUMP JUMPDEST DUP3 MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9A4 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x9AE PUSH1 0x20 PUSH2 0xBA6 JUMP JUMPDEST SWAP2 MLOAD DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9C9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9D4 DUP2 PUSH2 0xC21 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9EF JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA06 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0xA12 DUP8 DUP4 DUP9 ADD PUSH2 0x8AA JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH2 0xA24 DUP3 PUSH2 0xC21 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0xA39 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0xA46 DUP7 DUP3 DUP8 ADD PUSH2 0x8AA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA61 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA78 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0xA0 DUP3 DUP7 SUB SLT ISZERO PUSH2 0xA8B JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xA95 PUSH1 0xA0 PUSH2 0xBA6 JUMP JUMPDEST DUP3 MLOAD DUP3 DUP2 GT ISZERO PUSH2 0xAA3 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0xAAF DUP8 DUP3 DUP7 ADD PUSH2 0x8FD JUMP JUMPDEST DUP3 MSTORE POP PUSH2 0xABF DUP7 PUSH1 0x20 DUP6 ADD PUSH2 0x889 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0xAD5 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0xAE1 DUP8 DUP3 DUP7 ADD PUSH2 0x94A JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH2 0xAF4 DUP7 PUSH1 0x60 DUP6 ADD PUSH2 0x993 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0xB06 DUP7 PUSH1 0x80 DUP6 ADD PUSH2 0x89A JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xB2C DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 MSTORE PUSH2 0xB72 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xB14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0xB93 DUP2 DUP6 PUSH2 0xB14 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xBC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xBE3 JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC0C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBF4 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xC1B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6BA JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xDA 0xDA CREATE2 MSTORE 0x4D GAS 0x5F 0xF6 LOG1 PUSH11 0x2A4E8951189240EDC351CA 0xE4 0xBD 0xC9 0xA6 ADDRESS PUSH22 0x67075FFE64736F6C634300060C003300000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF3"
    },
    "12": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8680D87E"
    },
    "25": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "GT",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A"
    },
    "29": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC42946C7"
    },
    "36": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "GT",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59"
    },
    "40": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC42946C7"
    },
    "47": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22F"
    },
    "51": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC987F403"
    },
    "58": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x244"
    },
    "62": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF2FDE38B"
    },
    "69": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x259"
    },
    "73": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "DUP1",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFD02C239"
    },
    "80": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "EQ",
      "path": "0"
    },
    "81": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x279"
    },
    "84": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "85": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF3"
    },
    "88": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "JUMP",
      "path": "0"
    },
    "89": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "90": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "DUP1",
      "path": "0"
    },
    "91": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8680D87E"
    },
    "96": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "EQ",
      "path": "0"
    },
    "97": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CE"
    },
    "100": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "DUP1",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8C23C4BC"
    },
    "107": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "EQ",
      "path": "0"
    },
    "108": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E3"
    },
    "111": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "DUP1",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA5CB5B"
    },
    "118": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "EQ",
      "path": "0"
    },
    "119": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F8"
    },
    "122": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "123": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "DUP1",
      "path": "0"
    },
    "124": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8F32D59B"
    },
    "129": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "EQ",
      "path": "0"
    },
    "130": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21A"
    },
    "133": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "134": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF3"
    },
    "137": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "JUMP",
      "path": "0"
    },
    "138": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "139": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "DUP1",
      "path": "0"
    },
    "140": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4C0F38C2"
    },
    "145": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "GT",
      "path": "0"
    },
    "146": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC6"
    },
    "149": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "150": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "DUP1",
      "path": "0"
    },
    "151": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4C0F38C2"
    },
    "156": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "EQ",
      "path": "0"
    },
    "157": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16F"
    },
    "160": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "161": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "DUP1",
      "path": "0"
    },
    "162": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6871EE40"
    },
    "167": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "EQ",
      "path": "0"
    },
    "168": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x191"
    },
    "171": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "172": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "DUP1",
      "path": "0"
    },
    "173": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x715018A6"
    },
    "178": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "EQ",
      "path": "0"
    },
    "179": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x199"
    },
    "182": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "183": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "DUP1",
      "path": "0"
    },
    "184": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x77EB17B4"
    },
    "189": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "EQ",
      "path": "0"
    },
    "190": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AE"
    },
    "193": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "194": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF3"
    },
    "197": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "JUMP",
      "path": "0"
    },
    "198": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "199": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "DUP1",
      "path": "0"
    },
    "200": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB64251E"
    },
    "205": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "EQ",
      "path": "0"
    },
    "206": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF8"
    },
    "209": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "210": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "DUP1",
      "path": "0"
    },
    "211": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3A6BE115"
    },
    "216": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "EQ",
      "path": "0"
    },
    "217": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x123"
    },
    "220": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "221": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "DUP1",
      "path": "0"
    },
    "222": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x47EE0394"
    },
    "227": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "EQ",
      "path": "0"
    },
    "228": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x138"
    },
    "231": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "232": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "DUP1",
      "path": "0"
    },
    "233": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x491100C5"
    },
    "238": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "EQ",
      "path": "0"
    },
    "239": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A"
    },
    "242": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "243": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "244": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "246": {
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "DUP1",
      "path": "0"
    },
    "247": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1207,
        4822
      ],
      "op": "REVERT",
      "path": "0"
    },
    "248": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "249": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "250": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "DUP1",
      "path": "0"
    },
    "251": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "252": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x104"
    },
    "255": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "256": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "258": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "DUP1",
      "path": "0"
    },
    "259": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "REVERT",
      "path": "0"
    },
    "260": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "261": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "POP",
      "path": "0"
    },
    "262": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10D"
    },
    "265": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28E"
    },
    "268": {
      "fn": "NftCollection.getSaleStarted",
      "jump": "i",
      "offset": [
        3115,
        3266
      ],
      "op": "JUMP",
      "path": "0"
    },
    "269": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "270": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "272": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "273": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A"
    },
    "276": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "277": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "278": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB54"
    },
    "281": {
      "fn": "NftCollection.getSaleStarted",
      "jump": "i",
      "offset": [
        3115,
        3266
      ],
      "op": "JUMP",
      "path": "0"
    },
    "282": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "283": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "285": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "286": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "DUP1",
      "path": "0"
    },
    "287": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "288": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "SUB",
      "path": "0"
    },
    "289": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "290": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "RETURN",
      "path": "0"
    },
    "291": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        3439,
        3539
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "292": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        3439,
        3539
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "293": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        3439,
        3539
      ],
      "op": "DUP1",
      "path": "0"
    },
    "294": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        3439,
        3539
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "295": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        3439,
        3539
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12F"
    },
    "298": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        3439,
        3539
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "299": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        3439,
        3539
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "301": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        3439,
        3539
      ],
      "op": "DUP1",
      "path": "0"
    },
    "302": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        3439,
        3539
      ],
      "op": "REVERT",
      "path": "0"
    },
    "303": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        3439,
        3539
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "304": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        3439,
        3539
      ],
      "op": "POP",
      "path": "0"
    },
    "305": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        3439,
        3539
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10D"
    },
    "308": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        3439,
        3539
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A6"
    },
    "311": {
      "fn": "NftCollection.setOpenToPublic",
      "jump": "i",
      "offset": [
        3439,
        3539
      ],
      "op": "JUMP",
      "path": "0"
    },
    "312": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2493,
        2597
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "313": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2493,
        2597
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "314": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2493,
        2597
      ],
      "op": "DUP1",
      "path": "0"
    },
    "315": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2493,
        2597
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "316": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2493,
        2597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144"
    },
    "319": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2493,
        2597
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "320": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2493,
        2597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "322": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2493,
        2597
      ],
      "op": "DUP1",
      "path": "0"
    },
    "323": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2493,
        2597
      ],
      "op": "REVERT",
      "path": "0"
    },
    "324": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2493,
        2597
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "325": {
      "op": "POP"
    },
    "326": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2493,
        2597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x158"
    },
    "329": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2493,
        2597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x153"
    },
    "332": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2493,
        2597
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "333": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2493,
        2597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "335": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2493,
        2597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B8"
    },
    "338": {
      "fn": "NftCollection.addToWhiteList",
      "jump": "i",
      "offset": [
        2493,
        2597
      ],
      "op": "JUMP",
      "path": "0"
    },
    "339": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2493,
        2597
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "340": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2493,
        2597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C9"
    },
    "343": {
      "fn": "NftCollection.addToWhiteList",
      "jump": "i",
      "offset": [
        2493,
        2597
      ],
      "op": "JUMP",
      "path": "0"
    },
    "344": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2493,
        2597
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "345": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2493,
        2597
      ],
      "op": "STOP",
      "path": "0"
    },
    "346": {
      "fn": "NftCollection.setClosedToPublic",
      "offset": [
        3545,
        3648
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "347": {
      "fn": "NftCollection.setClosedToPublic",
      "offset": [
        3545,
        3648
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "348": {
      "fn": "NftCollection.setClosedToPublic",
      "offset": [
        3545,
        3648
      ],
      "op": "DUP1",
      "path": "0"
    },
    "349": {
      "fn": "NftCollection.setClosedToPublic",
      "offset": [
        3545,
        3648
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "350": {
      "fn": "NftCollection.setClosedToPublic",
      "offset": [
        3545,
        3648
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x166"
    },
    "353": {
      "fn": "NftCollection.setClosedToPublic",
      "offset": [
        3545,
        3648
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "354": {
      "fn": "NftCollection.setClosedToPublic",
      "offset": [
        3545,
        3648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "356": {
      "fn": "NftCollection.setClosedToPublic",
      "offset": [
        3545,
        3648
      ],
      "op": "DUP1",
      "path": "0"
    },
    "357": {
      "fn": "NftCollection.setClosedToPublic",
      "offset": [
        3545,
        3648
      ],
      "op": "REVERT",
      "path": "0"
    },
    "358": {
      "fn": "NftCollection.setClosedToPublic",
      "offset": [
        3545,
        3648
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "359": {
      "fn": "NftCollection.setClosedToPublic",
      "offset": [
        3545,
        3648
      ],
      "op": "POP",
      "path": "0"
    },
    "360": {
      "fn": "NftCollection.setClosedToPublic",
      "offset": [
        3545,
        3648
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10D"
    },
    "363": {
      "fn": "NftCollection.setClosedToPublic",
      "offset": [
        3545,
        3648
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FE"
    },
    "366": {
      "fn": "NftCollection.setClosedToPublic",
      "jump": "i",
      "offset": [
        3545,
        3648
      ],
      "op": "JUMP",
      "path": "0"
    },
    "367": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2873,
        2956
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "368": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2873,
        2956
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "369": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2873,
        2956
      ],
      "op": "DUP1",
      "path": "0"
    },
    "370": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2873,
        2956
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "371": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2873,
        2956
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17B"
    },
    "374": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2873,
        2956
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "375": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2873,
        2956
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "377": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2873,
        2956
      ],
      "op": "DUP1",
      "path": "0"
    },
    "378": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2873,
        2956
      ],
      "op": "REVERT",
      "path": "0"
    },
    "379": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2873,
        2956
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "380": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2873,
        2956
      ],
      "op": "POP",
      "path": "0"
    },
    "381": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2873,
        2956
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184"
    },
    "384": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2873,
        2956
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31E"
    },
    "387": {
      "fn": "NftCollection.getMaxSupply",
      "jump": "i",
      "offset": [
        2873,
        2956
      ],
      "op": "JUMP",
      "path": "0"
    },
    "388": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2873,
        2956
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "389": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2873,
        2956
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "391": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2873,
        2956
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "392": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2873,
        2956
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A"
    },
    "395": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2873,
        2956
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "396": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2873,
        2956
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "397": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2873,
        2956
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB9D"
    },
    "400": {
      "fn": "NftCollection.getMaxSupply",
      "jump": "i",
      "offset": [
        2873,
        2956
      ],
      "op": "JUMP",
      "path": "0"
    },
    "401": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3758,
        4338
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "402": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3758,
        4338
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x158"
    },
    "405": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3758,
        4338
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32F"
    },
    "408": {
      "fn": "NftCollection.safeMint",
      "jump": "i",
      "offset": [
        3758,
        4338
      ],
      "op": "JUMP",
      "path": "0"
    },
    "409": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "410": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "411": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "DUP1",
      "path": "1"
    },
    "412": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "413": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A5"
    },
    "416": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "417": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "419": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "DUP1",
      "path": "1"
    },
    "420": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "REVERT",
      "path": "1"
    },
    "421": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "422": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "POP",
      "path": "1"
    },
    "423": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x158"
    },
    "426": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x467"
    },
    "429": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1254,
        1381
      ],
      "op": "JUMP",
      "path": "1"
    },
    "430": {
      "fn": "NftCollection.createToken",
      "offset": [
        2603,
        2867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "431": {
      "fn": "NftCollection.createToken",
      "offset": [
        2603,
        2867
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "432": {
      "fn": "NftCollection.createToken",
      "offset": [
        2603,
        2867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "433": {
      "fn": "NftCollection.createToken",
      "offset": [
        2603,
        2867
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "434": {
      "fn": "NftCollection.createToken",
      "offset": [
        2603,
        2867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BA"
    },
    "437": {
      "fn": "NftCollection.createToken",
      "offset": [
        2603,
        2867
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "438": {
      "fn": "NftCollection.createToken",
      "offset": [
        2603,
        2867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "440": {
      "fn": "NftCollection.createToken",
      "offset": [
        2603,
        2867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "441": {
      "fn": "NftCollection.createToken",
      "offset": [
        2603,
        2867
      ],
      "op": "REVERT",
      "path": "0"
    },
    "442": {
      "fn": "NftCollection.createToken",
      "offset": [
        2603,
        2867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "443": {
      "op": "POP"
    },
    "444": {
      "fn": "NftCollection.createToken",
      "offset": [
        2603,
        2867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x158"
    },
    "447": {
      "fn": "NftCollection.createToken",
      "offset": [
        2603,
        2867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C9"
    },
    "450": {
      "fn": "NftCollection.createToken",
      "offset": [
        2603,
        2867
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "451": {
      "fn": "NftCollection.createToken",
      "offset": [
        2603,
        2867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "453": {
      "fn": "NftCollection.createToken",
      "offset": [
        2603,
        2867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9DB"
    },
    "456": {
      "fn": "NftCollection.createToken",
      "jump": "i",
      "offset": [
        2603,
        2867
      ],
      "op": "JUMP",
      "path": "0"
    },
    "457": {
      "fn": "NftCollection.createToken",
      "offset": [
        2603,
        2867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "458": {
      "fn": "NftCollection.createToken",
      "offset": [
        2603,
        2867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C2"
    },
    "461": {
      "fn": "NftCollection.createToken",
      "jump": "i",
      "offset": [
        2603,
        2867
      ],
      "op": "JUMP",
      "path": "0"
    },
    "462": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3338,
        3433
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "463": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3338,
        3433
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "464": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3338,
        3433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "465": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3338,
        3433
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "466": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3338,
        3433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DA"
    },
    "469": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3338,
        3433
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "470": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3338,
        3433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "472": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3338,
        3433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "473": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3338,
        3433
      ],
      "op": "REVERT",
      "path": "0"
    },
    "474": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3338,
        3433
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "475": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3338,
        3433
      ],
      "op": "POP",
      "path": "0"
    },
    "476": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3338,
        3433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10D"
    },
    "479": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3338,
        3433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63B"
    },
    "482": {
      "fn": "NftCollection.getOpenToPublic",
      "jump": "i",
      "offset": [
        3338,
        3433
      ],
      "op": "JUMP",
      "path": "0"
    },
    "483": {
      "fn": "NftCollection.getNumberOfPubliSale",
      "offset": [
        2395,
        2487
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "484": {
      "fn": "NftCollection.getNumberOfPubliSale",
      "offset": [
        2395,
        2487
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "485": {
      "fn": "NftCollection.getNumberOfPubliSale",
      "offset": [
        2395,
        2487
      ],
      "op": "DUP1",
      "path": "0"
    },
    "486": {
      "fn": "NftCollection.getNumberOfPubliSale",
      "offset": [
        2395,
        2487
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "487": {
      "fn": "NftCollection.getNumberOfPubliSale",
      "offset": [
        2395,
        2487
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EF"
    },
    "490": {
      "fn": "NftCollection.getNumberOfPubliSale",
      "offset": [
        2395,
        2487
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "491": {
      "fn": "NftCollection.getNumberOfPubliSale",
      "offset": [
        2395,
        2487
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "493": {
      "fn": "NftCollection.getNumberOfPubliSale",
      "offset": [
        2395,
        2487
      ],
      "op": "DUP1",
      "path": "0"
    },
    "494": {
      "fn": "NftCollection.getNumberOfPubliSale",
      "offset": [
        2395,
        2487
      ],
      "op": "REVERT",
      "path": "0"
    },
    "495": {
      "fn": "NftCollection.getNumberOfPubliSale",
      "offset": [
        2395,
        2487
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "496": {
      "fn": "NftCollection.getNumberOfPubliSale",
      "offset": [
        2395,
        2487
      ],
      "op": "POP",
      "path": "0"
    },
    "497": {
      "fn": "NftCollection.getNumberOfPubliSale",
      "offset": [
        2395,
        2487
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184"
    },
    "500": {
      "fn": "NftCollection.getNumberOfPubliSale",
      "offset": [
        2395,
        2487
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x644"
    },
    "503": {
      "fn": "NftCollection.getNumberOfPubliSale",
      "jump": "i",
      "offset": [
        2395,
        2487
      ],
      "op": "JUMP",
      "path": "0"
    },
    "504": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "505": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "506": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "DUP1",
      "path": "1"
    },
    "507": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "508": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x204"
    },
    "511": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "512": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "514": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "DUP1",
      "path": "1"
    },
    "515": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "REVERT",
      "path": "1"
    },
    "516": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "517": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "POP",
      "path": "1"
    },
    "518": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20D"
    },
    "521": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x657"
    },
    "524": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        629,
        699
      ],
      "op": "JUMP",
      "path": "1"
    },
    "525": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "526": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "528": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "529": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11A"
    },
    "532": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "533": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "534": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB40"
    },
    "537": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        629,
        699
      ],
      "op": "JUMP",
      "path": "1"
    },
    "538": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "539": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "540": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "DUP1",
      "path": "1"
    },
    "541": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "542": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x226"
    },
    "545": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "546": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "548": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "DUP1",
      "path": "1"
    },
    "549": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "REVERT",
      "path": "1"
    },
    "550": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "551": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "POP",
      "path": "1"
    },
    "552": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10D"
    },
    "555": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x666"
    },
    "558": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        912,
        995
      ],
      "op": "JUMP",
      "path": "1"
    },
    "559": {
      "fn": "NftCollection.getNumberOfPreSale",
      "offset": [
        2302,
        2389
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "560": {
      "fn": "NftCollection.getNumberOfPreSale",
      "offset": [
        2302,
        2389
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "561": {
      "fn": "NftCollection.getNumberOfPreSale",
      "offset": [
        2302,
        2389
      ],
      "op": "DUP1",
      "path": "0"
    },
    "562": {
      "fn": "NftCollection.getNumberOfPreSale",
      "offset": [
        2302,
        2389
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "563": {
      "fn": "NftCollection.getNumberOfPreSale",
      "offset": [
        2302,
        2389
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23B"
    },
    "566": {
      "fn": "NftCollection.getNumberOfPreSale",
      "offset": [
        2302,
        2389
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "567": {
      "fn": "NftCollection.getNumberOfPreSale",
      "offset": [
        2302,
        2389
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "569": {
      "fn": "NftCollection.getNumberOfPreSale",
      "offset": [
        2302,
        2389
      ],
      "op": "DUP1",
      "path": "0"
    },
    "570": {
      "fn": "NftCollection.getNumberOfPreSale",
      "offset": [
        2302,
        2389
      ],
      "op": "REVERT",
      "path": "0"
    },
    "571": {
      "fn": "NftCollection.getNumberOfPreSale",
      "offset": [
        2302,
        2389
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "572": {
      "fn": "NftCollection.getNumberOfPreSale",
      "offset": [
        2302,
        2389
      ],
      "op": "POP",
      "path": "0"
    },
    "573": {
      "fn": "NftCollection.getNumberOfPreSale",
      "offset": [
        2302,
        2389
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184"
    },
    "576": {
      "fn": "NftCollection.getNumberOfPreSale",
      "offset": [
        2302,
        2389
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x677"
    },
    "579": {
      "fn": "NftCollection.getNumberOfPreSale",
      "jump": "i",
      "offset": [
        2302,
        2389
      ],
      "op": "JUMP",
      "path": "0"
    },
    "580": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3654,
        3752
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "581": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3654,
        3752
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "582": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3654,
        3752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "583": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3654,
        3752
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "584": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3654,
        3752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x250"
    },
    "587": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3654,
        3752
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "588": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3654,
        3752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "590": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3654,
        3752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "591": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3654,
        3752
      ],
      "op": "REVERT",
      "path": "0"
    },
    "592": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3654,
        3752
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "593": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3654,
        3752
      ],
      "op": "POP",
      "path": "0"
    },
    "594": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3654,
        3752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10D"
    },
    "597": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3654,
        3752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x68A"
    },
    "600": {
      "fn": "NftCollection.getOnWhiteList",
      "jump": "i",
      "offset": [
        3654,
        3752
      ],
      "op": "JUMP",
      "path": "0"
    },
    "601": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "602": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "603": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "DUP1",
      "path": "1"
    },
    "604": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "605": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x265"
    },
    "608": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "609": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "611": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "DUP1",
      "path": "1"
    },
    "612": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "REVERT",
      "path": "1"
    },
    "613": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "614": {
      "op": "POP"
    },
    "615": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x158"
    },
    "618": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x274"
    },
    "621": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "622": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "624": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9B8"
    },
    "627": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1539,
        1640
      ],
      "op": "JUMP",
      "path": "1"
    },
    "628": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "629": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6A0"
    },
    "632": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1539,
        1640
      ],
      "op": "JUMP",
      "path": "1"
    },
    "633": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2962,
        3066
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "634": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2962,
        3066
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "635": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2962,
        3066
      ],
      "op": "DUP1",
      "path": "0"
    },
    "636": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2962,
        3066
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "637": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2962,
        3066
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x285"
    },
    "640": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2962,
        3066
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "641": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2962,
        3066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "643": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2962,
        3066
      ],
      "op": "DUP1",
      "path": "0"
    },
    "644": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2962,
        3066
      ],
      "op": "REVERT",
      "path": "0"
    },
    "645": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2962,
        3066
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "646": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2962,
        3066
      ],
      "op": "POP",
      "path": "0"
    },
    "647": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2962,
        3066
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184"
    },
    "650": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2962,
        3066
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6BD"
    },
    "653": {
      "fn": "NftCollection.getRemainingMints",
      "jump": "i",
      "offset": [
        2962,
        3066
      ],
      "op": "JUMP",
      "path": "0"
    },
    "654": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "655": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3162,
        3166
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "657": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3178,
        3209
      ],
      "op": "DUP1",
      "path": "0"
    },
    "658": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3212,
        3224
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x299"
    },
    "661": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3212,
        3222
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E0"
    },
    "664": {
      "fn": "NftCollection.getSaleStarted",
      "jump": "i",
      "offset": [
        3212,
        3224
      ],
      "op": "JUMP",
      "path": "0"
    },
    "665": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3212,
        3224
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "666": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3241,
        3259
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x4"
    },
    "668": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3241,
        3259
      ],
      "op": "ADD",
      "path": "0"
    },
    "669": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3241,
        3259
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "670": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3241,
        3259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "672": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3241,
        3259
      ],
      "op": "AND",
      "path": "0"
    },
    "673": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3241,
        3259
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "674": {
      "op": "POP"
    },
    "675": {
      "op": "POP"
    },
    "676": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        3115,
        3266
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "677": {
      "fn": "NftCollection.getSaleStarted",
      "jump": "o",
      "offset": [
        3115,
        3266
      ],
      "op": "JUMP",
      "path": "0"
    },
    "678": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        3439,
        3539
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "679": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        3492,
        3496
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "681": {
      "offset": [
        812,
        821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B0"
    },
    "684": {
      "offset": [
        812,
        819
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x666"
    },
    "687": {
      "jump": "i",
      "offset": [
        812,
        821
      ],
      "op": "JUMP",
      "path": "1"
    },
    "688": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        812,
        821
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "689": {
      "offset": [
        804,
        822
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B9"
    },
    "692": {
      "offset": [
        804,
        822
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "693": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        804,
        822
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "695": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        804,
        822
      ],
      "op": "DUP1",
      "path": "1"
    },
    "696": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        804,
        822
      ],
      "op": "REVERT",
      "path": "1"
    },
    "697": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        804,
        822
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "698": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        3508,
        3525
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x3"
    },
    "700": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        3508,
        3532
      ],
      "op": "DUP1",
      "path": "0"
    },
    "701": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        3508,
        3532
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "702": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "704": {
      "op": "NOT"
    },
    "705": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        3508,
        3532
      ],
      "op": "AND",
      "path": "0"
    },
    "706": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        3528,
        3532
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "708": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        3508,
        3532
      ],
      "op": "OR",
      "path": "0"
    },
    "709": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        3508,
        3532
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "710": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        3508,
        3532
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "711": {
      "fn": "NftCollection.setOpenToPublic",
      "offset": [
        3439,
        3539
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "712": {
      "fn": "NftCollection.setOpenToPublic",
      "jump": "o",
      "offset": [
        3439,
        3539
      ],
      "op": "JUMP",
      "path": "0"
    },
    "713": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2493,
        2597
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "714": {
      "offset": [
        812,
        821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D1"
    },
    "717": {
      "offset": [
        812,
        819
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x666"
    },
    "720": {
      "jump": "i",
      "offset": [
        812,
        821
      ],
      "op": "JUMP",
      "path": "1"
    },
    "721": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        812,
        821
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "722": {
      "offset": [
        804,
        822
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2DA"
    },
    "725": {
      "offset": [
        804,
        822
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "726": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        804,
        822
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "728": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        804,
        822
      ],
      "op": "DUP1",
      "path": "1"
    },
    "729": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        804,
        822
      ],
      "op": "REVERT",
      "path": "1"
    },
    "730": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        804,
        822
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "737": {
      "op": "SHL"
    },
    "738": {
      "op": "SUB"
    },
    "739": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2564,
        2583
      ],
      "op": "AND",
      "path": "0",
      "statement": 2
    },
    "740": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2564,
        2583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "742": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2564,
        2583
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "743": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2564,
        2583
      ],
      "op": "DUP2",
      "path": "0"
    },
    "744": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2564,
        2583
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "745": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2564,
        2573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "747": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2564,
        2583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "749": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2564,
        2583
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "750": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2564,
        2583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "752": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2564,
        2583
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "753": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2564,
        2583
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "754": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2564,
        2590
      ],
      "op": "DUP1",
      "path": "0"
    },
    "755": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2564,
        2590
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "756": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "758": {
      "op": "NOT"
    },
    "759": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2564,
        2590
      ],
      "op": "AND",
      "path": "0"
    },
    "760": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2586,
        2590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "762": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2564,
        2590
      ],
      "op": "OR",
      "path": "0"
    },
    "763": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2564,
        2590
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "764": {
      "fn": "NftCollection.addToWhiteList",
      "offset": [
        2564,
        2590
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "765": {
      "fn": "NftCollection.addToWhiteList",
      "jump": "o",
      "offset": [
        2493,
        2597
      ],
      "op": "JUMP",
      "path": "0"
    },
    "766": {
      "fn": "NftCollection.setClosedToPublic",
      "offset": [
        3545,
        3648
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "767": {
      "fn": "NftCollection.setClosedToPublic",
      "offset": [
        3600,
        3604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "769": {
      "offset": [
        812,
        821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x308"
    },
    "772": {
      "offset": [
        812,
        819
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x666"
    },
    "775": {
      "jump": "i",
      "offset": [
        812,
        821
      ],
      "op": "JUMP",
      "path": "1"
    },
    "776": {
      "fn": "NftCollection.setClosedToPublic",
      "offset": [
        812,
        821
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "777": {
      "offset": [
        804,
        822
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x311"
    },
    "780": {
      "offset": [
        804,
        822
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "781": {
      "fn": "NftCollection.setClosedToPublic",
      "offset": [
        804,
        822
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "783": {
      "fn": "NftCollection.setClosedToPublic",
      "offset": [
        804,
        822
      ],
      "op": "DUP1",
      "path": "1"
    },
    "784": {
      "fn": "NftCollection.setClosedToPublic",
      "offset": [
        804,
        822
      ],
      "op": "REVERT",
      "path": "1"
    },
    "785": {
      "fn": "NftCollection.setClosedToPublic",
      "offset": [
        804,
        822
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "786": {
      "fn": "NftCollection.setClosedToPublic",
      "offset": [
        3616,
        3633
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x3"
    },
    "788": {
      "fn": "NftCollection.setClosedToPublic",
      "offset": [
        3616,
        3641
      ],
      "op": "DUP1",
      "path": "0"
    },
    "789": {
      "fn": "NftCollection.setClosedToPublic",
      "offset": [
        3616,
        3641
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "790": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "792": {
      "op": "NOT"
    },
    "793": {
      "fn": "NftCollection.setClosedToPublic",
      "offset": [
        3616,
        3641
      ],
      "op": "AND",
      "path": "0"
    },
    "794": {
      "fn": "NftCollection.setClosedToPublic",
      "offset": [
        3616,
        3641
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "795": {
      "fn": "NftCollection.setClosedToPublic",
      "offset": [
        3616,
        3641
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "796": {
      "fn": "NftCollection.setClosedToPublic",
      "offset": [
        3545,
        3648
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "797": {
      "fn": "NftCollection.setClosedToPublic",
      "jump": "o",
      "offset": [
        3545,
        3648
      ],
      "op": "JUMP",
      "path": "0"
    },
    "798": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2873,
        2956
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "799": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2940,
        2949
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x3"
    },
    "801": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2940,
        2949
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "802": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2940,
        2949
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "805": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2940,
        2949
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "806": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2940,
        2949
      ],
      "op": "DIV",
      "path": "0"
    },
    "807": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2940,
        2949
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "812": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2940,
        2949
      ],
      "op": "AND",
      "path": "0"
    },
    "813": {
      "fn": "NftCollection.getMaxSupply",
      "offset": [
        2940,
        2949
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "814": {
      "fn": "NftCollection.getMaxSupply",
      "jump": "o",
      "offset": [
        2873,
        2956
      ],
      "op": "JUMP",
      "path": "0"
    },
    "815": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3758,
        4338
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "816": {
      "offset": [
        4651,
        4661
      ],
      "op": "CALLER",
      "path": "0"
    },
    "817": {
      "offset": [
        4672,
        4673
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "819": {
      "offset": [
        4633,
        4662
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "820": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4633,
        4662
      ],
      "op": "DUP2",
      "path": "0"
    },
    "821": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4633,
        4662
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "822": {
      "offset": [
        4633,
        4650
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "824": {
      "offset": [
        4633,
        4662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "826": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4633,
        4662
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "827": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4633,
        4662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "829": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4633,
        4662
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "830": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4633,
        4662
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "831": {
      "offset": [
        4633,
        4669
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "832": {
      "offset": [
        4625,
        4674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x348"
    },
    "835": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4625,
        4674
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "836": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4625,
        4674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "838": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4625,
        4674
      ],
      "op": "DUP1",
      "path": "0"
    },
    "839": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4625,
        4674
      ],
      "op": "REVERT",
      "path": "0"
    },
    "840": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4625,
        4674
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "841": {
      "offset": [
        4764,
        4780
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x350"
    },
    "844": {
      "offset": [
        4764,
        4778
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x68A"
    },
    "847": {
      "jump": "i",
      "offset": [
        4764,
        4780
      ],
      "op": "JUMP",
      "path": "0"
    },
    "848": {
      "branch": 26,
      "fn": "NftCollection.safeMint",
      "offset": [
        4764,
        4780
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "849": {
      "offset": [
        4764,
        4801
      ],
      "op": "DUP1",
      "path": "0"
    },
    "850": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4764,
        4801
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35E"
    },
    "853": {
      "branch": 26,
      "offset": [
        4764,
        4801
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "854": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4764,
        4801
      ],
      "op": "POP",
      "path": "0"
    },
    "855": {
      "offset": [
        4784,
        4801
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35E"
    },
    "858": {
      "offset": [
        4784,
        4799
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63B"
    },
    "861": {
      "jump": "i",
      "offset": [
        4784,
        4801
      ],
      "op": "JUMP",
      "path": "0"
    },
    "862": {
      "branch": 27,
      "fn": "NftCollection.safeMint",
      "offset": [
        4784,
        4801
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "863": {
      "offset": [
        4756,
        4802
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x367"
    },
    "866": {
      "branch": 27,
      "offset": [
        4756,
        4802
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "867": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4756,
        4802
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "869": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4756,
        4802
      ],
      "op": "DUP1",
      "path": "0"
    },
    "870": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4756,
        4802
      ],
      "op": "REVERT",
      "path": "0"
    },
    "871": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4756,
        4802
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "872": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3946,
        3952
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x4"
    },
    "874": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3946,
        3952
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "875": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3933,
        3942
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "876": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3933,
        3952
      ],
      "op": "LT",
      "path": "0"
    },
    "877": {
      "branch": 28,
      "fn": "NftCollection.safeMint",
      "offset": [
        3933,
        3952
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "878": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3925,
        3953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x376"
    },
    "881": {
      "branch": 28,
      "fn": "NftCollection.safeMint",
      "offset": [
        3925,
        3953
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "882": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3925,
        3953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "884": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3925,
        3953
      ],
      "op": "DUP1",
      "path": "0"
    },
    "885": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3925,
        3953
      ],
      "op": "REVERT",
      "path": "0"
    },
    "886": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3925,
        3953
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "887": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3968,
        3985
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37E"
    },
    "890": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3968,
        3983
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63B"
    },
    "893": {
      "fn": "NftCollection.safeMint",
      "jump": "i",
      "offset": [
        3968,
        3985
      ],
      "op": "JUMP",
      "path": "0"
    },
    "894": {
      "branch": 29,
      "fn": "NftCollection.safeMint",
      "offset": [
        3968,
        3985
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "895": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3964,
        4139
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "896": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3964,
        4139
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B2"
    },
    "899": {
      "branch": 29,
      "fn": "NftCollection.safeMint",
      "offset": [
        3964,
        4139
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "900": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4001,
        4011
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x3"
    },
    "902": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4001,
        4014
      ],
      "op": "DUP1",
      "path": "0"
    },
    "903": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4001,
        4014
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "904": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4001,
        4014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "906": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4001,
        4014
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "913": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "915": {
      "op": "SHL"
    },
    "916": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4001,
        4014
      ],
      "op": "DUP1",
      "path": "0"
    },
    "917": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4001,
        4014
      ],
      "op": "DUP5",
      "path": "0"
    },
    "918": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4001,
        4014
      ],
      "op": "DIV",
      "path": "0"
    },
    "919": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4001,
        4014
      ],
      "op": "DUP3",
      "path": "0"
    },
    "920": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4001,
        4014
      ],
      "op": "AND",
      "path": "0"
    },
    "921": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4001,
        4014
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "922": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4001,
        4014
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "923": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4001,
        4014
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "924": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4001,
        4014
      ],
      "op": "ADD",
      "path": "0"
    },
    "925": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4001,
        4014
      ],
      "op": "AND",
      "path": "0"
    },
    "926": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4001,
        4014
      ],
      "op": "MUL",
      "path": "0"
    },
    "927": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "932": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "934": {
      "op": "SHL"
    },
    "935": {
      "op": "NOT"
    },
    "936": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4001,
        4014
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "937": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4001,
        4014
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "938": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4001,
        4014
      ],
      "op": "AND",
      "path": "0"
    },
    "939": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4001,
        4014
      ],
      "op": "OR",
      "path": "0"
    },
    "940": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4001,
        4014
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "941": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4001,
        4014
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "942": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3964,
        4139
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F0"
    },
    "945": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3964,
        4139
      ],
      "op": "JUMP",
      "path": "0"
    },
    "946": {
      "fn": "NftCollection.safeMint",
      "offset": [
        3964,
        4139
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "947": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4034,
        4050
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BA"
    },
    "950": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4034,
        4048
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x68A"
    },
    "953": {
      "fn": "NftCollection.safeMint",
      "jump": "i",
      "offset": [
        4034,
        4050
      ],
      "op": "JUMP",
      "path": "0"
    },
    "954": {
      "branch": 30,
      "fn": "NftCollection.safeMint",
      "offset": [
        4034,
        4050
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "955": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4031,
        4139
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "956": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4031,
        4139
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F0"
    },
    "959": {
      "branch": 30,
      "fn": "NftCollection.safeMint",
      "offset": [
        4031,
        4139
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "960": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4118,
        4125
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x3"
    },
    "962": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4118,
        4128
      ],
      "op": "DUP1",
      "path": "0"
    },
    "963": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4118,
        4128
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "964": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4118,
        4128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "966": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4118,
        4128
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "973": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "975": {
      "op": "SHL"
    },
    "976": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4118,
        4128
      ],
      "op": "DUP1",
      "path": "0"
    },
    "977": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4118,
        4128
      ],
      "op": "DUP5",
      "path": "0"
    },
    "978": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4118,
        4128
      ],
      "op": "DIV",
      "path": "0"
    },
    "979": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4118,
        4128
      ],
      "op": "DUP3",
      "path": "0"
    },
    "980": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4118,
        4128
      ],
      "op": "AND",
      "path": "0"
    },
    "981": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4118,
        4128
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "982": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4118,
        4128
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "983": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4118,
        4128
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "984": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4118,
        4128
      ],
      "op": "ADD",
      "path": "0"
    },
    "985": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4118,
        4128
      ],
      "op": "AND",
      "path": "0"
    },
    "986": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4118,
        4128
      ],
      "op": "MUL",
      "path": "0"
    },
    "987": {
      "op": "PUSH13",
      "value": "0xFFFFFFFF000000000000000000"
    },
    "1001": {
      "op": "NOT"
    },
    "1002": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4118,
        4128
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1003": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4118,
        4128
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1004": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4118,
        4128
      ],
      "op": "AND",
      "path": "0"
    },
    "1005": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4118,
        4128
      ],
      "op": "OR",
      "path": "0"
    },
    "1006": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4118,
        4128
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1007": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4118,
        4128
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1008": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4031,
        4139
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1009": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4221,
        4243
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1011": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4262,
        4269
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FA"
    },
    "1014": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4262,
        4267
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x657"
    },
    "1017": {
      "fn": "NftCollection.safeMint",
      "jump": "i",
      "offset": [
        4262,
        4269
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1018": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4262,
        4269
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1019": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4297,
        4303
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x4"
    },
    "1021": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4297,
        4303
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1022": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1024": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1025": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4221,
        4271
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1026": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4221,
        4271
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1027": {
      "op": "POP"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1034": {
      "op": "SHL"
    },
    "1035": {
      "op": "SUB"
    },
    "1036": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4296
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1037": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4296
      ],
      "op": "AND",
      "path": "0"
    },
    "1038": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4296
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1039": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1040": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1041": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "1044": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "MUL",
      "path": "0"
    },
    "1045": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1046": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4297,
        4303
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1047": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1049": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1050": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1051": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1052": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4297,
        4303
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1053": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4296
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1054": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1055": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "CALL",
      "path": "0"
    },
    "1056": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1057": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "POP",
      "path": "0"
    },
    "1058": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "POP",
      "path": "0"
    },
    "1059": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "POP",
      "path": "0"
    },
    "1060": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "POP",
      "path": "0"
    },
    "1061": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1062": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1063": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1064": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x435"
    },
    "1067": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1068": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1069": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1071": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1072": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1073": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1074": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1076": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1077": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4281,
        4304
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1078": {
      "op": "POP"
    },
    "1079": {
      "op": "POP"
    },
    "1080": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4315,
        4328
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x3"
    },
    "1082": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4315,
        4331
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1083": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4315,
        4331
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1084": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4315,
        4331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1086": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4315,
        4331
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1091": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4315,
        4331
      ],
      "op": "PUSH6",
      "path": "0",
      "value": "0x10000000000"
    },
    "1098": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4315,
        4331
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1099": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4315,
        4331
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1100": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4315,
        4331
      ],
      "op": "DIV",
      "path": "0"
    },
    "1101": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4315,
        4331
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1102": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4315,
        4331
      ],
      "op": "AND",
      "path": "0"
    },
    "1103": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4315,
        4331
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1104": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4315,
        4331
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1105": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4315,
        4331
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1106": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4315,
        4331
      ],
      "op": "ADD",
      "path": "0"
    },
    "1107": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4315,
        4331
      ],
      "op": "AND",
      "path": "0"
    },
    "1108": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4315,
        4331
      ],
      "op": "MUL",
      "path": "0"
    },
    "1109": {
      "op": "PUSH9",
      "value": "0xFFFFFFFF0000000000"
    },
    "1119": {
      "op": "NOT"
    },
    "1120": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4315,
        4331
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1121": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4315,
        4331
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1122": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4315,
        4331
      ],
      "op": "AND",
      "path": "0"
    },
    "1123": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4315,
        4331
      ],
      "op": "OR",
      "path": "0"
    },
    "1124": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4315,
        4331
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1125": {
      "fn": "NftCollection.safeMint",
      "offset": [
        4315,
        4331
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1126": {
      "fn": "NftCollection.safeMint",
      "jump": "o",
      "offset": [
        3758,
        4338
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1127": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1128": {
      "offset": [
        812,
        821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x46F"
    },
    "1131": {
      "offset": [
        812,
        819
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x666"
    },
    "1134": {
      "jump": "i",
      "offset": [
        812,
        821
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1135": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        812,
        821
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1136": {
      "offset": [
        804,
        822
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x478"
    },
    "1139": {
      "offset": [
        804,
        822
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1140": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        804,
        822
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1142": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        804,
        822
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1143": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        804,
        822
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1144": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        804,
        822
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1145": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1349
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 10,
      "value": "0x0"
    },
    "1147": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1332,
        1338
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1148": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1332,
        1338
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1149": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1311,
        1351
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1151": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1311,
        1351
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1158": {
      "op": "SHL"
    },
    "1159": {
      "op": "SUB"
    },
    "1160": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1332,
        1338
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1161": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1332,
        1338
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1162": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1332,
        1338
      ],
      "op": "AND",
      "path": "1"
    },
    "1163": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1332,
        1338
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1164": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1311,
        1351
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1197": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1311,
        1351
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1198": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1349
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1199": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1349
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1200": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1311,
        1351
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1201": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1374,
        1375
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 11,
      "value": "0x0"
    },
    "1203": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1357,
        1376
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1204": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1357,
        1376
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1211": {
      "op": "SHL"
    },
    "1212": {
      "op": "SUB"
    },
    "1213": {
      "op": "NOT"
    },
    "1214": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1357,
        1376
      ],
      "op": "AND",
      "path": "1"
    },
    "1215": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1357,
        1376
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1216": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1357,
        1376
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1217": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1254,
        1381
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1218": {
      "fn": "NftCollection.createToken",
      "offset": [
        2603,
        2867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1219": {
      "fn": "NftCollection.createToken",
      "offset": [
        2705,
        2735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4CA"
    },
    "1222": {
      "fn": "NftCollection.createToken",
      "offset": [
        2705,
        2735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x796"
    },
    "1225": {
      "fn": "NftCollection.createToken",
      "jump": "i",
      "offset": [
        2705,
        2735
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1226": {
      "fn": "NftCollection.createToken",
      "offset": [
        2705,
        2735
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1227": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1229": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1230": {
      "op": "PUSH3",
      "value": "0xCF045"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1236": {
      "op": "SHL"
    },
    "1237": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1238": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1239": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2745
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0x0"
    },
    "1260": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2745
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1261": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2759
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x19E08A0"
    },
    "1266": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2759
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1267": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x504"
    },
    "1270": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1271": {
      "fn": "NftCollection.createToken",
      "offset": [
        2760,
        2765
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1272": {
      "fn": "NftCollection.createToken",
      "offset": [
        2760,
        2765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1273": {
      "fn": "NftCollection.createToken",
      "offset": [
        2767,
        2775
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1274": {
      "fn": "NftCollection.createToken",
      "offset": [
        2767,
        2775
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1275": {
      "fn": "NftCollection.createToken",
      "offset": [
        2777,
        2786
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1276": {
      "fn": "NftCollection.createToken",
      "offset": [
        2777,
        2786
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1277": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1279": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "ADD",
      "path": "0"
    },
    "1280": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5F"
    },
    "1283": {
      "fn": "NftCollection.createToken",
      "jump": "i",
      "offset": [
        2738,
        2787
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1284": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1285": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1287": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1289": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1290": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1291": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1292": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "SUB",
      "path": "0"
    },
    "1293": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1294": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1295": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1296": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "1297": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1298": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1299": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1300": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51C"
    },
    "1303": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1304": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1306": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1307": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1308": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1309": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "POP",
      "path": "0"
    },
    "1310": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "GAS",
      "path": "0"
    },
    "1311": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "DELEGATECALL",
      "path": "0"
    },
    "1312": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1313": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1314": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1315": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x530"
    },
    "1318": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1319": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1320": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1322": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1323": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1324": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1325": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1327": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1328": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1329": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "POP",
      "path": "0"
    },
    "1330": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "POP",
      "path": "0"
    },
    "1331": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "POP",
      "path": "0"
    },
    "1332": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "POP",
      "path": "0"
    },
    "1333": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1335": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1336": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1337": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1339": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1340": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1341": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1343": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1344": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1345": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1346": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "ADD",
      "path": "0"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1349": {
      "op": "NOT"
    },
    "1350": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "AND",
      "path": "0"
    },
    "1351": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1352": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "ADD",
      "path": "0"
    },
    "1353": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1355": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1356": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x558"
    },
    "1359": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1360": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1361": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1362": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "ADD",
      "path": "0"
    },
    "1363": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1364": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA50"
    },
    "1367": {
      "fn": "NftCollection.createToken",
      "jump": "i",
      "offset": [
        2738,
        2787
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1368": {
      "fn": "NftCollection.createToken",
      "offset": [
        2738,
        2787
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1375": {
      "op": "SHL"
    },
    "1376": {
      "op": "SUB"
    },
    "1377": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2824
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 12
    },
    "1378": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2824
      ],
      "op": "AND",
      "path": "0"
    },
    "1379": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1381": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1382": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1383": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1384": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1386": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1388": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1389": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1390": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1391": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1393": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2824
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1394": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2824
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1395": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1396": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1397": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1398": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1399": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "ADD",
      "path": "0"
    },
    "1400": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1401": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1402": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1403": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1404": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1405": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1406": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1407": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1408": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1409": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1410": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1411": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1412": {
      "fn": "NftCollection.createToken",
      "offset": [
        2705,
        2787
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1413": {
      "fn": "NftCollection.createToken",
      "offset": [
        2705,
        2787
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1414": {
      "op": "POP"
    },
    "1415": {
      "fn": "NftCollection.createToken",
      "offset": [
        2705,
        2787
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1416": {
      "fn": "NftCollection.createToken",
      "offset": [
        2705,
        2787
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1417": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1419": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1420": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1421": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "MUL",
      "path": "0"
    },
    "1422": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1423": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1424": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "ADD",
      "path": "0"
    },
    "1425": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1426": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A0"
    },
    "1429": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1430": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1431": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1432": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1433": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1434": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "ADD",
      "path": "0"
    },
    "1435": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1436": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D0"
    },
    "1439": {
      "fn": "NftCollection.createToken",
      "jump": "i",
      "offset": [
        2797,
        2838
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1440": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1441": {
      "op": "POP"
    },
    "1442": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1444": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1445": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1446": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "ADD",
      "path": "0"
    },
    "1447": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1448": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1450": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1451": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "ADD",
      "path": "0"
    },
    "1452": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1453": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1460": {
      "op": "SHL"
    },
    "1461": {
      "op": "SUB"
    },
    "1462": {
      "op": "NOT"
    },
    "1463": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "AND",
      "path": "0"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1470": {
      "op": "SHL"
    },
    "1471": {
      "op": "SUB"
    },
    "1472": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1473": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1474": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "AND",
      "path": "0"
    },
    "1475": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1476": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1477": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1478": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "OR",
      "path": "0"
    },
    "1479": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1480": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1481": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1483": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1484": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "ADD",
      "path": "0"
    },
    "1485": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1486": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1487": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1488": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1489": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1490": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1491": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1492": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1494": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1495": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "ADD",
      "path": "0"
    },
    "1496": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1497": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E5"
    },
    "1500": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1501": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1502": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1503": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "ADD",
      "path": "0"
    },
    "1504": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1505": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D0"
    },
    "1508": {
      "fn": "NftCollection.createToken",
      "jump": "i",
      "offset": [
        2797,
        2838
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1509": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1510": {
      "op": "POP"
    },
    "1511": {
      "op": "POP"
    },
    "1512": {
      "op": "POP"
    },
    "1513": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1515": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1516": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "ADD",
      "path": "0"
    },
    "1517": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1518": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1519": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1521": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1522": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1523": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "ADD",
      "path": "0"
    },
    "1524": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1525": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1526": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1527": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1528": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "1530": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1531": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1532": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "ADD",
      "path": "0"
    },
    "1533": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1534": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1536": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1537": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1538": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "ADD",
      "path": "0"
    },
    "1539": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1540": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1543": {
      "op": "NOT"
    },
    "1544": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "AND",
      "path": "0"
    },
    "1545": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1546": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1547": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1548": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1549": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1550": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1551": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "OR",
      "path": "0"
    },
    "1552": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1553": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1554": {
      "fn": "NftCollection.createToken",
      "offset": [
        2848,
        2860
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 13
    },
    "1555": {
      "fn": "NftCollection.createToken",
      "offset": [
        2848,
        2860
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1556": {
      "op": "PUSH5",
      "value": "0xFFFFFFFF00"
    },
    "1562": {
      "op": "NOT"
    },
    "1563": {
      "fn": "NftCollection.createToken",
      "offset": [
        2848,
        2860
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1564": {
      "fn": "NftCollection.createToken",
      "offset": [
        2848,
        2860
      ],
      "op": "AND",
      "path": "0"
    },
    "1565": {
      "fn": "NftCollection.createToken",
      "offset": [
        2797,
        2838
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1568": {
      "fn": "NftCollection.createToken",
      "offset": [
        2848,
        2860
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1569": {
      "fn": "NftCollection.createToken",
      "offset": [
        2848,
        2860
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1570": {
      "fn": "NftCollection.createToken",
      "offset": [
        2848,
        2860
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1571": {
      "fn": "NftCollection.createToken",
      "offset": [
        2848,
        2860
      ],
      "op": "DIV",
      "path": "0"
    },
    "1572": {
      "fn": "NftCollection.createToken",
      "offset": [
        2848,
        2860
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1577": {
      "fn": "NftCollection.createToken",
      "offset": [
        2848,
        2860
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1578": {
      "fn": "NftCollection.createToken",
      "offset": [
        2848,
        2860
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1579": {
      "fn": "NftCollection.createToken",
      "offset": [
        2848,
        2860
      ],
      "op": "AND",
      "path": "0"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1582": {
      "fn": "NftCollection.createToken",
      "offset": [
        2848,
        2860
      ],
      "op": "ADD",
      "path": "0"
    },
    "1583": {
      "fn": "NftCollection.createToken",
      "offset": [
        2848,
        2860
      ],
      "op": "AND",
      "path": "0"
    },
    "1584": {
      "fn": "NftCollection.createToken",
      "offset": [
        2848,
        2860
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1585": {
      "fn": "NftCollection.createToken",
      "offset": [
        2848,
        2860
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1586": {
      "fn": "NftCollection.createToken",
      "offset": [
        2848,
        2860
      ],
      "op": "MUL",
      "path": "0"
    },
    "1587": {
      "fn": "NftCollection.createToken",
      "offset": [
        2848,
        2860
      ],
      "op": "OR",
      "path": "0"
    },
    "1588": {
      "fn": "NftCollection.createToken",
      "offset": [
        2848,
        2860
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1589": {
      "fn": "NftCollection.createToken",
      "offset": [
        2848,
        2860
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1590": {
      "op": "POP"
    },
    "1591": {
      "op": "POP"
    },
    "1592": {
      "op": "POP"
    },
    "1593": {
      "op": "POP"
    },
    "1594": {
      "fn": "NftCollection.createToken",
      "jump": "o",
      "offset": [
        2603,
        2867
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1595": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3338,
        3433
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1596": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3409,
        3426
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x3"
    },
    "1598": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3409,
        3426
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1599": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3409,
        3426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1601": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3409,
        3426
      ],
      "op": "AND",
      "path": "0"
    },
    "1602": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3338,
        3433
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1603": {
      "fn": "NftCollection.getOpenToPublic",
      "jump": "o",
      "offset": [
        3338,
        3433
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1604": {
      "fn": "NftCollection.getNumberOfPubliSale",
      "offset": [
        2395,
        2487
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1605": {
      "fn": "NftCollection.getNumberOfPubliSale",
      "offset": [
        2470,
        2480
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x3"
    },
    "1607": {
      "fn": "NftCollection.getNumberOfPubliSale",
      "offset": [
        2470,
        2480
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1610": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "1612": {
      "op": "SHL"
    },
    "1613": {
      "fn": "NftCollection.getNumberOfPubliSale",
      "offset": [
        2470,
        2480
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1614": {
      "fn": "NftCollection.getNumberOfPubliSale",
      "offset": [
        2470,
        2480
      ],
      "op": "DIV",
      "path": "0"
    },
    "1615": {
      "fn": "NftCollection.getNumberOfPubliSale",
      "offset": [
        2470,
        2480
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1620": {
      "fn": "NftCollection.getNumberOfPubliSale",
      "offset": [
        2470,
        2480
      ],
      "op": "AND",
      "path": "0"
    },
    "1621": {
      "fn": "NftCollection.getNumberOfPubliSale",
      "offset": [
        2470,
        2480
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1622": {
      "fn": "NftCollection.getNumberOfPubliSale",
      "jump": "o",
      "offset": [
        2395,
        2487
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1623": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1624": {
      "fn": "Ownable.owner",
      "offset": [
        666,
        673
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1626": {
      "fn": "Ownable.owner",
      "offset": [
        688,
        694
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 16
    },
    "1627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1631": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1633": {
      "op": "SHL"
    },
    "1634": {
      "op": "SUB"
    },
    "1635": {
      "fn": "Ownable.owner",
      "offset": [
        688,
        694
      ],
      "op": "AND",
      "path": "1"
    },
    "1636": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1637": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        629,
        699
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1638": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1639": {
      "fn": "Ownable.isOwner",
      "offset": [
        951,
        955
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1641": {
      "fn": "Ownable.isOwner",
      "offset": [
        984,
        990
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 17
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1648": {
      "op": "SHL"
    },
    "1649": {
      "op": "SUB"
    },
    "1650": {
      "fn": "Ownable.isOwner",
      "offset": [
        984,
        990
      ],
      "op": "AND",
      "path": "1"
    },
    "1651": {
      "fn": "Ownable.isOwner",
      "offset": [
        970,
        980
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1652": {
      "fn": "Ownable.isOwner",
      "offset": [
        970,
        990
      ],
      "op": "EQ",
      "path": "1"
    },
    "1653": {
      "fn": "Ownable.isOwner",
      "offset": [
        970,
        990
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1654": {
      "fn": "Ownable.isOwner",
      "jump": "o",
      "offset": [
        912,
        995
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1655": {
      "fn": "NftCollection.getNumberOfPreSale",
      "offset": [
        2302,
        2389
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1656": {
      "fn": "NftCollection.getNumberOfPreSale",
      "offset": [
        2375,
        2382
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x3"
    },
    "1658": {
      "fn": "NftCollection.getNumberOfPreSale",
      "offset": [
        2375,
        2382
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "1663": {
      "op": "SHL"
    },
    "1664": {
      "fn": "NftCollection.getNumberOfPreSale",
      "offset": [
        2375,
        2382
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1665": {
      "fn": "NftCollection.getNumberOfPreSale",
      "offset": [
        2375,
        2382
      ],
      "op": "DIV",
      "path": "0"
    },
    "1666": {
      "fn": "NftCollection.getNumberOfPreSale",
      "offset": [
        2375,
        2382
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1671": {
      "fn": "NftCollection.getNumberOfPreSale",
      "offset": [
        2375,
        2382
      ],
      "op": "AND",
      "path": "0"
    },
    "1672": {
      "fn": "NftCollection.getNumberOfPreSale",
      "offset": [
        2375,
        2382
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1673": {
      "fn": "NftCollection.getNumberOfPreSale",
      "jump": "o",
      "offset": [
        2302,
        2389
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1674": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3654,
        3752
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1675": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3734,
        3744
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 19
    },
    "1676": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3701,
        3705
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1678": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3724,
        3745
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1679": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3724,
        3745
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1680": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3724,
        3745
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1681": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3724,
        3733
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1683": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3724,
        3745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1685": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3724,
        3745
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1686": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3724,
        3745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1688": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3724,
        3745
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1689": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3724,
        3745
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1690": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3724,
        3745
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1691": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3724,
        3745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1693": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3724,
        3745
      ],
      "op": "AND",
      "path": "0"
    },
    "1694": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3654,
        3752
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1695": {
      "fn": "NftCollection.getOnWhiteList",
      "jump": "o",
      "offset": [
        3654,
        3752
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1696": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1697": {
      "offset": [
        812,
        821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6A8"
    },
    "1700": {
      "offset": [
        812,
        819
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x666"
    },
    "1703": {
      "jump": "i",
      "offset": [
        812,
        821
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1704": {
      "branch": 31,
      "fn": "Ownable.transferOwnership",
      "offset": [
        812,
        821
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1705": {
      "offset": [
        804,
        822
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6B1"
    },
    "1708": {
      "branch": 31,
      "offset": [
        804,
        822
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1709": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        804,
        822
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1711": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        804,
        822
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1712": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        804,
        822
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1713": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        804,
        822
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1714": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1607,
        1635
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 20,
      "value": "0x6BA"
    },
    "1717": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1626,
        1634
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1718": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1607,
        1625
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x728"
    },
    "1721": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1607,
        1635
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1722": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1607,
        1635
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1723": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "POP",
      "path": "1"
    },
    "1724": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1539,
        1640
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1725": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2962,
        3066
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1726": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        3046,
        3059
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x3"
    },
    "1728": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        3046,
        3059
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1729": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        3046,
        3059
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1734": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        3046,
        3059
      ],
      "op": "PUSH6",
      "path": "0",
      "value": "0x10000000000"
    },
    "1741": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        3046,
        3059
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1742": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        3046,
        3059
      ],
      "op": "DIV",
      "path": "0"
    },
    "1743": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        3046,
        3059
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1744": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        3046,
        3059
      ],
      "op": "AND",
      "path": "0"
    },
    "1745": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        3046,
        3059
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1748": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        3034,
        3043
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1749": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        3034,
        3043
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1750": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        3034,
        3043
      ],
      "op": "DIV",
      "path": "0"
    },
    "1751": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        3034,
        3043
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1752": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        3034,
        3043
      ],
      "op": "AND",
      "path": "0"
    },
    "1753": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        3034,
        3059
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1754": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        3034,
        3059
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1755": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        3034,
        3059
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1756": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        3034,
        3059
      ],
      "op": "SUB",
      "path": "0"
    },
    "1757": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        3027,
        3059
      ],
      "op": "AND",
      "path": "0"
    },
    "1758": {
      "fn": "NftCollection.getRemainingMints",
      "offset": [
        2962,
        3066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1759": {
      "fn": "NftCollection.getRemainingMints",
      "jump": "o",
      "offset": [
        2962,
        3066
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1760": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4369,
        4588
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1761": {
      "offset": [
        4651,
        4661
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1762": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4422,
        4445
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1764": {
      "offset": [
        4633,
        4662
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1765": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4633,
        4662
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1766": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4633,
        4662
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1767": {
      "offset": [
        4633,
        4650
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1769": {
      "offset": [
        4633,
        4662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1771": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4633,
        4662
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1772": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4633,
        4662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1774": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4633,
        4662
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1775": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4633,
        4662
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1776": {
      "offset": [
        4633,
        4669
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1777": {
      "offset": [
        4625,
        4674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F9"
    },
    "1780": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4625,
        4674
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1781": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4625,
        4674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1783": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4625,
        4674
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1784": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4625,
        4674
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1785": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4625,
        4674
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1786": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4512,
        4522
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1787": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4457,
        4491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1789": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4494,
        4523
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1790": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4494,
        4523
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1791": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4494,
        4523
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1792": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4494,
        4511
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1794": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4494,
        4523
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1796": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4494,
        4523
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1797": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4494,
        4523
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1799": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4494,
        4523
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1800": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4494,
        4523
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1801": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4570,
        4581
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 22
    },
    "1802": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4570,
        4581
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1803": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4494,
        4523
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1804": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4494,
        4523
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1805": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4494,
        4523
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1806": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4494,
        4523
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1807": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4570,
        4581
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x714"
    },
    "1810": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4570,
        4581
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1811": {
      "dev": "Index out of range",
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4570,
        4581
      ],
      "op": "INVALID",
      "path": "0"
    },
    "1812": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4570,
        4581
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1813": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4570,
        4581
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1814": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4570,
        4581
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1816": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4570,
        4581
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1817": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4570,
        4581
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1819": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4570,
        4581
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1821": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4570,
        4581
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1822": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4570,
        4581
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1823": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4570,
        4581
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1825": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4570,
        4581
      ],
      "op": "MUL",
      "path": "0"
    },
    "1826": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4570,
        4581
      ],
      "op": "ADD",
      "path": "0"
    },
    "1827": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4563,
        4581
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1828": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4563,
        4581
      ],
      "op": "POP",
      "path": "0"
    },
    "1829": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4563,
        4581
      ],
      "op": "POP",
      "path": "0"
    },
    "1830": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        4369,
        4588
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1831": {
      "fn": "NftCollection.getNftInfo",
      "jump": "o",
      "offset": [
        4369,
        4588
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1832": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1771,
        1940
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1839": {
      "op": "SHL"
    },
    "1840": {
      "op": "SUB"
    },
    "1841": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1840,
        1862
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 23
    },
    "1842": {
      "branch": 32,
      "fn": "Ownable._transferOwnership",
      "offset": [
        1840,
        1862
      ],
      "op": "AND",
      "path": "1"
    },
    "1843": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1832,
        1863
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x73B"
    },
    "1846": {
      "branch": 32,
      "fn": "Ownable._transferOwnership",
      "offset": [
        1832,
        1863
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1847": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1832,
        1863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1849": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1832,
        1863
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1850": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1832,
        1863
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1851": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1832,
        1863
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1852": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1895,
        1901
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 24,
      "value": "0x0"
    },
    "1854": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1895,
        1901
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1855": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1895,
        1901
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1856": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1874,
        1912
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1858": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1874,
        1912
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1865": {
      "op": "SHL"
    },
    "1866": {
      "op": "SUB"
    },
    "1867": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1874,
        1912
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1868": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1874,
        1912
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1869": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1874,
        1912
      ],
      "op": "AND",
      "path": "1"
    },
    "1870": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1874,
        1912
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1871": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1895,
        1901
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1872": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1895,
        1901
      ],
      "op": "AND",
      "path": "1"
    },
    "1873": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1895,
        1901
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1874": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1874,
        1912
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1907": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1874,
        1912
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1908": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1874,
        1912
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1909": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1924
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 25,
      "value": "0x0"
    },
    "1911": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1912": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1919": {
      "op": "SHL"
    },
    "1920": {
      "op": "SUB"
    },
    "1921": {
      "op": "NOT"
    },
    "1922": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "AND",
      "path": "1"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1929": {
      "op": "SHL"
    },
    "1930": {
      "op": "SUB"
    },
    "1931": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1932": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1933": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1934": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "AND",
      "path": "1"
    },
    "1935": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1936": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1937": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1938": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "OR",
      "path": "1"
    },
    "1939": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1940": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1941": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        1771,
        1940
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1942": {
      "op": "JUMPDEST"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1945": {
      "op": "DUP1"
    },
    "1946": {
      "op": "MLOAD"
    },
    "1947": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1949": {
      "op": "DUP2"
    },
    "1950": {
      "op": "ADD"
    },
    "1951": {
      "op": "DUP3"
    },
    "1952": {
      "op": "MSTORE"
    },
    "1953": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1955": {
      "op": "DUP2"
    },
    "1956": {
      "op": "MSTORE"
    },
    "1957": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1961": {
      "op": "DUP3"
    },
    "1962": {
      "op": "ADD"
    },
    "1963": {
      "op": "MSTORE"
    },
    "1964": {
      "op": "SWAP1"
    },
    "1965": {
      "op": "DUP2"
    },
    "1966": {
      "op": "ADD"
    },
    "1967": {
      "op": "PUSH2",
      "value": "0x7B6"
    },
    "1970": {
      "op": "PUSH2",
      "value": "0x84E"
    },
    "1973": {
      "op": "JUMP"
    },
    "1974": {
      "op": "JUMPDEST"
    },
    "1975": {
      "op": "DUP2"
    },
    "1976": {
      "op": "MSTORE"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1979": {
      "op": "ADD"
    },
    "1980": {
      "op": "PUSH2",
      "value": "0x7C3"
    },
    "1983": {
      "op": "PUSH2",
      "value": "0x861"
    },
    "1986": {
      "op": "JUMP"
    },
    "1987": {
      "op": "JUMPDEST"
    },
    "1988": {
      "op": "DUP2"
    },
    "1989": {
      "op": "MSTORE"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1994": {
      "op": "SWAP1"
    },
    "1995": {
      "op": "SWAP2"
    },
    "1996": {
      "op": "ADD"
    },
    "1997": {
      "op": "MSTORE"
    },
    "1998": {
      "op": "SWAP1"
    },
    "1999": {
      "op": "JUMP"
    },
    "2000": {
      "op": "JUMPDEST"
    },
    "2001": {
      "op": "DUP3"
    },
    "2002": {
      "op": "DUP1"
    },
    "2003": {
      "op": "SLOAD"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2006": {
      "op": "DUP2"
    },
    "2007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2009": {
      "op": "AND"
    },
    "2010": {
      "op": "ISZERO"
    },
    "2011": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "2014": {
      "op": "MUL"
    },
    "2015": {
      "op": "SUB"
    },
    "2016": {
      "op": "AND"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2019": {
      "op": "SWAP1"
    },
    "2020": {
      "op": "DIV"
    },
    "2021": {
      "op": "SWAP1"
    },
    "2022": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2024": {
      "op": "MSTORE"
    },
    "2025": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2029": {
      "op": "KECCAK256"
    },
    "2030": {
      "op": "SWAP1"
    },
    "2031": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2033": {
      "op": "ADD"
    },
    "2034": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2036": {
      "op": "SWAP1"
    },
    "2037": {
      "op": "DIV"
    },
    "2038": {
      "op": "DUP2"
    },
    "2039": {
      "op": "ADD"
    },
    "2040": {
      "op": "SWAP3"
    },
    "2041": {
      "op": "DUP3"
    },
    "2042": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2044": {
      "op": "LT"
    },
    "2045": {
      "op": "PUSH2",
      "value": "0x811"
    },
    "2048": {
      "op": "JUMPI"
    },
    "2049": {
      "op": "DUP1"
    },
    "2050": {
      "op": "MLOAD"
    },
    "2051": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2053": {
      "op": "NOT"
    },
    "2054": {
      "op": "AND"
    },
    "2055": {
      "op": "DUP4"
    },
    "2056": {
      "op": "DUP1"
    },
    "2057": {
      "op": "ADD"
    },
    "2058": {
      "op": "OR"
    },
    "2059": {
      "op": "DUP6"
    },
    "2060": {
      "op": "SSTORE"
    },
    "2061": {
      "op": "PUSH2",
      "value": "0x83E"
    },
    "2064": {
      "op": "JUMP"
    },
    "2065": {
      "op": "JUMPDEST"
    },
    "2066": {
      "op": "DUP3"
    },
    "2067": {
      "op": "DUP1"
    },
    "2068": {
      "op": "ADD"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2071": {
      "op": "ADD"
    },
    "2072": {
      "op": "DUP6"
    },
    "2073": {
      "op": "SSTORE"
    },
    "2074": {
      "op": "DUP3"
    },
    "2075": {
      "op": "ISZERO"
    },
    "2076": {
      "op": "PUSH2",
      "value": "0x83E"
    },
    "2079": {
      "op": "JUMPI"
    },
    "2080": {
      "op": "SWAP2"
    },
    "2081": {
      "op": "DUP3"
    },
    "2082": {
      "op": "ADD"
    },
    "2083": {
      "op": "JUMPDEST"
    },
    "2084": {
      "op": "DUP3"
    },
    "2085": {
      "op": "DUP2"
    },
    "2086": {
      "op": "GT"
    },
    "2087": {
      "op": "ISZERO"
    },
    "2088": {
      "op": "PUSH2",
      "value": "0x83E"
    },
    "2091": {
      "op": "JUMPI"
    },
    "2092": {
      "op": "DUP3"
    },
    "2093": {
      "op": "MLOAD"
    },
    "2094": {
      "op": "DUP3"
    },
    "2095": {
      "op": "SSTORE"
    },
    "2096": {
      "op": "SWAP2"
    },
    "2097": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2099": {
      "op": "ADD"
    },
    "2100": {
      "op": "SWAP2"
    },
    "2101": {
      "op": "SWAP1"
    },
    "2102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2104": {
      "op": "ADD"
    },
    "2105": {
      "op": "SWAP1"
    },
    "2106": {
      "op": "PUSH2",
      "value": "0x823"
    },
    "2109": {
      "op": "JUMP"
    },
    "2110": {
      "op": "JUMPDEST"
    },
    "2111": {
      "op": "POP"
    },
    "2112": {
      "op": "PUSH2",
      "value": "0x84A"
    },
    "2115": {
      "op": "SWAP3"
    },
    "2116": {
      "op": "SWAP2"
    },
    "2117": {
      "op": "POP"
    },
    "2118": {
      "op": "PUSH2",
      "value": "0x874"
    },
    "2121": {
      "op": "JUMP"
    },
    "2122": {
      "op": "JUMPDEST"
    },
    "2123": {
      "op": "POP"
    },
    "2124": {
      "op": "SWAP1"
    },
    "2125": {
      "op": "JUMP"
    },
    "2126": {
      "op": "JUMPDEST"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2129": {
      "op": "MLOAD"
    },
    "2130": {
      "op": "DUP1"
    },
    "2131": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2133": {
      "op": "ADD"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2136": {
      "op": "MSTORE"
    },
    "2137": {
      "op": "DUP1"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2140": {
      "op": "DUP2"
    },
    "2141": {
      "op": "MSTORE"
    },
    "2142": {
      "op": "POP"
    },
    "2143": {
      "op": "SWAP1"
    },
    "2144": {
      "op": "JUMP"
    },
    "2145": {
      "op": "JUMPDEST"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2148": {
      "op": "MLOAD"
    },
    "2149": {
      "op": "DUP1"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2152": {
      "op": "ADD"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2155": {
      "op": "MSTORE"
    },
    "2156": {
      "op": "DUP1"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2159": {
      "op": "DUP2"
    },
    "2160": {
      "op": "MSTORE"
    },
    "2161": {
      "op": "POP"
    },
    "2162": {
      "op": "SWAP1"
    },
    "2163": {
      "op": "JUMP"
    },
    "2164": {
      "op": "JUMPDEST"
    },
    "2165": {
      "op": "JUMPDEST"
    },
    "2166": {
      "op": "DUP1"
    },
    "2167": {
      "op": "DUP3"
    },
    "2168": {
      "op": "GT"
    },
    "2169": {
      "op": "ISZERO"
    },
    "2170": {
      "op": "PUSH2",
      "value": "0x84A"
    },
    "2173": {
      "op": "JUMPI"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2176": {
      "op": "DUP2"
    },
    "2177": {
      "op": "SSTORE"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2180": {
      "op": "ADD"
    },
    "2181": {
      "op": "PUSH2",
      "value": "0x875"
    },
    "2184": {
      "op": "JUMP"
    },
    "2185": {
      "op": "JUMPDEST"
    },
    "2186": {
      "op": "DUP1"
    },
    "2187": {
      "op": "MLOAD"
    },
    "2188": {
      "op": "PUSH2",
      "value": "0x894"
    },
    "2191": {
      "op": "DUP2"
    },
    "2192": {
      "op": "PUSH2",
      "value": "0xC21"
    },
    "2195": {
      "op": "JUMP"
    },
    "2196": {
      "op": "JUMPDEST"
    },
    "2197": {
      "op": "SWAP3"
    },
    "2198": {
      "op": "SWAP2"
    },
    "2199": {
      "op": "POP"
    },
    "2200": {
      "op": "POP"
    },
    "2201": {
      "op": "JUMP"
    },
    "2202": {
      "op": "JUMPDEST"
    },
    "2203": {
      "op": "DUP1"
    },
    "2204": {
      "op": "MLOAD"
    },
    "2205": {
      "op": "DUP1"
    },
    "2206": {
      "op": "ISZERO"
    },
    "2207": {
      "op": "ISZERO"
    },
    "2208": {
      "op": "DUP2"
    },
    "2209": {
      "op": "EQ"
    },
    "2210": {
      "op": "PUSH2",
      "value": "0x894"
    },
    "2213": {
      "op": "JUMPI"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2216": {
      "op": "DUP1"
    },
    "2217": {
      "op": "REVERT"
    },
    "2218": {
      "op": "JUMPDEST"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2221": {
      "op": "DUP3"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2224": {
      "op": "DUP4"
    },
    "2225": {
      "op": "ADD"
    },
    "2226": {
      "op": "SLT"
    },
    "2227": {
      "op": "PUSH2",
      "value": "0x8BA"
    },
    "2230": {
      "op": "JUMPI"
    },
    "2231": {
      "op": "DUP1"
    },
    "2232": {
      "op": "DUP2"
    },
    "2233": {
      "op": "REVERT"
    },
    "2234": {
      "op": "JUMPDEST"
    },
    "2235": {
      "op": "DUP2"
    },
    "2236": {
      "op": "CALLDATALOAD"
    },
    "2237": {
      "op": "PUSH2",
      "value": "0x8CD"
    },
    "2240": {
      "op": "PUSH2",
      "value": "0x8C8"
    },
    "2243": {
      "op": "DUP3"
    },
    "2244": {
      "op": "PUSH2",
      "value": "0xBCD"
    },
    "2247": {
      "op": "JUMP"
    },
    "2248": {
      "op": "JUMPDEST"
    },
    "2249": {
      "op": "PUSH2",
      "value": "0xBA6"
    },
    "2252": {
      "op": "JUMP"
    },
    "2253": {
      "op": "JUMPDEST"
    },
    "2254": {
      "op": "SWAP2"
    },
    "2255": {
      "op": "POP"
    },
    "2256": {
      "op": "DUP1"
    },
    "2257": {
      "op": "DUP3"
    },
    "2258": {
      "op": "MSTORE"
    },
    "2259": {
      "op": "DUP4"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2262": {
      "op": "DUP3"
    },
    "2263": {
      "op": "DUP6"
    },
    "2264": {
      "op": "ADD"
    },
    "2265": {
      "op": "ADD"
    },
    "2266": {
      "op": "GT"
    },
    "2267": {
      "op": "ISZERO"
    },
    "2268": {
      "op": "PUSH2",
      "value": "0x8E4"
    },
    "2271": {
      "op": "JUMPI"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2274": {
      "op": "DUP1"
    },
    "2275": {
      "op": "REVERT"
    },
    "2276": {
      "op": "JUMPDEST"
    },
    "2277": {
      "op": "DUP1"
    },
    "2278": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2280": {
      "op": "DUP5"
    },
    "2281": {
      "op": "ADD"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2284": {
      "op": "DUP5"
    },
    "2285": {
      "op": "ADD"
    },
    "2286": {
      "op": "CALLDATACOPY"
    },
    "2287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2289": {
      "op": "SWAP1"
    },
    "2290": {
      "op": "DUP3"
    },
    "2291": {
      "op": "ADD"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2294": {
      "op": "ADD"
    },
    "2295": {
      "op": "MSTORE"
    },
    "2296": {
      "op": "SWAP3"
    },
    "2297": {
      "op": "SWAP2"
    },
    "2298": {
      "op": "POP"
    },
    "2299": {
      "op": "POP"
    },
    "2300": {
      "op": "JUMP"
    },
    "2301": {
      "op": "JUMPDEST"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2304": {
      "op": "DUP3"
    },
    "2305": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2307": {
      "op": "DUP4"
    },
    "2308": {
      "op": "ADD"
    },
    "2309": {
      "op": "SLT"
    },
    "2310": {
      "op": "PUSH2",
      "value": "0x90D"
    },
    "2313": {
      "op": "JUMPI"
    },
    "2314": {
      "op": "DUP1"
    },
    "2315": {
      "op": "DUP2"
    },
    "2316": {
      "op": "REVERT"
    },
    "2317": {
      "op": "JUMPDEST"
    },
    "2318": {
      "op": "DUP2"
    },
    "2319": {
      "op": "MLOAD"
    },
    "2320": {
      "op": "PUSH2",
      "value": "0x91B"
    },
    "2323": {
      "op": "PUSH2",
      "value": "0x8C8"
    },
    "2326": {
      "op": "DUP3"
    },
    "2327": {
      "op": "PUSH2",
      "value": "0xBCD"
    },
    "2330": {
      "op": "JUMP"
    },
    "2331": {
      "op": "JUMPDEST"
    },
    "2332": {
      "op": "SWAP2"
    },
    "2333": {
      "op": "POP"
    },
    "2334": {
      "op": "DUP1"
    },
    "2335": {
      "op": "DUP3"
    },
    "2336": {
      "op": "MSTORE"
    },
    "2337": {
      "op": "DUP4"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2340": {
      "op": "DUP3"
    },
    "2341": {
      "op": "DUP6"
    },
    "2342": {
      "op": "ADD"
    },
    "2343": {
      "op": "ADD"
    },
    "2344": {
      "op": "GT"
    },
    "2345": {
      "op": "ISZERO"
    },
    "2346": {
      "op": "PUSH2",
      "value": "0x932"
    },
    "2349": {
      "op": "JUMPI"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2352": {
      "op": "DUP1"
    },
    "2353": {
      "op": "REVERT"
    },
    "2354": {
      "op": "JUMPDEST"
    },
    "2355": {
      "op": "PUSH2",
      "value": "0x943"
    },
    "2358": {
      "op": "DUP2"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2361": {
      "op": "DUP5"
    },
    "2362": {
      "op": "ADD"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2365": {
      "op": "DUP7"
    },
    "2366": {
      "op": "ADD"
    },
    "2367": {
      "op": "PUSH2",
      "value": "0xBF1"
    },
    "2370": {
      "op": "JUMP"
    },
    "2371": {
      "op": "JUMPDEST"
    },
    "2372": {
      "op": "POP"
    },
    "2373": {
      "op": "SWAP3"
    },
    "2374": {
      "op": "SWAP2"
    },
    "2375": {
      "op": "POP"
    },
    "2376": {
      "op": "POP"
    },
    "2377": {
      "op": "JUMP"
    },
    "2378": {
      "op": "JUMPDEST"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2383": {
      "op": "DUP3"
    },
    "2384": {
      "op": "DUP5"
    },
    "2385": {
      "op": "SUB"
    },
    "2386": {
      "op": "SLT"
    },
    "2387": {
      "op": "ISZERO"
    },
    "2388": {
      "op": "PUSH2",
      "value": "0x95B"
    },
    "2391": {
      "op": "JUMPI"
    },
    "2392": {
      "op": "DUP1"
    },
    "2393": {
      "op": "DUP2"
    },
    "2394": {
      "op": "REVERT"
    },
    "2395": {
      "op": "JUMPDEST"
    },
    "2396": {
      "op": "PUSH2",
      "value": "0x965"
    },
    "2399": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2401": {
      "op": "PUSH2",
      "value": "0xBA6"
    },
    "2404": {
      "op": "JUMP"
    },
    "2405": {
      "op": "JUMPDEST"
    },
    "2406": {
      "op": "SWAP1"
    },
    "2407": {
      "op": "POP"
    },
    "2408": {
      "op": "DUP2"
    },
    "2409": {
      "op": "MLOAD"
    },
    "2410": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2419": {
      "op": "DUP2"
    },
    "2420": {
      "op": "GT"
    },
    "2421": {
      "op": "ISZERO"
    },
    "2422": {
      "op": "PUSH2",
      "value": "0x97E"
    },
    "2425": {
      "op": "JUMPI"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2428": {
      "op": "DUP1"
    },
    "2429": {
      "op": "REVERT"
    },
    "2430": {
      "op": "JUMPDEST"
    },
    "2431": {
      "op": "PUSH2",
      "value": "0x98A"
    },
    "2434": {
      "op": "DUP5"
    },
    "2435": {
      "op": "DUP3"
    },
    "2436": {
      "op": "DUP6"
    },
    "2437": {
      "op": "ADD"
    },
    "2438": {
      "op": "PUSH2",
      "value": "0x8FD"
    },
    "2441": {
      "op": "JUMP"
    },
    "2442": {
      "op": "JUMPDEST"
    },
    "2443": {
      "op": "DUP3"
    },
    "2444": {
      "op": "MSTORE"
    },
    "2445": {
      "op": "POP"
    },
    "2446": {
      "op": "SWAP3"
    },
    "2447": {
      "op": "SWAP2"
    },
    "2448": {
      "op": "POP"
    },
    "2449": {
      "op": "POP"
    },
    "2450": {
      "op": "JUMP"
    },
    "2451": {
      "op": "JUMPDEST"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2456": {
      "op": "DUP3"
    },
    "2457": {
      "op": "DUP5"
    },
    "2458": {
      "op": "SUB"
    },
    "2459": {
      "op": "SLT"
    },
    "2460": {
      "op": "ISZERO"
    },
    "2461": {
      "op": "PUSH2",
      "value": "0x9A4"
    },
    "2464": {
      "op": "JUMPI"
    },
    "2465": {
      "op": "DUP1"
    },
    "2466": {
      "op": "DUP2"
    },
    "2467": {
      "op": "REVERT"
    },
    "2468": {
      "op": "JUMPDEST"
    },
    "2469": {
      "op": "PUSH2",
      "value": "0x9AE"
    },
    "2472": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2474": {
      "op": "PUSH2",
      "value": "0xBA6"
    },
    "2477": {
      "op": "JUMP"
    },
    "2478": {
      "op": "JUMPDEST"
    },
    "2479": {
      "op": "SWAP2"
    },
    "2480": {
      "op": "MLOAD"
    },
    "2481": {
      "op": "DUP3"
    },
    "2482": {
      "op": "MSTORE"
    },
    "2483": {
      "op": "POP"
    },
    "2484": {
      "op": "SWAP2"
    },
    "2485": {
      "op": "SWAP1"
    },
    "2486": {
      "op": "POP"
    },
    "2487": {
      "op": "JUMP"
    },
    "2488": {
      "op": "JUMPDEST"
    },
    "2489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2493": {
      "op": "DUP3"
    },
    "2494": {
      "op": "DUP5"
    },
    "2495": {
      "op": "SUB"
    },
    "2496": {
      "op": "SLT"
    },
    "2497": {
      "op": "ISZERO"
    },
    "2498": {
      "op": "PUSH2",
      "value": "0x9C9"
    },
    "2501": {
      "op": "JUMPI"
    },
    "2502": {
      "op": "DUP1"
    },
    "2503": {
      "op": "DUP2"
    },
    "2504": {
      "op": "REVERT"
    },
    "2505": {
      "op": "JUMPDEST"
    },
    "2506": {
      "op": "DUP2"
    },
    "2507": {
      "op": "CALLDATALOAD"
    },
    "2508": {
      "op": "PUSH2",
      "value": "0x9D4"
    },
    "2511": {
      "op": "DUP2"
    },
    "2512": {
      "op": "PUSH2",
      "value": "0xC21"
    },
    "2515": {
      "op": "JUMP"
    },
    "2516": {
      "op": "JUMPDEST"
    },
    "2517": {
      "op": "SWAP4"
    },
    "2518": {
      "op": "SWAP3"
    },
    "2519": {
      "op": "POP"
    },
    "2520": {
      "op": "POP"
    },
    "2521": {
      "op": "POP"
    },
    "2522": {
      "op": "JUMP"
    },
    "2523": {
      "op": "JUMPDEST"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2526": {
      "op": "DUP1"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2531": {
      "op": "DUP5"
    },
    "2532": {
      "op": "DUP7"
    },
    "2533": {
      "op": "SUB"
    },
    "2534": {
      "op": "SLT"
    },
    "2535": {
      "op": "ISZERO"
    },
    "2536": {
      "op": "PUSH2",
      "value": "0x9EF"
    },
    "2539": {
      "op": "JUMPI"
    },
    "2540": {
      "op": "DUP2"
    },
    "2541": {
      "op": "DUP3"
    },
    "2542": {
      "op": "REVERT"
    },
    "2543": {
      "op": "JUMPDEST"
    },
    "2544": {
      "op": "DUP4"
    },
    "2545": {
      "op": "CALLDATALOAD"
    },
    "2546": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2555": {
      "op": "DUP1"
    },
    "2556": {
      "op": "DUP3"
    },
    "2557": {
      "op": "GT"
    },
    "2558": {
      "op": "ISZERO"
    },
    "2559": {
      "op": "PUSH2",
      "value": "0xA06"
    },
    "2562": {
      "op": "JUMPI"
    },
    "2563": {
      "op": "DUP4"
    },
    "2564": {
      "op": "DUP5"
    },
    "2565": {
      "op": "REVERT"
    },
    "2566": {
      "op": "JUMPDEST"
    },
    "2567": {
      "op": "PUSH2",
      "value": "0xA12"
    },
    "2570": {
      "op": "DUP8"
    },
    "2571": {
      "op": "DUP4"
    },
    "2572": {
      "op": "DUP9"
    },
    "2573": {
      "op": "ADD"
    },
    "2574": {
      "op": "PUSH2",
      "value": "0x8AA"
    },
    "2577": {
      "op": "JUMP"
    },
    "2578": {
      "op": "JUMPDEST"
    },
    "2579": {
      "op": "SWAP5"
    },
    "2580": {
      "op": "POP"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2583": {
      "op": "DUP7"
    },
    "2584": {
      "op": "ADD"
    },
    "2585": {
      "op": "CALLDATALOAD"
    },
    "2586": {
      "op": "SWAP2"
    },
    "2587": {
      "op": "POP"
    },
    "2588": {
      "op": "PUSH2",
      "value": "0xA24"
    },
    "2591": {
      "op": "DUP3"
    },
    "2592": {
      "op": "PUSH2",
      "value": "0xC21"
    },
    "2595": {
      "op": "JUMP"
    },
    "2596": {
      "op": "JUMPDEST"
    },
    "2597": {
      "op": "SWAP1"
    },
    "2598": {
      "op": "SWAP3"
    },
    "2599": {
      "op": "POP"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2602": {
      "op": "DUP6"
    },
    "2603": {
      "op": "ADD"
    },
    "2604": {
      "op": "CALLDATALOAD"
    },
    "2605": {
      "op": "SWAP1"
    },
    "2606": {
      "op": "DUP1"
    },
    "2607": {
      "op": "DUP3"
    },
    "2608": {
      "op": "GT"
    },
    "2609": {
      "op": "ISZERO"
    },
    "2610": {
      "op": "PUSH2",
      "value": "0xA39"
    },
    "2613": {
      "op": "JUMPI"
    },
    "2614": {
      "op": "DUP3"
    },
    "2615": {
      "op": "DUP4"
    },
    "2616": {
      "op": "REVERT"
    },
    "2617": {
      "op": "JUMPDEST"
    },
    "2618": {
      "op": "POP"
    },
    "2619": {
      "op": "PUSH2",
      "value": "0xA46"
    },
    "2622": {
      "op": "DUP7"
    },
    "2623": {
      "op": "DUP3"
    },
    "2624": {
      "op": "DUP8"
    },
    "2625": {
      "op": "ADD"
    },
    "2626": {
      "op": "PUSH2",
      "value": "0x8AA"
    },
    "2629": {
      "op": "JUMP"
    },
    "2630": {
      "op": "JUMPDEST"
    },
    "2631": {
      "op": "SWAP2"
    },
    "2632": {
      "op": "POP"
    },
    "2633": {
      "op": "POP"
    },
    "2634": {
      "op": "SWAP3"
    },
    "2635": {
      "op": "POP"
    },
    "2636": {
      "op": "SWAP3"
    },
    "2637": {
      "op": "POP"
    },
    "2638": {
      "op": "SWAP3"
    },
    "2639": {
      "op": "JUMP"
    },
    "2640": {
      "op": "JUMPDEST"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2645": {
      "op": "DUP3"
    },
    "2646": {
      "op": "DUP5"
    },
    "2647": {
      "op": "SUB"
    },
    "2648": {
      "op": "SLT"
    },
    "2649": {
      "op": "ISZERO"
    },
    "2650": {
      "op": "PUSH2",
      "value": "0xA61"
    },
    "2653": {
      "op": "JUMPI"
    },
    "2654": {
      "op": "DUP1"
    },
    "2655": {
      "op": "DUP2"
    },
    "2656": {
      "op": "REVERT"
    },
    "2657": {
      "op": "JUMPDEST"
    },
    "2658": {
      "op": "DUP2"
    },
    "2659": {
      "op": "MLOAD"
    },
    "2660": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2669": {
      "op": "DUP1"
    },
    "2670": {
      "op": "DUP3"
    },
    "2671": {
      "op": "GT"
    },
    "2672": {
      "op": "ISZERO"
    },
    "2673": {
      "op": "PUSH2",
      "value": "0xA78"
    },
    "2676": {
      "op": "JUMPI"
    },
    "2677": {
      "op": "DUP3"
    },
    "2678": {
      "op": "DUP4"
    },
    "2679": {
      "op": "REVERT"
    },
    "2680": {
      "op": "JUMPDEST"
    },
    "2681": {
      "op": "SWAP1"
    },
    "2682": {
      "op": "DUP4"
    },
    "2683": {
      "op": "ADD"
    },
    "2684": {
      "op": "SWAP1"
    },
    "2685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2687": {
      "op": "DUP3"
    },
    "2688": {
      "op": "DUP7"
    },
    "2689": {
      "op": "SUB"
    },
    "2690": {
      "op": "SLT"
    },
    "2691": {
      "op": "ISZERO"
    },
    "2692": {
      "op": "PUSH2",
      "value": "0xA8B"
    },
    "2695": {
      "op": "JUMPI"
    },
    "2696": {
      "op": "DUP3"
    },
    "2697": {
      "op": "DUP4"
    },
    "2698": {
      "op": "REVERT"
    },
    "2699": {
      "op": "JUMPDEST"
    },
    "2700": {
      "op": "PUSH2",
      "value": "0xA95"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2705": {
      "op": "PUSH2",
      "value": "0xBA6"
    },
    "2708": {
      "op": "JUMP"
    },
    "2709": {
      "op": "JUMPDEST"
    },
    "2710": {
      "op": "DUP3"
    },
    "2711": {
      "op": "MLOAD"
    },
    "2712": {
      "op": "DUP3"
    },
    "2713": {
      "op": "DUP2"
    },
    "2714": {
      "op": "GT"
    },
    "2715": {
      "op": "ISZERO"
    },
    "2716": {
      "op": "PUSH2",
      "value": "0xAA3"
    },
    "2719": {
      "op": "JUMPI"
    },
    "2720": {
      "op": "DUP5"
    },
    "2721": {
      "op": "DUP6"
    },
    "2722": {
      "op": "REVERT"
    },
    "2723": {
      "op": "JUMPDEST"
    },
    "2724": {
      "op": "PUSH2",
      "value": "0xAAF"
    },
    "2727": {
      "op": "DUP8"
    },
    "2728": {
      "op": "DUP3"
    },
    "2729": {
      "op": "DUP7"
    },
    "2730": {
      "op": "ADD"
    },
    "2731": {
      "op": "PUSH2",
      "value": "0x8FD"
    },
    "2734": {
      "op": "JUMP"
    },
    "2735": {
      "op": "JUMPDEST"
    },
    "2736": {
      "op": "DUP3"
    },
    "2737": {
      "op": "MSTORE"
    },
    "2738": {
      "op": "POP"
    },
    "2739": {
      "op": "PUSH2",
      "value": "0xABF"
    },
    "2742": {
      "op": "DUP7"
    },
    "2743": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2745": {
      "op": "DUP6"
    },
    "2746": {
      "op": "ADD"
    },
    "2747": {
      "op": "PUSH2",
      "value": "0x889"
    },
    "2750": {
      "op": "JUMP"
    },
    "2751": {
      "op": "JUMPDEST"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2754": {
      "op": "DUP3"
    },
    "2755": {
      "op": "ADD"
    },
    "2756": {
      "op": "MSTORE"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2759": {
      "op": "DUP4"
    },
    "2760": {
      "op": "ADD"
    },
    "2761": {
      "op": "MLOAD"
    },
    "2762": {
      "op": "DUP3"
    },
    "2763": {
      "op": "DUP2"
    },
    "2764": {
      "op": "GT"
    },
    "2765": {
      "op": "ISZERO"
    },
    "2766": {
      "op": "PUSH2",
      "value": "0xAD5"
    },
    "2769": {
      "op": "JUMPI"
    },
    "2770": {
      "op": "DUP5"
    },
    "2771": {
      "op": "DUP6"
    },
    "2772": {
      "op": "REVERT"
    },
    "2773": {
      "op": "JUMPDEST"
    },
    "2774": {
      "op": "PUSH2",
      "value": "0xAE1"
    },
    "2777": {
      "op": "DUP8"
    },
    "2778": {
      "op": "DUP3"
    },
    "2779": {
      "op": "DUP7"
    },
    "2780": {
      "op": "ADD"
    },
    "2781": {
      "op": "PUSH2",
      "value": "0x94A"
    },
    "2784": {
      "op": "JUMP"
    },
    "2785": {
      "op": "JUMPDEST"
    },
    "2786": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2788": {
      "op": "DUP4"
    },
    "2789": {
      "op": "ADD"
    },
    "2790": {
      "op": "MSTORE"
    },
    "2791": {
      "op": "POP"
    },
    "2792": {
      "op": "PUSH2",
      "value": "0xAF4"
    },
    "2795": {
      "op": "DUP7"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2798": {
      "op": "DUP6"
    },
    "2799": {
      "op": "ADD"
    },
    "2800": {
      "op": "PUSH2",
      "value": "0x993"
    },
    "2803": {
      "op": "JUMP"
    },
    "2804": {
      "op": "JUMPDEST"
    },
    "2805": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2807": {
      "op": "DUP3"
    },
    "2808": {
      "op": "ADD"
    },
    "2809": {
      "op": "MSTORE"
    },
    "2810": {
      "op": "PUSH2",
      "value": "0xB06"
    },
    "2813": {
      "op": "DUP7"
    },
    "2814": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2816": {
      "op": "DUP6"
    },
    "2817": {
      "op": "ADD"
    },
    "2818": {
      "op": "PUSH2",
      "value": "0x89A"
    },
    "2821": {
      "op": "JUMP"
    },
    "2822": {
      "op": "JUMPDEST"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2825": {
      "op": "DUP3"
    },
    "2826": {
      "op": "ADD"
    },
    "2827": {
      "op": "MSTORE"
    },
    "2828": {
      "op": "SWAP6"
    },
    "2829": {
      "op": "SWAP5"
    },
    "2830": {
      "op": "POP"
    },
    "2831": {
      "op": "POP"
    },
    "2832": {
      "op": "POP"
    },
    "2833": {
      "op": "POP"
    },
    "2834": {
      "op": "POP"
    },
    "2835": {
      "op": "JUMP"
    },
    "2836": {
      "op": "JUMPDEST"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2839": {
      "op": "DUP2"
    },
    "2840": {
      "op": "MLOAD"
    },
    "2841": {
      "op": "DUP1"
    },
    "2842": {
      "op": "DUP5"
    },
    "2843": {
      "op": "MSTORE"
    },
    "2844": {
      "op": "PUSH2",
      "value": "0xB2C"
    },
    "2847": {
      "op": "DUP2"
    },
    "2848": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2850": {
      "op": "DUP7"
    },
    "2851": {
      "op": "ADD"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2854": {
      "op": "DUP7"
    },
    "2855": {
      "op": "ADD"
    },
    "2856": {
      "op": "PUSH2",
      "value": "0xBF1"
    },
    "2859": {
      "op": "JUMP"
    },
    "2860": {
      "op": "JUMPDEST"
    },
    "2861": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2863": {
      "op": "ADD"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2866": {
      "op": "NOT"
    },
    "2867": {
      "op": "AND"
    },
    "2868": {
      "op": "SWAP3"
    },
    "2869": {
      "op": "SWAP1"
    },
    "2870": {
      "op": "SWAP3"
    },
    "2871": {
      "op": "ADD"
    },
    "2872": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2874": {
      "op": "ADD"
    },
    "2875": {
      "op": "SWAP3"
    },
    "2876": {
      "op": "SWAP2"
    },
    "2877": {
      "op": "POP"
    },
    "2878": {
      "op": "POP"
    },
    "2879": {
      "op": "JUMP"
    },
    "2880": {
      "op": "JUMPDEST"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2887": {
      "op": "SHL"
    },
    "2888": {
      "op": "SUB"
    },
    "2889": {
      "op": "SWAP2"
    },
    "2890": {
      "op": "SWAP1"
    },
    "2891": {
      "op": "SWAP2"
    },
    "2892": {
      "op": "AND"
    },
    "2893": {
      "op": "DUP2"
    },
    "2894": {
      "op": "MSTORE"
    },
    "2895": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2897": {
      "op": "ADD"
    },
    "2898": {
      "op": "SWAP1"
    },
    "2899": {
      "op": "JUMP"
    },
    "2900": {
      "op": "JUMPDEST"
    },
    "2901": {
      "op": "SWAP1"
    },
    "2902": {
      "op": "ISZERO"
    },
    "2903": {
      "op": "ISZERO"
    },
    "2904": {
      "op": "DUP2"
    },
    "2905": {
      "op": "MSTORE"
    },
    "2906": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2908": {
      "op": "ADD"
    },
    "2909": {
      "op": "SWAP1"
    },
    "2910": {
      "op": "JUMP"
    },
    "2911": {
      "op": "JUMPDEST"
    },
    "2912": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2916": {
      "op": "DUP3"
    },
    "2917": {
      "op": "MSTORE"
    },
    "2918": {
      "op": "PUSH2",
      "value": "0xB72"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2923": {
      "op": "DUP4"
    },
    "2924": {
      "op": "ADD"
    },
    "2925": {
      "op": "DUP7"
    },
    "2926": {
      "op": "PUSH2",
      "value": "0xB14"
    },
    "2929": {
      "op": "JUMP"
    },
    "2930": {
      "op": "JUMPDEST"
    },
    "2931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2937": {
      "op": "SHL"
    },
    "2938": {
      "op": "SUB"
    },
    "2939": {
      "op": "DUP6"
    },
    "2940": {
      "op": "AND"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2943": {
      "op": "DUP5"
    },
    "2944": {
      "op": "ADD"
    },
    "2945": {
      "op": "MSTORE"
    },
    "2946": {
      "op": "DUP3"
    },
    "2947": {
      "op": "DUP2"
    },
    "2948": {
      "op": "SUB"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2951": {
      "op": "DUP5"
    },
    "2952": {
      "op": "ADD"
    },
    "2953": {
      "op": "MSTORE"
    },
    "2954": {
      "op": "PUSH2",
      "value": "0xB93"
    },
    "2957": {
      "op": "DUP2"
    },
    "2958": {
      "op": "DUP6"
    },
    "2959": {
      "op": "PUSH2",
      "value": "0xB14"
    },
    "2962": {
      "op": "JUMP"
    },
    "2963": {
      "op": "JUMPDEST"
    },
    "2964": {
      "op": "SWAP7"
    },
    "2965": {
      "op": "SWAP6"
    },
    "2966": {
      "op": "POP"
    },
    "2967": {
      "op": "POP"
    },
    "2968": {
      "op": "POP"
    },
    "2969": {
      "op": "POP"
    },
    "2970": {
      "op": "POP"
    },
    "2971": {
      "op": "POP"
    },
    "2972": {
      "op": "JUMP"
    },
    "2973": {
      "op": "JUMPDEST"
    },
    "2974": {
      "op": "SWAP1"
    },
    "2975": {
      "op": "DUP2"
    },
    "2976": {
      "op": "MSTORE"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2979": {
      "op": "ADD"
    },
    "2980": {
      "op": "SWAP1"
    },
    "2981": {
      "op": "JUMP"
    },
    "2982": {
      "op": "JUMPDEST"
    },
    "2983": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2985": {
      "op": "MLOAD"
    },
    "2986": {
      "op": "DUP2"
    },
    "2987": {
      "op": "DUP2"
    },
    "2988": {
      "op": "ADD"
    },
    "2989": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2998": {
      "op": "DUP2"
    },
    "2999": {
      "op": "GT"
    },
    "3000": {
      "op": "DUP3"
    },
    "3001": {
      "op": "DUP3"
    },
    "3002": {
      "op": "LT"
    },
    "3003": {
      "op": "OR"
    },
    "3004": {
      "op": "ISZERO"
    },
    "3005": {
      "op": "PUSH2",
      "value": "0xBC5"
    },
    "3008": {
      "op": "JUMPI"
    },
    "3009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3011": {
      "op": "DUP1"
    },
    "3012": {
      "op": "REVERT"
    },
    "3013": {
      "op": "JUMPDEST"
    },
    "3014": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3016": {
      "op": "MSTORE"
    },
    "3017": {
      "op": "SWAP2"
    },
    "3018": {
      "op": "SWAP1"
    },
    "3019": {
      "op": "POP"
    },
    "3020": {
      "op": "JUMP"
    },
    "3021": {
      "op": "JUMPDEST"
    },
    "3022": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3024": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3033": {
      "op": "DUP3"
    },
    "3034": {
      "op": "GT"
    },
    "3035": {
      "op": "ISZERO"
    },
    "3036": {
      "op": "PUSH2",
      "value": "0xBE3"
    },
    "3039": {
      "op": "JUMPI"
    },
    "3040": {
      "op": "DUP1"
    },
    "3041": {
      "op": "DUP2"
    },
    "3042": {
      "op": "REVERT"
    },
    "3043": {
      "op": "JUMPDEST"
    },
    "3044": {
      "op": "POP"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3047": {
      "op": "ADD"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3050": {
      "op": "NOT"
    },
    "3051": {
      "op": "AND"
    },
    "3052": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3054": {
      "op": "ADD"
    },
    "3055": {
      "op": "SWAP1"
    },
    "3056": {
      "op": "JUMP"
    },
    "3057": {
      "op": "JUMPDEST"
    },
    "3058": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3060": {
      "op": "JUMPDEST"
    },
    "3061": {
      "op": "DUP4"
    },
    "3062": {
      "op": "DUP2"
    },
    "3063": {
      "op": "LT"
    },
    "3064": {
      "op": "ISZERO"
    },
    "3065": {
      "op": "PUSH2",
      "value": "0xC0C"
    },
    "3068": {
      "op": "JUMPI"
    },
    "3069": {
      "op": "DUP2"
    },
    "3070": {
      "op": "DUP2"
    },
    "3071": {
      "op": "ADD"
    },
    "3072": {
      "op": "MLOAD"
    },
    "3073": {
      "op": "DUP4"
    },
    "3074": {
      "op": "DUP3"
    },
    "3075": {
      "op": "ADD"
    },
    "3076": {
      "op": "MSTORE"
    },
    "3077": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3079": {
      "op": "ADD"
    },
    "3080": {
      "op": "PUSH2",
      "value": "0xBF4"
    },
    "3083": {
      "op": "JUMP"
    },
    "3084": {
      "op": "JUMPDEST"
    },
    "3085": {
      "op": "DUP4"
    },
    "3086": {
      "op": "DUP2"
    },
    "3087": {
      "op": "GT"
    },
    "3088": {
      "op": "ISZERO"
    },
    "3089": {
      "op": "PUSH2",
      "value": "0xC1B"
    },
    "3092": {
      "op": "JUMPI"
    },
    "3093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3095": {
      "op": "DUP5"
    },
    "3096": {
      "op": "DUP5"
    },
    "3097": {
      "op": "ADD"
    },
    "3098": {
      "op": "MSTORE"
    },
    "3099": {
      "op": "JUMPDEST"
    },
    "3100": {
      "op": "POP"
    },
    "3101": {
      "op": "POP"
    },
    "3102": {
      "op": "POP"
    },
    "3103": {
      "op": "POP"
    },
    "3104": {
      "op": "JUMP"
    },
    "3105": {
      "op": "JUMPDEST"
    },
    "3106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3110": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3112": {
      "op": "SHL"
    },
    "3113": {
      "op": "SUB"
    },
    "3114": {
      "op": "DUP2"
    },
    "3115": {
      "op": "AND"
    },
    "3116": {
      "op": "DUP2"
    },
    "3117": {
      "op": "EQ"
    },
    "3118": {
      "op": "PUSH2",
      "value": "0x6BA"
    },
    "3121": {
      "op": "JUMPI"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3124": {
      "op": "DUP1"
    },
    "3125": {
      "op": "REVERT"
    }
  },
  "sha1": "f18e93bb468d50b7567ed6500312488d96d3be43",
  "source": "pragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"./Ownable.sol\";\n\n// NFT type define \nlibrary NftLibs {\n    /*\n     *  Store a reference to an image, stored in IPFS, in an ethereum smart contract.\n     */\n    struct ImageInfo {\n        string ipfsInfo;\n    }\n\n    struct Price {\n        uint price;\n    }\n\n    struct NftInfo {\n        string nftName;\n        address nftProducer;\n        ImageInfo imageInfo;\n        Price price;\n        bool hasStarted;\n    }\n\n    modifier hasMandotaryFields(string memory _name, address _address, string memory _ipfsInfo) {\n        bytes memory tempEmptyNameStringTest = bytes(_name); \n        bytes memory tempEmptyImageStringTest = bytes(_ipfsInfo); \n\n        require(tempEmptyNameStringTest.length > 0 \n                && tempEmptyImageStringTest.length > 0\n                && _address != address(0));\n\n        _;\n    }\n\n    function createNftInfo(string memory _name, address _address, string memory _ipfsInfo) \n            public hasMandotaryFields(_name, _address, _ipfsInfo) \n            returns (NftInfo memory) {\n        NftInfo memory nftInfo = NftInfo(_name, _address, ImageInfo(_ipfsInfo), Price(0), false);\n        return nftInfo;\n    }\n}\n\ncontract NftCollection is Ownable {\n    /*\n     * Store all NFT for each address has.\n     * Stores the number of tokens each address has\n     */\n    mapping (address => NftLibs.NftInfo[]) private AddressToNftInfos;\n\n    /*\n     * Stores Whitelist on Map structure because dynamic list use more GAS for reallocating.\n     * TODO: For Decreasing GAS usage, we can merge AddressToNftInfos and Whitelist structure.\n     * pre/sale agar whitelist bashad mitavanad befroshad\n     * pre/sale agar whitelist bashad mitavanad befroshad\n     */\n    mapping (address => bool) private WhiteList;\n\n    // This parameter declare that minting tokens is public or just for WhiteList groups.\n    bool private publicEnabledShow = false;\n\n    // Stores the maximum number of tokens that you wanna sell.\n    uint32 private maxSupply = 0;\n\n    // Stores the remaining mints.\n    uint32 private numberOfMints = 0;\n\n    // TODO: Could combine bellow paramters in Sale structure for decreasing GAS cost\n    uint32 private preSale = 0;\n    uint32 private publicSale = 0;\n\n    uint private gasPay = 0.000001 ether;\n\n    function getNumberOfPreSale() public view returns(uint) {\n        return preSale;\n    }\n\n    function getNumberOfPubliSale() public view returns(uint) {\n        return publicSale;\n    }\n\n    function addToWhiteList(address _address) onlyOwner external {\n        WhiteList[_address] = true;\n    }\n\n    function createToken(string memory _name, address _address, string memory _ipfsInfo) public {\n        NftLibs.NftInfo memory nftInfo = NftLibs.createNftInfo(_name, _address, _ipfsInfo);\n        AddressToNftInfos[_address].push(nftInfo);\n        maxSupply ++;\n    }\n\n    function getMaxSupply() public view returns(uint) {\n        return maxSupply;\n    }\n\n    function getRemainingMints() public view returns(uint) {\n        return maxSupply - numberOfMints;\n    }\n\n    // Display status if sale has started.\n    function getSaleStarted() public view returns (bool) {\n        NftLibs.NftInfo storage nftInfo = getNftInfo();\n        return nftInfo.hasStarted;\n    }\n\n    // Once public enabled show it and enable mint button for all\n    function getOpenToPublic() public view returns (bool) {\n        return publicEnabledShow;\n    }\n\n    function setOpenToPublic() public onlyOwner returns (bool) {\n        publicEnabledShow = true;\n    }\n\n    function setClosedToPublic() public onlyOwner returns (bool) {\n        publicEnabledShow = false;\n    }\n\n    function getOnWhiteList() public view returns (bool) {\n        return WhiteList[msg.sender];\n    }\n\n    function safeMint() external payable hasMinted hasOnWhiteListOrIsPublicEnabledShow {\n        // Check to make sure gasPay ether was sent to the function call:\n        require(msg.value >= gasPay);\n\n        if (getOpenToPublic()) {\n            publicSale ++;\n        } else if(getOnWhiteList()) { // Only for more readability writing this condition\n            preSale ++;\n        }\n\n        // After get GAS could convert token to Non-Fungible token :)))\n        address payable _owner = address(uint160(owner()));\n        _owner.transfer(gasPay);\n\n        numberOfMints ++;\n    }\n\n    // Private functions\n    function getNftInfo() private view hasMinted returns(NftLibs.NftInfo storage) {\n        NftLibs.NftInfo[] storage nftInfos = AddressToNftInfos[msg.sender];\n\n        // TODO: Fix bellow.\n        return nftInfos[0];\n    }\n\n    modifier hasMinted() {\n        require(AddressToNftInfos[msg.sender].length > 0);\n        _;\n    } \n\n    modifier hasOnWhiteListOrIsPublicEnabledShow() {\n        require(getOnWhiteList() || getOpenToPublic());\n        _;\n    }\n}",
  "sourceMap": "1207:3615:0:-:0;;;1887:38;;;-1:-1:-1;;;;;;2223:29:0;;;2281:14;2259:36;;1207:3615;;;;;;;;;-1:-1:-1;501:6:1;:19;;-1:-1:-1;;;;;;501:19:1;510:10;501:19;;;;531:40;;-1:-1:-1;;;;;564:6:1;;;;;501;531:40;;501:6;;531:40;1207:3615:0;;;;;;",
  "sourcePath": "contracts/NftCollection.sol",
  "type": "contract"
}