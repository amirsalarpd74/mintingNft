{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_ipfsInfo",
          "type": "string"
        }
      ],
      "name": "createToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getOnWhiteList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOpenToPublic",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSaleStarted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "safeMint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/NftCollection.sol",
    "1": "contracts/Ownable.sol"
  },
  "ast": {
    "absolutePath": "contracts/NftCollection.sol",
    "exportedSymbols": {
      "NftCollection": [
        266
      ],
      "NftLibs": [
        100
      ]
    },
    "id": 267,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:0"
      },
      {
        "absolutePath": "contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 267,
        "sourceUnit": 388,
        "src": "59:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": null,
        "fullyImplemented": true,
        "id": 100,
        "linearizedBaseContracts": [
          100
        ],
        "name": "NftLibs",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "NftLibs.ImageInfo",
            "id": 6,
            "members": [
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "ipfsInfo",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 6,
                "src": "254:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "254:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "ImageInfo",
            "nodeType": "StructDefinition",
            "scope": 100,
            "src": "227:49:0",
            "visibility": "public"
          },
          {
            "canonicalName": "NftLibs.Price",
            "id": 9,
            "members": [
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "price",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 9,
                "src": "305:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "305:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Price",
            "nodeType": "StructDefinition",
            "scope": 100,
            "src": "282:40:0",
            "visibility": "public"
          },
          {
            "canonicalName": "NftLibs.NftInfo",
            "id": 22,
            "members": [
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "nftName",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22,
                "src": "353:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 10,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "353:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "nftProducer",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22,
                "src": "377:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 12,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "377:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "imageInfo",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22,
                "src": "406:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ImageInfo_$6_storage_ptr",
                  "typeString": "struct NftLibs.ImageInfo"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 14,
                  "name": "ImageInfo",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 6,
                  "src": "406:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ImageInfo_$6_storage_ptr",
                    "typeString": "struct NftLibs.ImageInfo"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "price",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22,
                "src": "435:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Price_$9_storage_ptr",
                  "typeString": "struct NftLibs.Price"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 16,
                  "name": "Price",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 9,
                  "src": "435:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Price_$9_storage_ptr",
                    "typeString": "struct NftLibs.Price"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "hasStarted",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22,
                "src": "456:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 18,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "456:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "publicEnabledShow",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22,
                "src": "481:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 20,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "481:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "NftInfo",
            "nodeType": "StructDefinition",
            "scope": 100,
            "src": "328:182:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "608:300:0",
              "statements": [
                {
                  "assignments": [
                    31
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31,
                      "mutability": "mutable",
                      "name": "tempEmptyNameStringTest",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 64,
                      "src": "618:36:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 30,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "618:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 36,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 34,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "663:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 33,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "657:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                        "typeString": "type(bytes storage pointer)"
                      },
                      "typeName": {
                        "id": 32,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "657:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "657:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "618:51:0"
                },
                {
                  "assignments": [
                    38
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38,
                      "mutability": "mutable",
                      "name": "tempEmptyImageStringTest",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 64,
                      "src": "680:37:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 37,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "680:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 43,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 41,
                        "name": "_ipfsInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "726:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "720:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                        "typeString": "type(bytes storage pointer)"
                      },
                      "typeName": {
                        "id": 39,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "720:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "720:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "680:56:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 53,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 48,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 45,
                                "name": "tempEmptyNameStringTest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "756:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 46,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "756:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 47,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "789:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "756:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 52,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 49,
                                "name": "tempEmptyImageStringTest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "811:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 50,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "811:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 51,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "845:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "811:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "756:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 54,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "866:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 57,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "886:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "878:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 55,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "878:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 58,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "878:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "866:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "756:132:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 44,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "748:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "748:141:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "748:141:0"
                },
                {
                  "id": 63,
                  "nodeType": "PlaceholderStatement",
                  "src": "900:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 65,
            "name": "hasMandotaryFields",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 65,
                  "src": "544:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 65,
                  "src": "565:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "565:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "_ipfsInfo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 65,
                  "src": "583:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "583:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "543:64:0"
            },
            "src": "516:392:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "1106:136:0",
              "statements": [
                {
                  "assignments": [
                    82
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 82,
                      "mutability": "mutable",
                      "name": "nftInfo",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 98,
                      "src": "1116:22:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NftInfo_$22_memory_ptr",
                        "typeString": "struct NftLibs.NftInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 81,
                        "name": "NftInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 22,
                        "src": "1116:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                          "typeString": "struct NftLibs.NftInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 95,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 84,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "1149:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 85,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "1156:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 87,
                            "name": "_ipfsInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71,
                            "src": "1176:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 86,
                          "name": "ImageInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "1166:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_ImageInfo_$6_storage_ptr_$",
                            "typeString": "type(struct NftLibs.ImageInfo storage pointer)"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1166:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ImageInfo_$6_memory_ptr",
                          "typeString": "struct NftLibs.ImageInfo memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 90,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1194:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 89,
                          "name": "Price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "1188:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Price_$9_storage_ptr_$",
                            "typeString": "type(struct NftLibs.Price storage pointer)"
                          }
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1188:8:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Price_$9_memory_ptr",
                          "typeString": "struct NftLibs.Price memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1198:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 93,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1205:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ImageInfo_$6_memory_ptr",
                          "typeString": "struct NftLibs.ImageInfo memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_Price_$9_memory_ptr",
                          "typeString": "struct NftLibs.Price memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 83,
                      "name": "NftInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1141:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_NftInfo_$22_storage_ptr_$",
                        "typeString": "type(struct NftLibs.NftInfo storage pointer)"
                      }
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1141:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$22_memory_ptr",
                      "typeString": "struct NftLibs.NftInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1116:95:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 96,
                    "name": "nftInfo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 82,
                    "src": "1228:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$22_memory_ptr",
                      "typeString": "struct NftLibs.NftInfo memory"
                    }
                  },
                  "functionReturnParameters": 80,
                  "id": 97,
                  "nodeType": "Return",
                  "src": "1221:14:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "019e08a0",
            "id": 99,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 74,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 67,
                    "src": "1040:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 75,
                    "name": "_address",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 69,
                    "src": "1047:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 76,
                    "name": "_ipfsInfo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 71,
                    "src": "1057:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 77,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 73,
                  "name": "hasMandotaryFields",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 65,
                  "src": "1021:18:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory,address,string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1021:46:0"
              }
            ],
            "name": "createNftInfo",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 99,
                  "src": "937:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "937:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 99,
                  "src": "958:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "958:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "_ipfsInfo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 99,
                  "src": "976:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "976:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "936:64:0"
            },
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 99,
                  "src": "1090:14:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NftInfo_$22_memory_ptr",
                    "typeString": "struct NftLibs.NftInfo"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 78,
                    "name": "NftInfo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 22,
                    "src": "1090:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                      "typeString": "struct NftLibs.NftInfo"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1089:16:0"
            },
            "scope": 100,
            "src": "914:328:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 267,
        "src": "104:1140:0"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 101,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 387,
              "src": "1272:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$387",
                "typeString": "contract Ownable"
              }
            },
            "id": 102,
            "nodeType": "InheritanceSpecifier",
            "src": "1272:7:0"
          }
        ],
        "contractDependencies": [
          387
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 266,
        "linearizedBaseContracts": [
          266,
          387
        ],
        "name": "NftCollection",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 107,
            "mutability": "mutable",
            "name": "AddressToNftInfos",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 266,
            "src": "1396:56:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct NftLibs.NftInfo[])"
            },
            "typeName": {
              "id": 106,
              "keyType": {
                "id": 103,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1405:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1396:38:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct NftLibs.NftInfo[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 104,
                  "name": "NftLibs.NftInfo",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 22,
                  "src": "1416:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                    "typeString": "struct NftLibs.NftInfo"
                  }
                },
                "id": 105,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1416:17:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage_ptr",
                  "typeString": "struct NftLibs.NftInfo[]"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 110,
            "mutability": "mutable",
            "name": "maxSupply",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 266,
            "src": "1523:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 108,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1523:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 109,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1542:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 113,
            "mutability": "mutable",
            "name": "numberOfMints",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 266,
            "src": "1585:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 111,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1585:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 112,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1608:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 116,
            "mutability": "mutable",
            "name": "gasPay",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 266,
            "src": "1616:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 114,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1616:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "302e30303031",
              "id": 115,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1630:12:0",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000_by_1",
                "typeString": "int_const 100000000000000"
              },
              "value": "0.0001"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 146,
              "nodeType": "Block",
              "src": "1741:172:0",
              "statements": [
                {
                  "assignments": [
                    128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 128,
                      "mutability": "mutable",
                      "name": "nftInfo",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 146,
                      "src": "1751:30:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NftInfo_$22_memory_ptr",
                        "typeString": "struct NftLibs.NftInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 127,
                        "name": "NftLibs.NftInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 22,
                        "src": "1751:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                          "typeString": "struct NftLibs.NftInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 135,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 131,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "1806:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 132,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "1813:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 133,
                        "name": "_ipfsInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "1823:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 129,
                        "name": "NftLibs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "1784:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NftLibs_$100_$",
                          "typeString": "type(library NftLibs)"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createNftInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 99,
                      "src": "1784:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$returns$_t_struct$_NftInfo_$22_memory_ptr_$",
                        "typeString": "function (string memory,address,string memory) returns (struct NftLibs.NftInfo memory)"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1784:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$22_memory_ptr",
                      "typeString": "struct NftLibs.NftInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1751:82:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 140,
                        "name": "nftInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 128,
                        "src": "1876:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NftInfo_$22_memory_ptr",
                          "typeString": "struct NftLibs.NftInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_NftInfo_$22_memory_ptr",
                          "typeString": "struct NftLibs.NftInfo memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 136,
                          "name": "AddressToNftInfos",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "1843:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct NftLibs.NftInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 138,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 137,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120,
                          "src": "1861:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1843:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage",
                          "typeString": "struct NftLibs.NftInfo storage ref[] storage ref"
                        }
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1843:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_NftInfo_$22_storage_$returns$__$",
                        "typeString": "function (struct NftLibs.NftInfo storage ref)"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1843:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "1843:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1894:12:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 143,
                      "name": "maxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "1894:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "1894:12:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "77eb17b4",
            "id": 147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 147,
                  "src": "1670:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1670:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 147,
                  "src": "1691:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1691:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "_ipfsInfo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 147,
                  "src": "1709:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1709:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1669:64:0"
            },
            "returnParameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1741:0:0"
            },
            "scope": 266,
            "src": "1649:264:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 168,
              "nodeType": "Block",
              "src": "1997:141:0",
              "statements": [
                {
                  "assignments": [
                    158
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 158,
                      "mutability": "mutable",
                      "name": "nftInfos",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 168,
                      "src": "2007:34:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage_ptr",
                        "typeString": "struct NftLibs.NftInfo[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 156,
                          "name": "NftLibs.NftInfo",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 22,
                          "src": "2007:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                            "typeString": "struct NftLibs.NftInfo"
                          }
                        },
                        "id": 157,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2007:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage_ptr",
                          "typeString": "struct NftLibs.NftInfo[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 163,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 159,
                      "name": "AddressToNftInfos",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "2044:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct NftLibs.NftInfo storage ref[] storage ref)"
                      }
                    },
                    "id": 162,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 160,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2062:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2062:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2044:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage",
                      "typeString": "struct NftLibs.NftInfo storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2007:66:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 164,
                      "name": "nftInfos",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158,
                      "src": "2120:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage_ptr",
                        "typeString": "struct NftLibs.NftInfo storage ref[] storage pointer"
                      }
                    },
                    "id": 166,
                    "indexExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2129:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2120:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$22_storage",
                      "typeString": "struct NftLibs.NftInfo storage ref"
                    }
                  },
                  "functionReturnParameters": 153,
                  "id": 167,
                  "nodeType": "Return",
                  "src": "2113:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 169,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 150,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 149,
                  "name": "hasMinted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 183,
                  "src": "1954:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1954:9:0"
              }
            ],
            "name": "getNftInfo",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1938:2:0"
            },
            "returnParameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 152,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 169,
                  "src": "1972:23:0",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                    "typeString": "struct NftLibs.NftInfo"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 151,
                    "name": "NftLibs.NftInfo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 22,
                    "src": "1972:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                      "typeString": "struct NftLibs.NftInfo"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1971:25:0"
            },
            "scope": 266,
            "src": "1919:219:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 182,
              "nodeType": "Block",
              "src": "2165:77:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 172,
                              "name": "AddressToNftInfos",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "2183:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct NftLibs.NftInfo storage ref[] storage ref)"
                              }
                            },
                            "id": 175,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 173,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2201:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2201:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2183:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_NftInfo_$22_storage_$dyn_storage",
                              "typeString": "struct NftLibs.NftInfo storage ref[] storage ref"
                            }
                          },
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2183:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2222:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2183:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 171,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2175:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2175:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "2175:49:0"
                },
                {
                  "id": 181,
                  "nodeType": "PlaceholderStatement",
                  "src": "2234:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 183,
            "name": "hasMinted",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2162:2:0"
            },
            "src": "2144:98:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 209,
              "nodeType": "Block",
              "src": "2287:115:0",
              "statements": [
                {
                  "assignments": [
                    189
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 189,
                      "mutability": "mutable",
                      "name": "_owner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 209,
                      "src": "2297:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 188,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2297:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 198,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 194,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 304,
                              "src": "2338:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2338:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2330:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint160_$",
                            "typeString": "type(uint160)"
                          },
                          "typeName": {
                            "id": 192,
                            "name": "uint160",
                            "nodeType": "ElementaryTypeName",
                            "src": "2330:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2330:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      ],
                      "id": 191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2322:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 190,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2322:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2322:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2297:50:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 204,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2381:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NftCollection_$266",
                                "typeString": "contract NftCollection"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_NftCollection_$266",
                                "typeString": "contract NftCollection"
                              }
                            ],
                            "id": 203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2373:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 202,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2373:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2373:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2373:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 199,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "2357:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2357:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2357:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "2357:38:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3ccfd60b",
            "id": 210,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 186,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 185,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 314,
                  "src": "2277:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2277:9:0"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2265:2:0"
            },
            "returnParameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2287:0:0"
            },
            "scope": 266,
            "src": "2248:154:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 222,
              "nodeType": "Block",
              "src": "2457:192:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 216,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2549:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2549:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 218,
                          "name": "gasPay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "2562:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2549:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 215,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2541:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2541:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 221,
                  "nodeType": "ExpressionStatement",
                  "src": "2541:28:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6871ee40",
            "id": 223,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 213,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 212,
                  "name": "hasMinted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 183,
                  "src": "2445:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2445:11:0"
              }
            ],
            "name": "safeMint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2425:2:0"
            },
            "returnParameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2457:0:0"
            },
            "scope": 266,
            "src": "2408:241:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 238,
              "nodeType": "Block",
              "src": "2751:98:0",
              "statements": [
                {
                  "assignments": [
                    231
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 231,
                      "mutability": "mutable",
                      "name": "nftInfo",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 238,
                      "src": "2761:31:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                        "typeString": "struct NftLibs.NftInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 230,
                        "name": "NftLibs.NftInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 22,
                        "src": "2761:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                          "typeString": "struct NftLibs.NftInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 234,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 232,
                      "name": "getNftInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 169,
                      "src": "2795:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_NftInfo_$22_storage_ptr_$",
                        "typeString": "function () view returns (struct NftLibs.NftInfo storage pointer)"
                      }
                    },
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2795:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                      "typeString": "struct NftLibs.NftInfo storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2761:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 235,
                      "name": "nftInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 231,
                      "src": "2824:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                        "typeString": "struct NftLibs.NftInfo storage pointer"
                      }
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "hasStarted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 19,
                    "src": "2824:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 227,
                  "id": 237,
                  "nodeType": "Return",
                  "src": "2817:25:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0b64251e",
            "id": 239,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSaleStarted",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2721:2:0"
            },
            "returnParameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 239,
                  "src": "2745:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2745:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2744:6:0"
            },
            "scope": 266,
            "src": "2698:151:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 254,
              "nodeType": "Block",
              "src": "2975:105:0",
              "statements": [
                {
                  "assignments": [
                    247
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 247,
                      "mutability": "mutable",
                      "name": "nftInfo",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 254,
                      "src": "2985:31:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                        "typeString": "struct NftLibs.NftInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 246,
                        "name": "NftLibs.NftInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 22,
                        "src": "2985:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                          "typeString": "struct NftLibs.NftInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 250,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 248,
                      "name": "getNftInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 169,
                      "src": "3019:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_NftInfo_$22_storage_ptr_$",
                        "typeString": "function () view returns (struct NftLibs.NftInfo storage pointer)"
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3019:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                      "typeString": "struct NftLibs.NftInfo storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2985:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 251,
                      "name": "nftInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 247,
                      "src": "3048:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NftInfo_$22_storage_ptr",
                        "typeString": "struct NftLibs.NftInfo storage pointer"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "publicEnabledShow",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21,
                    "src": "3048:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 243,
                  "id": 253,
                  "nodeType": "Return",
                  "src": "3041:32:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8680d87e",
            "id": 255,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOpenToPublic",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2945:2:0"
            },
            "returnParameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 242,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 255,
                  "src": "2969:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2969:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2968:6:0"
            },
            "scope": 266,
            "src": "2921:159:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 264,
              "nodeType": "Block",
              "src": "3179:28:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3196:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 261,
                  "id": 263,
                  "nodeType": "Return",
                  "src": "3189:11:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3acde386",
            "id": 265,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOnWhiteList",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 265,
                  "src": "3143:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3143:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3142:9:0"
            },
            "returnParameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 260,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 265,
                  "src": "3173:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3173:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3172:6:0"
            },
            "scope": 266,
            "src": "3119:88:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 267,
        "src": "1246:1963:0"
      }
    ],
    "src": "0:3209:0"
  },
  "bytecode": "6080604052600280546001600160401b0319169055655af3107a400060035534801561002a57600080fd5b50600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3610a16806100836000396000f3fe6080604052600436106100915760003560e01c806377eb17b41161005957806377eb17b4146101155780638680d87e146101355780638da5cb5b1461014a5780638f32d59b1461016c578063f2fde38b1461018157610091565b80630b64251e146100965780633acde386146100c15780633ccfd60b146100e15780636871ee40146100f8578063715018a614610100575b600080fd5b3480156100a257600080fd5b506100ab6101a1565b6040516100b89190610907565b60405180910390f35b3480156100cd57600080fd5b506100ab6100dc366004610759565b6101b9565b3480156100ed57600080fd5b506100f66101bf565b005b6100f6610216565b34801561010c57600080fd5b506100f661023f565b34801561012157600080fd5b506100f661013036600461077c565b61029a565b34801561014157600080fd5b506100ab610420565b34801561015657600080fd5b5061015f61043d565b6040516100b891906108f3565b34801561017857600080fd5b506100ab61044c565b34801561018d57600080fd5b506100f661019c366004610759565b61045d565b6000806101ac61047a565b6004015460ff1691505090565b50600190565b6101c761044c565b6101d057600080fd5b60006101da61043d565b6040519091506001600160a01b038216904780156108fc02916000818181858888f19350505050158015610212573d6000803e3d6000fd5b5050565b3360009081526001602052604090205461022f57600080fd5b600354341461023d57600080fd5b565b61024761044c565b61025057600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6102a2610530565b604051620cf04560e51b815273__NftLibs_______________________________9063019e08a0906102dc90879087908790600401610912565b60006040518083038186803b1580156102f457600080fd5b505af4158015610308573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261033091908101906107f1565b6001600160a01b038416600090815260016020818152604083208054928301815583529182902083518051949550859460059093029091019261037892849290910190610571565b506020828101516001830180546001600160a01b0319166001600160a01b03909216919091179055604083015180518051919260028501926103bd9284920190610571565b505050606082015151600382015560808201516004909101805460a09093015115156101000261ff001992151560ff19909416939093179190911691909117905550506002805463ffffffff8082166001011663ffffffff199091161790555050565b60008061042b61047a565b60040154610100900460ff1692915050565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b61046561044c565b61046e57600080fd5b610477816104c2565b50565b3360009081526001602052604081205461049357600080fd5b3360009081526001602052604081208054909182916104ae57fe5b906000526020600020906005020191505090565b6001600160a01b0381166104d557600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160c08101825260608152600060208201529081016105506105ef565b815260200161055d610602565b815260006020820181905260409091015290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106105b257805160ff19168380011785556105df565b828001600101855582156105df579182015b828111156105df5782518255916020019190600101906105c4565b506105eb929150610615565b5090565b6040518060200160405280606081525090565b6040518060200160405280600081525090565b5b808211156105eb5760008155600101610616565b8051610635816109cb565b92915050565b8051801515811461063557600080fd5b600082601f83011261065b578081fd5b813561066e61066982610977565b610950565b915080825283602082850101111561068557600080fd5b8060208401602084013760009082016020015292915050565b600082601f8301126106ae578081fd5b81516106bc61066982610977565b91508082528360208285010111156106d357600080fd5b6106e481602084016020860161099b565b5092915050565b6000602082840312156106fc578081fd5b6107066020610950565b9050815167ffffffffffffffff81111561071f57600080fd5b61072b8482850161069e565b82525092915050565b600060208284031215610745578081fd5b61074f6020610950565b9151825250919050565b60006020828403121561076a578081fd5b8135610775816109cb565b9392505050565b600080600060608486031215610790578182fd5b833567ffffffffffffffff808211156107a7578384fd5b6107b38783880161064b565b9450602086013591506107c5826109cb565b909250604085013590808211156107da578283fd5b506107e78682870161064b565b9150509250925092565b600060208284031215610802578081fd5b815167ffffffffffffffff80821115610819578283fd5b9083019060c0828603121561082c578283fd5b61083660c0610950565b825182811115610844578485fd5b6108508782860161069e565b825250610860866020850161062a565b6020820152604083015182811115610876578485fd5b610882878286016106eb565b6040830152506108958660608501610734565b60608201526108a7866080850161063b565b60808201526108b98660a0850161063b565b60a082015295945050505050565b600081518084526108df81602086016020860161099b565b601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b901515815260200190565b60006060825261092560608301866108c7565b6001600160a01b0385166020840152828103604084015261094681856108c7565b9695505050505050565b60405181810167ffffffffffffffff8111828210171561096f57600080fd5b604052919050565b600067ffffffffffffffff82111561098d578081fd5b50601f01601f191660200190565b60005b838110156109b657818101518382015260200161099e565b838111156109c5576000848401525b50505050565b6001600160a01b038116811461047757600080fdfea26469706673582212205c6bc5f00e2c15d0cfda7e8deb07b96808ba74ff2ba747535053c9348ea3103b64736f6c634300060c0033",
  "bytecodeSha1": "5628395f6e16ebc2a591e77f90ac3da4983a2526",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "NftCollection",
  "coverageMap": {
    "branches": {
      "0": {
        "NftCollection.safeMint": {
          "16": [
            2549,
            2568,
            true
          ]
        }
      },
      "1": {
        "Ownable._transferOwnership": {
          "18": [
            1840,
            1862,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "17": [
            812,
            821,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "NftCollection.createToken": {
          "6": [
            1843,
            1884
          ],
          "7": [
            1894,
            1906
          ]
        },
        "NftCollection.getNftInfo": {
          "12": [
            2113,
            2131
          ]
        },
        "NftCollection.getOnWhiteList": {
          "1": [
            3189,
            3200
          ]
        },
        "NftCollection.getOpenToPublic": {
          "8": [
            3041,
            3073
          ]
        },
        "NftCollection.getSaleStarted": {
          "0": [
            2817,
            2842
          ]
        },
        "NftCollection.safeMint": {
          "3": [
            2541,
            2569
          ]
        },
        "NftCollection.withdraw": {
          "2": [
            2357,
            2395
          ]
        }
      },
      "1": {
        "Ownable._transferOwnership": {
          "13": [
            1832,
            1863
          ],
          "14": [
            1869,
            1912
          ],
          "15": [
            1918,
            1935
          ]
        },
        "Ownable.isOwner": {
          "10": [
            963,
            990
          ]
        },
        "Ownable.owner": {
          "9": [
            681,
            694
          ]
        },
        "Ownable.renounceOwnership": {
          "4": [
            1306,
            1351
          ],
          "5": [
            1357,
            1376
          ]
        },
        "Ownable.transferOwnership": {
          "11": [
            1607,
            1635
          ]
        }
      }
    }
  },
  "dependencies": [
    "NftLibs",
    "Ownable"
  ],
  "deployedBytecode": "6080604052600436106100915760003560e01c806377eb17b41161005957806377eb17b4146101155780638680d87e146101355780638da5cb5b1461014a5780638f32d59b1461016c578063f2fde38b1461018157610091565b80630b64251e146100965780633acde386146100c15780633ccfd60b146100e15780636871ee40146100f8578063715018a614610100575b600080fd5b3480156100a257600080fd5b506100ab6101a1565b6040516100b89190610907565b60405180910390f35b3480156100cd57600080fd5b506100ab6100dc366004610759565b6101b9565b3480156100ed57600080fd5b506100f66101bf565b005b6100f6610216565b34801561010c57600080fd5b506100f661023f565b34801561012157600080fd5b506100f661013036600461077c565b61029a565b34801561014157600080fd5b506100ab610420565b34801561015657600080fd5b5061015f61043d565b6040516100b891906108f3565b34801561017857600080fd5b506100ab61044c565b34801561018d57600080fd5b506100f661019c366004610759565b61045d565b6000806101ac61047a565b6004015460ff1691505090565b50600190565b6101c761044c565b6101d057600080fd5b60006101da61043d565b6040519091506001600160a01b038216904780156108fc02916000818181858888f19350505050158015610212573d6000803e3d6000fd5b5050565b3360009081526001602052604090205461022f57600080fd5b600354341461023d57600080fd5b565b61024761044c565b61025057600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6102a2610530565b604051620cf04560e51b815273__$67ab562366c52fcbcaecae584739bc0d72$__9063019e08a0906102dc90879087908790600401610912565b60006040518083038186803b1580156102f457600080fd5b505af4158015610308573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261033091908101906107f1565b6001600160a01b038416600090815260016020818152604083208054928301815583529182902083518051949550859460059093029091019261037892849290910190610571565b506020828101516001830180546001600160a01b0319166001600160a01b03909216919091179055604083015180518051919260028501926103bd9284920190610571565b505050606082015151600382015560808201516004909101805460a09093015115156101000261ff001992151560ff19909416939093179190911691909117905550506002805463ffffffff8082166001011663ffffffff199091161790555050565b60008061042b61047a565b60040154610100900460ff1692915050565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b61046561044c565b61046e57600080fd5b610477816104c2565b50565b3360009081526001602052604081205461049357600080fd5b3360009081526001602052604081208054909182916104ae57fe5b906000526020600020906005020191505090565b6001600160a01b0381166104d557600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160c08101825260608152600060208201529081016105506105ef565b815260200161055d610602565b815260006020820181905260409091015290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106105b257805160ff19168380011785556105df565b828001600101855582156105df579182015b828111156105df5782518255916020019190600101906105c4565b506105eb929150610615565b5090565b6040518060200160405280606081525090565b6040518060200160405280600081525090565b5b808211156105eb5760008155600101610616565b8051610635816109cb565b92915050565b8051801515811461063557600080fd5b600082601f83011261065b578081fd5b813561066e61066982610977565b610950565b915080825283602082850101111561068557600080fd5b8060208401602084013760009082016020015292915050565b600082601f8301126106ae578081fd5b81516106bc61066982610977565b91508082528360208285010111156106d357600080fd5b6106e481602084016020860161099b565b5092915050565b6000602082840312156106fc578081fd5b6107066020610950565b9050815167ffffffffffffffff81111561071f57600080fd5b61072b8482850161069e565b82525092915050565b600060208284031215610745578081fd5b61074f6020610950565b9151825250919050565b60006020828403121561076a578081fd5b8135610775816109cb565b9392505050565b600080600060608486031215610790578182fd5b833567ffffffffffffffff808211156107a7578384fd5b6107b38783880161064b565b9450602086013591506107c5826109cb565b909250604085013590808211156107da578283fd5b506107e78682870161064b565b9150509250925092565b600060208284031215610802578081fd5b815167ffffffffffffffff80821115610819578283fd5b9083019060c0828603121561082c578283fd5b61083660c0610950565b825182811115610844578485fd5b6108508782860161069e565b825250610860866020850161062a565b6020820152604083015182811115610876578485fd5b610882878286016106eb565b6040830152506108958660608501610734565b60608201526108a7866080850161063b565b60808201526108b98660a0850161063b565b60a082015295945050505050565b600081518084526108df81602086016020860161099b565b601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b901515815260200190565b60006060825261092560608301866108c7565b6001600160a01b0385166020840152828103604084015261094681856108c7565b9695505050505050565b60405181810167ffffffffffffffff8111828210171561096f57600080fd5b604052919050565b600067ffffffffffffffff82111561098d578081fd5b50601f01601f191660200190565b60005b838110156109b657818101518382015260200161099e565b838111156109c5576000848401525b50505050565b6001600160a01b038116811461047757600080fdfea26469706673582212205c6bc5f00e2c15d0cfda7e8deb07b96808ba74ff2ba747535053c9348ea3103b64736f6c634300060c0033",
  "deployedSourceMap": "1246:1963:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2698:151;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3119:88;;;;;;;;;;-1:-1:-1;3119:88:0;;;;;:::i;:::-;;:::i;2248:154::-;;;;;;;;;;;;;:::i;:::-;;2408:241;;;:::i;1254:127:1:-;;;;;;;;;;;;;:::i;1649:264:0:-;;;;;;;;;;-1:-1:-1;1649:264:0;;;;;:::i;:::-;;:::i;2921:159::-;;;;;;;;;;;;;:::i;629:70:1:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;912:83::-;;;;;;;;;;;;;:::i;1539:101::-;;;;;;;;;;-1:-1:-1;1539:101:1;;;;;:::i;:::-;;:::i;2698:151:0:-;2745:4;2761:31;2795:12;:10;:12::i;:::-;2824:18;;;;;;-1:-1:-1;;2698:151:0;:::o;3119:88::-;-1:-1:-1;3196:4:0;;3119:88::o;2248:154::-;812:9:1;:7;:9::i;:::-;804:18;;;;;;2297:22:0::1;2338:7;:5;:7::i;:::-;2357:38;::::0;2297:50;;-1:-1:-1;;;;;;2357:15:0;::::1;::::0;2373:21:::1;2357:38:::0;::::1;;;::::0;::::1;::::0;;;2373:21;2357:15;:38;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;828:1:1;2248:154:0:o:0;2408:241::-;2201:10;2222:1;2183:29;;;:17;:29;;;;;:36;2175:49;;;;;;2562:6:::1;;2549:9;:19;2541:28;;;::::0;::::1;;2408:241::o:0;1254:127:1:-;812:9;:7;:9::i;:::-;804:18;;;;;;1348:1:::1;1332:6:::0;;1311:40:::1;::::0;-1:-1:-1;;;;;1332:6:1;;::::1;::::0;1311:40:::1;::::0;1348:1;;1311:40:::1;1374:1;1357:19:::0;;-1:-1:-1;;;;;;1357:19:1::1;::::0;;1254:127::o;1649:264:0:-;1751:30;;:::i;:::-;1784:49;;-1:-1:-1;;;1784:49:0;;:7;;:21;;:49;;1806:5;;1813:8;;1823:9;;1784:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1784:49:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1843:27:0;;;;;;:17;:27;;;;;;;:41;;;;;;;;;;;;;;;;;1751:82;;-1:-1:-1;1751:82:0;;1843:41;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1843:41:0;;;;;;;;;;-1:-1:-1;;;;;;1843:41:0;-1:-1:-1;;;;;1843:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;1843:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1843:41:0;;;-1:-1:-1;;1843:41:0;;;;;;;;;;;;;;;;;-1:-1:-1;;1894:9:0;:12;;;;;;1843:41;1894:12;;-1:-1:-1;;1894:12:0;;;;;;-1:-1:-1;;1649:264:0:o;2921:159::-;2969:4;2985:31;3019:12;:10;:12::i;:::-;3048:25;;;;;;;;;2921:159;-1:-1:-1;;2921:159:0:o;629:70:1:-;666:7;688:6;-1:-1:-1;;;;;688:6:1;629:70;:::o;912:83::-;951:4;984:6;-1:-1:-1;;;;;984:6:1;970:10;:20;;912:83::o;1539:101::-;812:9;:7;:9::i;:::-;804:18;;;;;;1607:28:::1;1626:8;1607:18;:28::i;:::-;1539:101:::0;:::o;1919:219:0:-;2201:10;1972:23;2183:29;;;:17;:29;;;;;:36;2175:49;;;;;;2062:10:::1;2007:34;2044:29:::0;;;:17:::1;:29;::::0;;;;2120:11;;2044:29;;;;2120:11:::1;;;;;;;;;;;;;;2113:18;;;1919:219:::0;:::o;1771:169:1:-;-1:-1:-1;;;;;1840:22:1;;1832:31;;;;;;1895:6;;;1874:38;;-1:-1:-1;;;;;1874:38:1;;;;1895:6;;;1874:38;;;1918:6;:17;;-1:-1:-1;;;;;;1918:17:1;-1:-1:-1;;;;;1918:17:1;;;;;;;;;;1771:169::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;142:134;220:13;;238:33;220:13;238:33;:::i;:::-;205:71;;;;:::o;283:128::-;358:13;;7962;;7955:21;8911:32;;8901:2;;8957:1;;8947:12;419:442;;521:3;514:4;506:6;502:17;498:27;488:2;;-1:-1;;529:12;488:2;576:6;563:20;598:65;613:49;655:6;613:49;:::i;:::-;598:65;:::i;:::-;589:74;;683:6;676:5;669:21;787:3;719:4;778:6;711;769:16;;766:25;763:2;;;804:1;;794:12;763:2;8277:6;719:4;711:6;707:17;719:4;745:5;741:16;8254:30;8333:1;8315:16;;;719:4;8315:16;8308:27;745:5;481:380;-1:-1;;481:380::o;870:444::-;;983:3;976:4;968:6;964:17;960:27;950:2;;-1:-1;;991:12;950:2;1031:6;1025:13;1053:65;1068:49;1110:6;1068:49;:::i;1053:65::-;1044:74;;1138:6;1131:5;1124:21;1242:3;1174:4;1233:6;1166;1224:16;;1221:25;1218:2;;;1259:1;;1249:12;1218:2;1269:39;1301:6;1174:4;1200:5;1196:16;1174:4;1166:6;1162:17;1269:39;:::i;:::-;;943:371;;;;:::o;1353:437::-;;1477:4;1465:9;1460:3;1456:19;1452:30;1449:2;;;-1:-1;;1485:12;1449:2;1513:20;1477:4;1513:20;:::i;:::-;1504:29;;1593:17;1587:24;1631:18;1623:6;1620:30;1617:2;;;1608:1;;1653:12;1617:2;1698:70;1764:3;1755:6;1744:9;1740:22;1698:70;:::i;:::-;1680:16;1673:96;;1443:347;;;;:::o;3221:341::-;;3341:4;3329:9;3324:3;3320:19;3316:30;3313:2;;;-1:-1;;3349:12;3313:2;3377:20;3341:4;3377:20;:::i;:::-;3647:13;;3455:86;;-1:-1;3368:29;3307:255;-1:-1;3307:255::o;3710:241::-;;3814:2;3802:9;3793:7;3789:23;3785:32;3782:2;;;-1:-1;;3820:12;3782:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;3872:63;3776:175;-1:-1;;;3776:175::o;3958:703::-;;;;4116:2;4104:9;4095:7;4091:23;4087:32;4084:2;;;-1:-1;;4122:12;4084:2;4180:17;4167:31;4218:18;;4210:6;4207:30;4204:2;;;-1:-1;;4240:12;4204:2;4270:63;4325:7;4316:6;4305:9;4301:22;4270:63;:::i;:::-;4260:73;;4370:2;4413:9;4409:22;72:20;63:29;;97:33;124:5;97:33;:::i;:::-;4378:63;;-1:-1;4506:2;4491:18;;4478:32;;4519:30;;;4516:2;;;-1:-1;;4552:12;4516:2;;4582:63;4637:7;4628:6;4617:9;4613:22;4582:63;:::i;:::-;4572:73;;;4078:583;;;;;:::o;4668:388::-;;4806:2;4794:9;4785:7;4781:23;4777:32;4774:2;;;-1:-1;;4812:12;4774:2;4863:17;4857:24;4901:18;;4893:6;4890:30;4887:2;;;-1:-1;;4923:12;4887:2;5008:22;;;;1949:4;1928:19;;;1924:30;1921:2;;;-1:-1;;1957:12;1921:2;1985:20;1949:4;1985:20;:::i;:::-;2064:17;2058:24;4901:18;2094:6;2091:30;2088:2;;;-1:-1;;2124:12;2088:2;2169:70;2235:3;2226:6;2215:9;2211:22;2169:70;:::i;:::-;2151:16;2144:96;;2341:60;2397:3;4806:2;2377:9;2373:22;2341:60;:::i;:::-;4806:2;2327:5;2323:16;2316:86;2489:2;2478:9;2474:18;2468:25;4901:18;2505:6;2502:30;2499:2;;;-1:-1;;2535:12;2499:2;2580:84;2660:3;2651:6;2640:9;2636:22;2580:84;:::i;:::-;2489:2;2566:5;2562:16;2555:110;;2760:80;2836:3;2727:2;2816:9;2812:22;2760:80;:::i;:::-;2727:2;2746:5;2742:16;2735:106;2942:57;2995:3;2908;2975:9;2971:22;2942:57;:::i;:::-;2908:3;2928:5;2924:16;2917:83;3108:57;3161:3;3074;3141:9;3137:22;3108:57;:::i;:::-;3074:3;3090:16;;3083:83;3094:5;4768:288;-1:-1;;;;;4768:288::o;5422:363::-;;5575:5;7577:12;7742:6;7737:3;7730:19;5677:52;5722:6;7779:4;7774:3;7770:14;7779:4;5703:5;5699:16;5677:52;:::i;:::-;8710:7;8694:14;-1:-1;;8690:28;5741:39;;;;7779:4;5741:39;;5522:263;-1:-1;;5522:263::o;5792:222::-;-1:-1;;;;;8050:54;;;;5134:37;;5919:2;5904:18;;5890:124::o;6021:210::-;7962:13;;7955:21;5376:34;;6142:2;6127:18;;6113:118::o;6238:652::-;;6469:2;6490:17;6483:47;6544:86;6469:2;6458:9;6454:18;6616:6;6544:86;:::i;:::-;-1:-1;;;;;8050:54;;6717:2;6702:18;;5134:37;6759:20;;;6754:2;6739:18;;6732:48;6794:86;6763:4;6866:6;6794:86;:::i;:::-;6786:94;6440:450;-1:-1;;;;;;6440:450::o;6897:256::-;6959:2;6953:9;6985:17;;;7060:18;7045:34;;7081:22;;;7042:62;7039:2;;;7117:1;;7107:12;7039:2;6959;7126:22;6937:216;;-1:-1;6937:216::o;7160:322::-;;7304:18;7296:6;7293:30;7290:2;;;-1:-1;;7326:12;7290:2;-1:-1;8710:7;7380:17;-1:-1;;7376:33;7467:4;7457:15;;7227:255::o;8350:268::-;8415:1;8422:101;8436:6;8433:1;8430:13;8422:101;;;8503:11;;;8497:18;8484:11;;;8477:39;8458:2;8451:10;8422:101;;;8538:6;8535:1;8532:13;8529:2;;;8415:1;8594:6;8589:3;8585:16;8578:27;8529:2;;8399:219;;;:::o;8731:117::-;-1:-1;;;;;8050:54;;8790:35;;8780:2;;8839:1;;8829:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "isOwner()": {
        "returns": {
          "_0": "true if `msg.sender` is the owner of the contract."
        }
      },
      "owner()": {
        "returns": {
          "_0": "the address of the owner."
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract.",
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "version": 1
  },
  "offset": [
    1246,
    3209
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x77EB17B4 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x77EB17B4 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x8680D87E EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x181 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0xB64251E EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x3ACDE386 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x6871EE40 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x100 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x907 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x759 JUMP JUMPDEST PUSH2 0x1B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF6 PUSH2 0x1BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF6 PUSH2 0x216 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF6 PUSH2 0x23F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF6 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x77C JUMP JUMPDEST PUSH2 0x29A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x420 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x8F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x44C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF6 PUSH2 0x19C CALLDATASIZE PUSH1 0x4 PUSH2 0x759 JUMP JUMPDEST PUSH2 0x45D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1AC PUSH2 0x47A JUMP JUMPDEST PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x44C JUMP JUMPDEST PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DA PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x212 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD CALLVALUE EQ PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x247 PUSH2 0x44C JUMP JUMPDEST PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x530 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xCF045 PUSH1 0xE5 SHL DUP2 MSTORE PUSH20 0x0 SWAP1 PUSH4 0x19E08A0 SWAP1 PUSH2 0x2DC SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x912 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x308 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x330 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE DUP4 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP1 MLOAD SWAP5 SWAP6 POP DUP6 SWAP5 PUSH1 0x5 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD SWAP3 PUSH2 0x378 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x571 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD DUP1 MLOAD SWAP2 SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 PUSH2 0x3BD SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0x571 JUMP JUMPDEST POP POP POP PUSH1 0x60 DUP3 ADD MLOAD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xA0 SWAP1 SWAP4 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP2 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP PUSH1 0x2 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x1 ADD AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x42B PUSH2 0x47A JUMP JUMPDEST PUSH1 0x4 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH2 0x465 PUSH2 0x44C JUMP JUMPDEST PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x477 DUP2 PUSH2 0x4C2 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH2 0x4AE JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD PUSH2 0x550 PUSH2 0x5EF JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x55D PUSH2 0x602 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x5B2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x5DF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x5DF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x5DF JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x5C4 JUMP JUMPDEST POP PUSH2 0x5EB SWAP3 SWAP2 POP PUSH2 0x615 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x5EB JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x616 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x635 DUP2 PUSH2 0x9CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x635 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x65B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x66E PUSH2 0x669 DUP3 PUSH2 0x977 JUMP JUMPDEST PUSH2 0x950 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x685 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP3 ADD PUSH1 0x20 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6AE JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6BC PUSH2 0x669 DUP3 PUSH2 0x977 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6E4 DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x99B JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6FC JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x706 PUSH1 0x20 PUSH2 0x950 JUMP JUMPDEST SWAP1 POP DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x71F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x72B DUP5 DUP3 DUP6 ADD PUSH2 0x69E JUMP JUMPDEST DUP3 MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x745 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x74F PUSH1 0x20 PUSH2 0x950 JUMP JUMPDEST SWAP2 MLOAD DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x76A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x775 DUP2 PUSH2 0x9CB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x790 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x7A7 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x7B3 DUP8 DUP4 DUP9 ADD PUSH2 0x64B JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH2 0x7C5 DUP3 PUSH2 0x9CB JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x7DA JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x7E7 DUP7 DUP3 DUP8 ADD PUSH2 0x64B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x802 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x819 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0xC0 DUP3 DUP7 SUB SLT ISZERO PUSH2 0x82C JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x836 PUSH1 0xC0 PUSH2 0x950 JUMP JUMPDEST DUP3 MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x844 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x850 DUP8 DUP3 DUP7 ADD PUSH2 0x69E JUMP JUMPDEST DUP3 MSTORE POP PUSH2 0x860 DUP7 PUSH1 0x20 DUP6 ADD PUSH2 0x62A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x876 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x882 DUP8 DUP3 DUP7 ADD PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH2 0x895 DUP7 PUSH1 0x60 DUP6 ADD PUSH2 0x734 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x8A7 DUP7 PUSH1 0x80 DUP6 ADD PUSH2 0x63B JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x8B9 DUP7 PUSH1 0xA0 DUP6 ADD PUSH2 0x63B JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x8DF DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x99B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 MSTORE PUSH2 0x925 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x946 DUP2 DUP6 PUSH2 0x8C7 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x98D JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9B6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x99E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x9C5 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C PUSH12 0xC5F00E2C15D0CFDA7E8DEB07 0xB9 PUSH9 0x8BA74FF2BA7475350 MSTORE8 0xC9 CALLVALUE DUP15 LOG3 LT EXTCODESIZE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x91"
    },
    "12": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x77EB17B4"
    },
    "25": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "GT",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59"
    },
    "29": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x77EB17B4"
    },
    "36": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x115"
    },
    "40": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8680D87E"
    },
    "47": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x135"
    },
    "51": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA5CB5B"
    },
    "58": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14A"
    },
    "62": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8F32D59B"
    },
    "69": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16C"
    },
    "73": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "DUP1",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "EQ",
      "path": "0"
    },
    "81": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x181"
    },
    "84": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "85": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x91"
    },
    "88": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "JUMP",
      "path": "0"
    },
    "89": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "90": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "DUP1",
      "path": "0"
    },
    "91": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB64251E"
    },
    "96": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "EQ",
      "path": "0"
    },
    "97": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x96"
    },
    "100": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "DUP1",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3ACDE386"
    },
    "107": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "EQ",
      "path": "0"
    },
    "108": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "111": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "DUP1",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3CCFD60B"
    },
    "118": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "EQ",
      "path": "0"
    },
    "119": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE1"
    },
    "122": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "123": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "DUP1",
      "path": "0"
    },
    "124": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6871EE40"
    },
    "129": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "EQ",
      "path": "0"
    },
    "130": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF8"
    },
    "133": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "134": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "DUP1",
      "path": "0"
    },
    "135": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x715018A6"
    },
    "140": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "EQ",
      "path": "0"
    },
    "141": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "144": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "145": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "146": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "148": {
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "DUP1",
      "path": "0"
    },
    "149": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1246,
        3209
      ],
      "op": "REVERT",
      "path": "0"
    },
    "150": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "151": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "152": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "DUP1",
      "path": "0"
    },
    "153": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "154": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA2"
    },
    "157": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "160": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "DUP1",
      "path": "0"
    },
    "161": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "REVERT",
      "path": "0"
    },
    "162": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "163": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "POP",
      "path": "0"
    },
    "164": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB"
    },
    "167": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "170": {
      "fn": "NftCollection.getSaleStarted",
      "jump": "i",
      "offset": [
        2698,
        2849
      ],
      "op": "JUMP",
      "path": "0"
    },
    "171": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "172": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "174": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "175": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8"
    },
    "178": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "179": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "180": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x907"
    },
    "183": {
      "fn": "NftCollection.getSaleStarted",
      "jump": "i",
      "offset": [
        2698,
        2849
      ],
      "op": "JUMP",
      "path": "0"
    },
    "184": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "185": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "187": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "188": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "DUP1",
      "path": "0"
    },
    "189": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "190": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "SUB",
      "path": "0"
    },
    "191": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "192": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "RETURN",
      "path": "0"
    },
    "193": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3119,
        3207
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "194": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3119,
        3207
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "195": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3119,
        3207
      ],
      "op": "DUP1",
      "path": "0"
    },
    "196": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3119,
        3207
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "197": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3119,
        3207
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD"
    },
    "200": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3119,
        3207
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "201": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3119,
        3207
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "203": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3119,
        3207
      ],
      "op": "DUP1",
      "path": "0"
    },
    "204": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3119,
        3207
      ],
      "op": "REVERT",
      "path": "0"
    },
    "205": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3119,
        3207
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "206": {
      "op": "POP"
    },
    "207": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3119,
        3207
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB"
    },
    "210": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3119,
        3207
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDC"
    },
    "213": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3119,
        3207
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "214": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3119,
        3207
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "216": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3119,
        3207
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x759"
    },
    "219": {
      "fn": "NftCollection.getOnWhiteList",
      "jump": "i",
      "offset": [
        3119,
        3207
      ],
      "op": "JUMP",
      "path": "0"
    },
    "220": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3119,
        3207
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "221": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3119,
        3207
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B9"
    },
    "224": {
      "fn": "NftCollection.getOnWhiteList",
      "jump": "i",
      "offset": [
        3119,
        3207
      ],
      "op": "JUMP",
      "path": "0"
    },
    "225": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2248,
        2402
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "226": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2248,
        2402
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "227": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2248,
        2402
      ],
      "op": "DUP1",
      "path": "0"
    },
    "228": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2248,
        2402
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "229": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2248,
        2402
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED"
    },
    "232": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2248,
        2402
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "233": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2248,
        2402
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "235": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2248,
        2402
      ],
      "op": "DUP1",
      "path": "0"
    },
    "236": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2248,
        2402
      ],
      "op": "REVERT",
      "path": "0"
    },
    "237": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2248,
        2402
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "238": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2248,
        2402
      ],
      "op": "POP",
      "path": "0"
    },
    "239": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2248,
        2402
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF6"
    },
    "242": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2248,
        2402
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BF"
    },
    "245": {
      "fn": "NftCollection.withdraw",
      "jump": "i",
      "offset": [
        2248,
        2402
      ],
      "op": "JUMP",
      "path": "0"
    },
    "246": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2248,
        2402
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "247": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2248,
        2402
      ],
      "op": "STOP",
      "path": "0"
    },
    "248": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2408,
        2649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "249": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2408,
        2649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF6"
    },
    "252": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2408,
        2649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x216"
    },
    "255": {
      "fn": "NftCollection.safeMint",
      "jump": "i",
      "offset": [
        2408,
        2649
      ],
      "op": "JUMP",
      "path": "0"
    },
    "256": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "257": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "258": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "DUP1",
      "path": "1"
    },
    "259": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "260": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10C"
    },
    "263": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "264": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "266": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "DUP1",
      "path": "1"
    },
    "267": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "REVERT",
      "path": "1"
    },
    "268": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "269": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "POP",
      "path": "1"
    },
    "270": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF6"
    },
    "273": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23F"
    },
    "276": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1254,
        1381
      ],
      "op": "JUMP",
      "path": "1"
    },
    "277": {
      "fn": "NftCollection.createToken",
      "offset": [
        1649,
        1913
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "278": {
      "fn": "NftCollection.createToken",
      "offset": [
        1649,
        1913
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "279": {
      "fn": "NftCollection.createToken",
      "offset": [
        1649,
        1913
      ],
      "op": "DUP1",
      "path": "0"
    },
    "280": {
      "fn": "NftCollection.createToken",
      "offset": [
        1649,
        1913
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "281": {
      "fn": "NftCollection.createToken",
      "offset": [
        1649,
        1913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x121"
    },
    "284": {
      "fn": "NftCollection.createToken",
      "offset": [
        1649,
        1913
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "285": {
      "fn": "NftCollection.createToken",
      "offset": [
        1649,
        1913
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "287": {
      "fn": "NftCollection.createToken",
      "offset": [
        1649,
        1913
      ],
      "op": "DUP1",
      "path": "0"
    },
    "288": {
      "fn": "NftCollection.createToken",
      "offset": [
        1649,
        1913
      ],
      "op": "REVERT",
      "path": "0"
    },
    "289": {
      "fn": "NftCollection.createToken",
      "offset": [
        1649,
        1913
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "290": {
      "op": "POP"
    },
    "291": {
      "fn": "NftCollection.createToken",
      "offset": [
        1649,
        1913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF6"
    },
    "294": {
      "fn": "NftCollection.createToken",
      "offset": [
        1649,
        1913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x130"
    },
    "297": {
      "fn": "NftCollection.createToken",
      "offset": [
        1649,
        1913
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "298": {
      "fn": "NftCollection.createToken",
      "offset": [
        1649,
        1913
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "300": {
      "fn": "NftCollection.createToken",
      "offset": [
        1649,
        1913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x77C"
    },
    "303": {
      "fn": "NftCollection.createToken",
      "jump": "i",
      "offset": [
        1649,
        1913
      ],
      "op": "JUMP",
      "path": "0"
    },
    "304": {
      "fn": "NftCollection.createToken",
      "offset": [
        1649,
        1913
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "305": {
      "fn": "NftCollection.createToken",
      "offset": [
        1649,
        1913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29A"
    },
    "308": {
      "fn": "NftCollection.createToken",
      "jump": "i",
      "offset": [
        1649,
        1913
      ],
      "op": "JUMP",
      "path": "0"
    },
    "309": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2921,
        3080
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "310": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2921,
        3080
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "311": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2921,
        3080
      ],
      "op": "DUP1",
      "path": "0"
    },
    "312": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2921,
        3080
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "313": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2921,
        3080
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x141"
    },
    "316": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2921,
        3080
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "317": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2921,
        3080
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "319": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2921,
        3080
      ],
      "op": "DUP1",
      "path": "0"
    },
    "320": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2921,
        3080
      ],
      "op": "REVERT",
      "path": "0"
    },
    "321": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2921,
        3080
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "322": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2921,
        3080
      ],
      "op": "POP",
      "path": "0"
    },
    "323": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2921,
        3080
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB"
    },
    "326": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2921,
        3080
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x420"
    },
    "329": {
      "fn": "NftCollection.getOpenToPublic",
      "jump": "i",
      "offset": [
        2921,
        3080
      ],
      "op": "JUMP",
      "path": "0"
    },
    "330": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "331": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "332": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "DUP1",
      "path": "1"
    },
    "333": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "334": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x156"
    },
    "337": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "338": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "340": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "DUP1",
      "path": "1"
    },
    "341": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "REVERT",
      "path": "1"
    },
    "342": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "343": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "POP",
      "path": "1"
    },
    "344": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15F"
    },
    "347": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x43D"
    },
    "350": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        629,
        699
      ],
      "op": "JUMP",
      "path": "1"
    },
    "351": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "352": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "354": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "355": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB8"
    },
    "358": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "359": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "360": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F3"
    },
    "363": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        629,
        699
      ],
      "op": "JUMP",
      "path": "1"
    },
    "364": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "365": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "366": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "DUP1",
      "path": "1"
    },
    "367": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "368": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x178"
    },
    "371": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "372": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "374": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "DUP1",
      "path": "1"
    },
    "375": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "REVERT",
      "path": "1"
    },
    "376": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "377": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "POP",
      "path": "1"
    },
    "378": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAB"
    },
    "381": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x44C"
    },
    "384": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        912,
        995
      ],
      "op": "JUMP",
      "path": "1"
    },
    "385": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "386": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "387": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "DUP1",
      "path": "1"
    },
    "388": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "389": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18D"
    },
    "392": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "393": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "395": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "DUP1",
      "path": "1"
    },
    "396": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "REVERT",
      "path": "1"
    },
    "397": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "398": {
      "op": "POP"
    },
    "399": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF6"
    },
    "402": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19C"
    },
    "405": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "406": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "408": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x759"
    },
    "411": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1539,
        1640
      ],
      "op": "JUMP",
      "path": "1"
    },
    "412": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "413": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x45D"
    },
    "416": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1539,
        1640
      ],
      "op": "JUMP",
      "path": "1"
    },
    "417": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "418": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2745,
        2749
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "420": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2761,
        2792
      ],
      "op": "DUP1",
      "path": "0"
    },
    "421": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2795,
        2807
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AC"
    },
    "424": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2795,
        2805
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47A"
    },
    "427": {
      "fn": "NftCollection.getSaleStarted",
      "jump": "i",
      "offset": [
        2795,
        2807
      ],
      "op": "JUMP",
      "path": "0"
    },
    "428": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2795,
        2807
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "429": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2824,
        2842
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x4"
    },
    "431": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2824,
        2842
      ],
      "op": "ADD",
      "path": "0"
    },
    "432": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2824,
        2842
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "433": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2824,
        2842
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "435": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2824,
        2842
      ],
      "op": "AND",
      "path": "0"
    },
    "436": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2824,
        2842
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "437": {
      "op": "POP"
    },
    "438": {
      "op": "POP"
    },
    "439": {
      "fn": "NftCollection.getSaleStarted",
      "offset": [
        2698,
        2849
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "440": {
      "fn": "NftCollection.getSaleStarted",
      "jump": "o",
      "offset": [
        2698,
        2849
      ],
      "op": "JUMP",
      "path": "0"
    },
    "441": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3119,
        3207
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "442": {
      "op": "POP"
    },
    "443": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3196,
        3200
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x1"
    },
    "445": {
      "fn": "NftCollection.getOnWhiteList",
      "offset": [
        3196,
        3200
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "446": {
      "fn": "NftCollection.getOnWhiteList",
      "jump": "o",
      "offset": [
        3119,
        3207
      ],
      "op": "JUMP",
      "path": "0"
    },
    "447": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2248,
        2402
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "448": {
      "offset": [
        812,
        821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C7"
    },
    "451": {
      "offset": [
        812,
        819
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x44C"
    },
    "454": {
      "jump": "i",
      "offset": [
        812,
        821
      ],
      "op": "JUMP",
      "path": "1"
    },
    "455": {
      "fn": "NftCollection.withdraw",
      "offset": [
        812,
        821
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "456": {
      "offset": [
        804,
        822
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D0"
    },
    "459": {
      "offset": [
        804,
        822
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "460": {
      "fn": "NftCollection.withdraw",
      "offset": [
        804,
        822
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "462": {
      "fn": "NftCollection.withdraw",
      "offset": [
        804,
        822
      ],
      "op": "DUP1",
      "path": "1"
    },
    "463": {
      "fn": "NftCollection.withdraw",
      "offset": [
        804,
        822
      ],
      "op": "REVERT",
      "path": "1"
    },
    "464": {
      "fn": "NftCollection.withdraw",
      "offset": [
        804,
        822
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "465": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2297,
        2319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "467": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2338,
        2345
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DA"
    },
    "470": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2338,
        2343
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43D"
    },
    "473": {
      "fn": "NftCollection.withdraw",
      "jump": "i",
      "offset": [
        2338,
        2345
      ],
      "op": "JUMP",
      "path": "0"
    },
    "474": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2338,
        2345
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "475": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x40"
    },
    "477": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "478": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2297,
        2347
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "479": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2297,
        2347
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "480": {
      "op": "POP"
    },
    "481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "485": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "487": {
      "op": "SHL"
    },
    "488": {
      "op": "SUB"
    },
    "489": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2372
      ],
      "op": "DUP3",
      "path": "0"
    },
    "490": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2372
      ],
      "op": "AND",
      "path": "0"
    },
    "491": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2372
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "492": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2373,
        2394
      ],
      "op": "SELFBALANCE",
      "path": "0"
    },
    "493": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "DUP1",
      "path": "0"
    },
    "494": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "495": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "498": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "MUL",
      "path": "0"
    },
    "499": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "500": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "502": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "503": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "504": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "505": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2373,
        2394
      ],
      "op": "DUP6",
      "path": "0"
    },
    "506": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2372
      ],
      "op": "DUP9",
      "path": "0"
    },
    "507": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "DUP9",
      "path": "0"
    },
    "508": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "CALL",
      "path": "0"
    },
    "509": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "510": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "POP",
      "path": "0"
    },
    "511": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "POP",
      "path": "0"
    },
    "512": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "POP",
      "path": "0"
    },
    "513": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "POP",
      "path": "0"
    },
    "514": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "515": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "DUP1",
      "path": "0"
    },
    "516": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "517": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x212"
    },
    "520": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "521": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "522": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "524": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "DUP1",
      "path": "0"
    },
    "525": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "526": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "527": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "529": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "REVERT",
      "path": "0"
    },
    "530": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "531": {
      "fn": "NftCollection.withdraw",
      "offset": [
        2357,
        2395
      ],
      "op": "POP",
      "path": "0"
    },
    "532": {
      "offset": [
        828,
        829
      ],
      "op": "POP",
      "path": "1"
    },
    "533": {
      "fn": "NftCollection.withdraw",
      "jump": "o",
      "offset": [
        2248,
        2402
      ],
      "op": "JUMP",
      "path": "0"
    },
    "534": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2408,
        2649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "535": {
      "offset": [
        2201,
        2211
      ],
      "op": "CALLER",
      "path": "0"
    },
    "536": {
      "offset": [
        2222,
        2223
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "538": {
      "offset": [
        2183,
        2212
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "539": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2183,
        2212
      ],
      "op": "DUP2",
      "path": "0"
    },
    "540": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2183,
        2212
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "541": {
      "offset": [
        2183,
        2200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "543": {
      "offset": [
        2183,
        2212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "545": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2183,
        2212
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "546": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2183,
        2212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "548": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2183,
        2212
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "549": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2183,
        2212
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "550": {
      "offset": [
        2183,
        2219
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "551": {
      "offset": [
        2175,
        2224
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22F"
    },
    "554": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2175,
        2224
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "555": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2175,
        2224
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "557": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2175,
        2224
      ],
      "op": "DUP1",
      "path": "0"
    },
    "558": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2175,
        2224
      ],
      "op": "REVERT",
      "path": "0"
    },
    "559": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2175,
        2224
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "560": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2562,
        2568
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x3"
    },
    "562": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2562,
        2568
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "563": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2549,
        2558
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "564": {
      "branch": 16,
      "fn": "NftCollection.safeMint",
      "offset": [
        2549,
        2568
      ],
      "op": "EQ",
      "path": "0"
    },
    "565": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2541,
        2569
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23D"
    },
    "568": {
      "branch": 16,
      "fn": "NftCollection.safeMint",
      "offset": [
        2541,
        2569
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "569": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2541,
        2569
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "571": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2541,
        2569
      ],
      "op": "DUP1",
      "path": "0"
    },
    "572": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2541,
        2569
      ],
      "op": "REVERT",
      "path": "0"
    },
    "573": {
      "fn": "NftCollection.safeMint",
      "offset": [
        2541,
        2569
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "574": {
      "fn": "NftCollection.safeMint",
      "jump": "o",
      "offset": [
        2408,
        2649
      ],
      "op": "JUMP",
      "path": "0"
    },
    "575": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1254,
        1381
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "576": {
      "offset": [
        812,
        821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x247"
    },
    "579": {
      "offset": [
        812,
        819
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x44C"
    },
    "582": {
      "jump": "i",
      "offset": [
        812,
        821
      ],
      "op": "JUMP",
      "path": "1"
    },
    "583": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        812,
        821
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "584": {
      "offset": [
        804,
        822
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x250"
    },
    "587": {
      "offset": [
        804,
        822
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "588": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        804,
        822
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "590": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        804,
        822
      ],
      "op": "DUP1",
      "path": "1"
    },
    "591": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        804,
        822
      ],
      "op": "REVERT",
      "path": "1"
    },
    "592": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        804,
        822
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "593": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1349
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 4,
      "value": "0x0"
    },
    "595": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1332,
        1338
      ],
      "op": "DUP1",
      "path": "1"
    },
    "596": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1332,
        1338
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "597": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1311,
        1351
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "599": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1311,
        1351
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "606": {
      "op": "SHL"
    },
    "607": {
      "op": "SUB"
    },
    "608": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1332,
        1338
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "609": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1332,
        1338
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "610": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1332,
        1338
      ],
      "op": "AND",
      "path": "1"
    },
    "611": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1332,
        1338
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "612": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1311,
        1351
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "645": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1311,
        1351
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "646": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1349
      ],
      "op": "DUP4",
      "path": "1"
    },
    "647": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1349
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "648": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1311,
        1351
      ],
      "op": "LOG3",
      "path": "1"
    },
    "649": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1374,
        1375
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 5,
      "value": "0x0"
    },
    "651": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1357,
        1376
      ],
      "op": "DUP1",
      "path": "1"
    },
    "652": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1357,
        1376
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "657": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "659": {
      "op": "SHL"
    },
    "660": {
      "op": "SUB"
    },
    "661": {
      "op": "NOT"
    },
    "662": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1357,
        1376
      ],
      "op": "AND",
      "path": "1"
    },
    "663": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1357,
        1376
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "664": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1357,
        1376
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "665": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1254,
        1381
      ],
      "op": "JUMP",
      "path": "1"
    },
    "666": {
      "fn": "NftCollection.createToken",
      "offset": [
        1649,
        1913
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "667": {
      "fn": "NftCollection.createToken",
      "offset": [
        1751,
        1781
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A2"
    },
    "670": {
      "fn": "NftCollection.createToken",
      "offset": [
        1751,
        1781
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x530"
    },
    "673": {
      "fn": "NftCollection.createToken",
      "jump": "i",
      "offset": [
        1751,
        1781
      ],
      "op": "JUMP",
      "path": "0"
    },
    "674": {
      "fn": "NftCollection.createToken",
      "offset": [
        1751,
        1781
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "675": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "677": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "678": {
      "op": "PUSH3",
      "value": "0xCF045"
    },
    "682": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "684": {
      "op": "SHL"
    },
    "685": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "DUP2",
      "path": "0"
    },
    "686": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "687": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1791
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0x0"
    },
    "708": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "709": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1805
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x19E08A0"
    },
    "714": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1805
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "715": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DC"
    },
    "718": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "719": {
      "fn": "NftCollection.createToken",
      "offset": [
        1806,
        1811
      ],
      "op": "DUP8",
      "path": "0"
    },
    "720": {
      "fn": "NftCollection.createToken",
      "offset": [
        1806,
        1811
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "721": {
      "fn": "NftCollection.createToken",
      "offset": [
        1813,
        1821
      ],
      "op": "DUP8",
      "path": "0"
    },
    "722": {
      "fn": "NftCollection.createToken",
      "offset": [
        1813,
        1821
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "723": {
      "fn": "NftCollection.createToken",
      "offset": [
        1823,
        1832
      ],
      "op": "DUP8",
      "path": "0"
    },
    "724": {
      "fn": "NftCollection.createToken",
      "offset": [
        1823,
        1832
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "725": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "727": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "ADD",
      "path": "0"
    },
    "728": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x912"
    },
    "731": {
      "fn": "NftCollection.createToken",
      "jump": "i",
      "offset": [
        1784,
        1833
      ],
      "op": "JUMP",
      "path": "0"
    },
    "732": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "733": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "735": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "737": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "738": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "DUP1",
      "path": "0"
    },
    "739": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "DUP4",
      "path": "0"
    },
    "740": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "SUB",
      "path": "0"
    },
    "741": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "DUP2",
      "path": "0"
    },
    "742": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "DUP7",
      "path": "0"
    },
    "743": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "DUP1",
      "path": "0"
    },
    "744": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "745": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "746": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "DUP1",
      "path": "0"
    },
    "747": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "748": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F4"
    },
    "751": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "752": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "754": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "DUP1",
      "path": "0"
    },
    "755": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "REVERT",
      "path": "0"
    },
    "756": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "757": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "POP",
      "path": "0"
    },
    "758": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "GAS",
      "path": "0"
    },
    "759": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "DELEGATECALL",
      "path": "0"
    },
    "760": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "761": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "DUP1",
      "path": "0"
    },
    "762": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "763": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x308"
    },
    "766": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "767": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "768": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "770": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "DUP1",
      "path": "0"
    },
    "771": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "772": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "773": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "775": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "REVERT",
      "path": "0"
    },
    "776": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "777": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "POP",
      "path": "0"
    },
    "778": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "POP",
      "path": "0"
    },
    "779": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "POP",
      "path": "0"
    },
    "780": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "POP",
      "path": "0"
    },
    "781": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "783": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "784": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "785": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "787": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "DUP3",
      "path": "0"
    },
    "788": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "789": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "791": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "792": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "793": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "DUP2",
      "path": "0"
    },
    "794": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "ADD",
      "path": "0"
    },
    "795": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "797": {
      "op": "NOT"
    },
    "798": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "AND",
      "path": "0"
    },
    "799": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "DUP3",
      "path": "0"
    },
    "800": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "ADD",
      "path": "0"
    },
    "801": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "803": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "804": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x330"
    },
    "807": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "808": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "809": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "DUP2",
      "path": "0"
    },
    "810": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "ADD",
      "path": "0"
    },
    "811": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "812": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F1"
    },
    "815": {
      "fn": "NftCollection.createToken",
      "jump": "i",
      "offset": [
        1784,
        1833
      ],
      "op": "JUMP",
      "path": "0"
    },
    "816": {
      "fn": "NftCollection.createToken",
      "offset": [
        1784,
        1833
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "821": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "823": {
      "op": "SHL"
    },
    "824": {
      "op": "SUB"
    },
    "825": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1870
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 6
    },
    "826": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1870
      ],
      "op": "AND",
      "path": "0"
    },
    "827": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "829": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1870
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "830": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1870
      ],
      "op": "DUP2",
      "path": "0"
    },
    "831": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1870
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "832": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1860
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "834": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "836": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1870
      ],
      "op": "DUP2",
      "path": "0"
    },
    "837": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1870
      ],
      "op": "DUP2",
      "path": "0"
    },
    "838": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1870
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "839": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "841": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1870
      ],
      "op": "DUP4",
      "path": "0"
    },
    "842": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1870
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "843": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "DUP1",
      "path": "0"
    },
    "844": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "845": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "846": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "DUP4",
      "path": "0"
    },
    "847": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "ADD",
      "path": "0"
    },
    "848": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "DUP2",
      "path": "0"
    },
    "849": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "850": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "DUP4",
      "path": "0"
    },
    "851": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "852": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "853": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "DUP3",
      "path": "0"
    },
    "854": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "855": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "856": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "DUP4",
      "path": "0"
    },
    "857": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "858": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "DUP1",
      "path": "0"
    },
    "859": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "860": {
      "fn": "NftCollection.createToken",
      "offset": [
        1751,
        1833
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "861": {
      "fn": "NftCollection.createToken",
      "offset": [
        1751,
        1833
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "862": {
      "op": "POP"
    },
    "863": {
      "fn": "NftCollection.createToken",
      "offset": [
        1751,
        1833
      ],
      "op": "DUP6",
      "path": "0"
    },
    "864": {
      "fn": "NftCollection.createToken",
      "offset": [
        1751,
        1833
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "865": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "867": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "868": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "869": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "MUL",
      "path": "0"
    },
    "870": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "871": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "872": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "ADD",
      "path": "0"
    },
    "873": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "874": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "877": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "878": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "DUP5",
      "path": "0"
    },
    "879": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "880": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "881": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "882": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "ADD",
      "path": "0"
    },
    "883": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "884": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x571"
    },
    "887": {
      "fn": "NftCollection.createToken",
      "jump": "i",
      "offset": [
        1843,
        1884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "888": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "889": {
      "op": "POP"
    },
    "890": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "892": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "DUP3",
      "path": "0"
    },
    "893": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "DUP2",
      "path": "0"
    },
    "894": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "ADD",
      "path": "0"
    },
    "895": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "896": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "898": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "DUP4",
      "path": "0"
    },
    "899": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "ADD",
      "path": "0"
    },
    "900": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "DUP1",
      "path": "0"
    },
    "901": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "908": {
      "op": "SHL"
    },
    "909": {
      "op": "SUB"
    },
    "910": {
      "op": "NOT"
    },
    "911": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "AND",
      "path": "0"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "916": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "918": {
      "op": "SHL"
    },
    "919": {
      "op": "SUB"
    },
    "920": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "921": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "922": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "AND",
      "path": "0"
    },
    "923": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "924": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "925": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "926": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "OR",
      "path": "0"
    },
    "927": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "928": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "929": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "931": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "DUP4",
      "path": "0"
    },
    "932": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "ADD",
      "path": "0"
    },
    "933": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "934": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "DUP1",
      "path": "0"
    },
    "935": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "936": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "DUP1",
      "path": "0"
    },
    "937": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "938": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "939": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "940": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "942": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "DUP6",
      "path": "0"
    },
    "943": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "ADD",
      "path": "0"
    },
    "944": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "945": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BD"
    },
    "948": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "949": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "DUP5",
      "path": "0"
    },
    "950": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "951": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "ADD",
      "path": "0"
    },
    "952": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "953": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x571"
    },
    "956": {
      "fn": "NftCollection.createToken",
      "jump": "i",
      "offset": [
        1843,
        1884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "957": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "958": {
      "op": "POP"
    },
    "959": {
      "op": "POP"
    },
    "960": {
      "op": "POP"
    },
    "961": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "963": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "DUP3",
      "path": "0"
    },
    "964": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "ADD",
      "path": "0"
    },
    "965": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "966": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "967": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "969": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "DUP3",
      "path": "0"
    },
    "970": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "ADD",
      "path": "0"
    },
    "971": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "972": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "974": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "DUP3",
      "path": "0"
    },
    "975": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "ADD",
      "path": "0"
    },
    "976": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "977": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "979": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "980": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "981": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "ADD",
      "path": "0"
    },
    "982": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "DUP1",
      "path": "0"
    },
    "983": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "984": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "986": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "987": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "988": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "ADD",
      "path": "0"
    },
    "989": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "990": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "991": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "992": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "995": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "MUL",
      "path": "0"
    },
    "996": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "999": {
      "op": "NOT"
    },
    "1000": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1001": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1002": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1005": {
      "op": "NOT"
    },
    "1006": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1007": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1008": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "AND",
      "path": "0"
    },
    "1009": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1010": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1011": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1012": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "OR",
      "path": "0"
    },
    "1013": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1014": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1015": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1016": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "AND",
      "path": "0"
    },
    "1017": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1018": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1019": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1020": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "OR",
      "path": "0"
    },
    "1021": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1022": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1023": {
      "op": "POP"
    },
    "1024": {
      "op": "POP"
    },
    "1025": {
      "fn": "NftCollection.createToken",
      "offset": [
        1894,
        1903
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x2"
    },
    "1027": {
      "fn": "NftCollection.createToken",
      "offset": [
        1894,
        1906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1028": {
      "fn": "NftCollection.createToken",
      "offset": [
        1894,
        1906
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1029": {
      "fn": "NftCollection.createToken",
      "offset": [
        1894,
        1906
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1034": {
      "fn": "NftCollection.createToken",
      "offset": [
        1894,
        1906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1035": {
      "fn": "NftCollection.createToken",
      "offset": [
        1894,
        1906
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1036": {
      "fn": "NftCollection.createToken",
      "offset": [
        1894,
        1906
      ],
      "op": "AND",
      "path": "0"
    },
    "1037": {
      "fn": "NftCollection.createToken",
      "offset": [
        1843,
        1884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1039": {
      "fn": "NftCollection.createToken",
      "offset": [
        1894,
        1906
      ],
      "op": "ADD",
      "path": "0"
    },
    "1040": {
      "fn": "NftCollection.createToken",
      "offset": [
        1894,
        1906
      ],
      "op": "AND",
      "path": "0"
    },
    "1041": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1046": {
      "op": "NOT"
    },
    "1047": {
      "fn": "NftCollection.createToken",
      "offset": [
        1894,
        1906
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1048": {
      "fn": "NftCollection.createToken",
      "offset": [
        1894,
        1906
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1049": {
      "fn": "NftCollection.createToken",
      "offset": [
        1894,
        1906
      ],
      "op": "AND",
      "path": "0"
    },
    "1050": {
      "fn": "NftCollection.createToken",
      "offset": [
        1894,
        1906
      ],
      "op": "OR",
      "path": "0"
    },
    "1051": {
      "fn": "NftCollection.createToken",
      "offset": [
        1894,
        1906
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1052": {
      "fn": "NftCollection.createToken",
      "offset": [
        1894,
        1906
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1053": {
      "op": "POP"
    },
    "1054": {
      "op": "POP"
    },
    "1055": {
      "fn": "NftCollection.createToken",
      "jump": "o",
      "offset": [
        1649,
        1913
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1056": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2921,
        3080
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1057": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2969,
        2973
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1059": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2985,
        3016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1060": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3019,
        3031
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42B"
    },
    "1063": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3019,
        3029
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47A"
    },
    "1066": {
      "fn": "NftCollection.getOpenToPublic",
      "jump": "i",
      "offset": [
        3019,
        3031
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1067": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3019,
        3031
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1068": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3048,
        3073
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x4"
    },
    "1070": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3048,
        3073
      ],
      "op": "ADD",
      "path": "0"
    },
    "1071": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3048,
        3073
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1072": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3048,
        3073
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1075": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3048,
        3073
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1076": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3048,
        3073
      ],
      "op": "DIV",
      "path": "0"
    },
    "1077": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3048,
        3073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1079": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3048,
        3073
      ],
      "op": "AND",
      "path": "0"
    },
    "1080": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        3048,
        3073
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1081": {
      "fn": "NftCollection.getOpenToPublic",
      "offset": [
        2921,
        3080
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1082": {
      "op": "POP"
    },
    "1083": {
      "op": "POP"
    },
    "1084": {
      "fn": "NftCollection.getOpenToPublic",
      "jump": "o",
      "offset": [
        2921,
        3080
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1085": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1086": {
      "fn": "Ownable.owner",
      "offset": [
        666,
        673
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1088": {
      "fn": "Ownable.owner",
      "offset": [
        688,
        694
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 9
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1095": {
      "op": "SHL"
    },
    "1096": {
      "op": "SUB"
    },
    "1097": {
      "fn": "Ownable.owner",
      "offset": [
        688,
        694
      ],
      "op": "AND",
      "path": "1"
    },
    "1098": {
      "fn": "Ownable.owner",
      "offset": [
        629,
        699
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1099": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        629,
        699
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1100": {
      "fn": "Ownable.isOwner",
      "offset": [
        912,
        995
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1101": {
      "fn": "Ownable.isOwner",
      "offset": [
        951,
        955
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1103": {
      "fn": "Ownable.isOwner",
      "offset": [
        984,
        990
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 10
    },
    "1104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1110": {
      "op": "SHL"
    },
    "1111": {
      "op": "SUB"
    },
    "1112": {
      "fn": "Ownable.isOwner",
      "offset": [
        984,
        990
      ],
      "op": "AND",
      "path": "1"
    },
    "1113": {
      "fn": "Ownable.isOwner",
      "offset": [
        970,
        980
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1114": {
      "fn": "Ownable.isOwner",
      "offset": [
        970,
        990
      ],
      "op": "EQ",
      "path": "1"
    },
    "1115": {
      "fn": "Ownable.isOwner",
      "offset": [
        970,
        990
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1116": {
      "fn": "Ownable.isOwner",
      "jump": "o",
      "offset": [
        912,
        995
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1117": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1118": {
      "offset": [
        812,
        821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x465"
    },
    "1121": {
      "offset": [
        812,
        819
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x44C"
    },
    "1124": {
      "jump": "i",
      "offset": [
        812,
        821
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1125": {
      "branch": 17,
      "fn": "Ownable.transferOwnership",
      "offset": [
        812,
        821
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1126": {
      "offset": [
        804,
        822
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x46E"
    },
    "1129": {
      "branch": 17,
      "offset": [
        804,
        822
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1130": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        804,
        822
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1132": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        804,
        822
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1133": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        804,
        822
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1134": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        804,
        822
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1135": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1607,
        1635
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 11,
      "value": "0x477"
    },
    "1138": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1626,
        1634
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1139": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1607,
        1625
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4C2"
    },
    "1142": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1607,
        1635
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1143": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1607,
        1635
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1144": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1539,
        1640
      ],
      "op": "POP",
      "path": "1"
    },
    "1145": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1539,
        1640
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1146": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        1919,
        2138
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1147": {
      "offset": [
        2201,
        2211
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1148": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        1972,
        1995
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1150": {
      "offset": [
        2183,
        2212
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1151": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2183,
        2212
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1152": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2183,
        2212
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1153": {
      "offset": [
        2183,
        2200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1155": {
      "offset": [
        2183,
        2212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1157": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2183,
        2212
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1158": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2183,
        2212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1160": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2183,
        2212
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1161": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2183,
        2212
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1162": {
      "offset": [
        2183,
        2219
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1163": {
      "offset": [
        2175,
        2224
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x493"
    },
    "1166": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2175,
        2224
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1167": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2175,
        2224
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1169": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2175,
        2224
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1170": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2175,
        2224
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1171": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2175,
        2224
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1172": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2062,
        2072
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1173": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2007,
        2041
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1175": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2044,
        2073
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1176": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2044,
        2073
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1177": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2044,
        2073
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1178": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2044,
        2061
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1180": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2044,
        2073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1182": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2044,
        2073
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1183": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2044,
        2073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1185": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2044,
        2073
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1186": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2044,
        2073
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1187": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2120,
        2131
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 12
    },
    "1188": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2120,
        2131
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1189": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2044,
        2073
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1190": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2044,
        2073
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1191": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2044,
        2073
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1192": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2044,
        2073
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1193": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2120,
        2131
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AE"
    },
    "1196": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2120,
        2131
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1197": {
      "dev": "Index out of range",
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2120,
        2131
      ],
      "op": "INVALID",
      "path": "0"
    },
    "1198": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2120,
        2131
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1199": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2120,
        2131
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1200": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2120,
        2131
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1202": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2120,
        2131
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1203": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2120,
        2131
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1205": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2120,
        2131
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1207": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2120,
        2131
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1208": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2120,
        2131
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1209": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2120,
        2131
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1211": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2120,
        2131
      ],
      "op": "MUL",
      "path": "0"
    },
    "1212": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2120,
        2131
      ],
      "op": "ADD",
      "path": "0"
    },
    "1213": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2113,
        2131
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1214": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2113,
        2131
      ],
      "op": "POP",
      "path": "0"
    },
    "1215": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        2113,
        2131
      ],
      "op": "POP",
      "path": "0"
    },
    "1216": {
      "fn": "NftCollection.getNftInfo",
      "offset": [
        1919,
        2138
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1217": {
      "fn": "NftCollection.getNftInfo",
      "jump": "o",
      "offset": [
        1919,
        2138
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1218": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1771,
        1940
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1225": {
      "op": "SHL"
    },
    "1226": {
      "op": "SUB"
    },
    "1227": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1840,
        1862
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 13
    },
    "1228": {
      "branch": 18,
      "fn": "Ownable._transferOwnership",
      "offset": [
        1840,
        1862
      ],
      "op": "AND",
      "path": "1"
    },
    "1229": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1832,
        1863
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4D5"
    },
    "1232": {
      "branch": 18,
      "fn": "Ownable._transferOwnership",
      "offset": [
        1832,
        1863
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1233": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1832,
        1863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1235": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1832,
        1863
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1236": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1832,
        1863
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1237": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1832,
        1863
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1238": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1895,
        1901
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 14,
      "value": "0x0"
    },
    "1240": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1895,
        1901
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1241": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1895,
        1901
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1242": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1874,
        1912
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1244": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1874,
        1912
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1251": {
      "op": "SHL"
    },
    "1252": {
      "op": "SUB"
    },
    "1253": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1874,
        1912
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1254": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1874,
        1912
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1255": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1874,
        1912
      ],
      "op": "AND",
      "path": "1"
    },
    "1256": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1874,
        1912
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1257": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1895,
        1901
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1258": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1895,
        1901
      ],
      "op": "AND",
      "path": "1"
    },
    "1259": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1895,
        1901
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1260": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1874,
        1912
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1293": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1874,
        1912
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1294": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1874,
        1912
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1295": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1924
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 15,
      "value": "0x0"
    },
    "1297": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1298": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1305": {
      "op": "SHL"
    },
    "1306": {
      "op": "SUB"
    },
    "1307": {
      "op": "NOT"
    },
    "1308": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "AND",
      "path": "1"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1315": {
      "op": "SHL"
    },
    "1316": {
      "op": "SUB"
    },
    "1317": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1318": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1319": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1320": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "AND",
      "path": "1"
    },
    "1321": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1322": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1323": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1324": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "OR",
      "path": "1"
    },
    "1325": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1326": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1918,
        1935
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1327": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        1771,
        1940
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1328": {
      "op": "JUMPDEST"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1331": {
      "op": "DUP1"
    },
    "1332": {
      "op": "MLOAD"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1335": {
      "op": "DUP2"
    },
    "1336": {
      "op": "ADD"
    },
    "1337": {
      "op": "DUP3"
    },
    "1338": {
      "op": "MSTORE"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1341": {
      "op": "DUP2"
    },
    "1342": {
      "op": "MSTORE"
    },
    "1343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1347": {
      "op": "DUP3"
    },
    "1348": {
      "op": "ADD"
    },
    "1349": {
      "op": "MSTORE"
    },
    "1350": {
      "op": "SWAP1"
    },
    "1351": {
      "op": "DUP2"
    },
    "1352": {
      "op": "ADD"
    },
    "1353": {
      "op": "PUSH2",
      "value": "0x550"
    },
    "1356": {
      "op": "PUSH2",
      "value": "0x5EF"
    },
    "1359": {
      "op": "JUMP"
    },
    "1360": {
      "op": "JUMPDEST"
    },
    "1361": {
      "op": "DUP2"
    },
    "1362": {
      "op": "MSTORE"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1365": {
      "op": "ADD"
    },
    "1366": {
      "op": "PUSH2",
      "value": "0x55D"
    },
    "1369": {
      "op": "PUSH2",
      "value": "0x602"
    },
    "1372": {
      "op": "JUMP"
    },
    "1373": {
      "op": "JUMPDEST"
    },
    "1374": {
      "op": "DUP2"
    },
    "1375": {
      "op": "MSTORE"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1380": {
      "op": "DUP3"
    },
    "1381": {
      "op": "ADD"
    },
    "1382": {
      "op": "DUP2"
    },
    "1383": {
      "op": "SWAP1"
    },
    "1384": {
      "op": "MSTORE"
    },
    "1385": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1387": {
      "op": "SWAP1"
    },
    "1388": {
      "op": "SWAP2"
    },
    "1389": {
      "op": "ADD"
    },
    "1390": {
      "op": "MSTORE"
    },
    "1391": {
      "op": "SWAP1"
    },
    "1392": {
      "op": "JUMP"
    },
    "1393": {
      "op": "JUMPDEST"
    },
    "1394": {
      "op": "DUP3"
    },
    "1395": {
      "op": "DUP1"
    },
    "1396": {
      "op": "SLOAD"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1399": {
      "op": "DUP2"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1402": {
      "op": "AND"
    },
    "1403": {
      "op": "ISZERO"
    },
    "1404": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1407": {
      "op": "MUL"
    },
    "1408": {
      "op": "SUB"
    },
    "1409": {
      "op": "AND"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1412": {
      "op": "SWAP1"
    },
    "1413": {
      "op": "DIV"
    },
    "1414": {
      "op": "SWAP1"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1417": {
      "op": "MSTORE"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1422": {
      "op": "KECCAK256"
    },
    "1423": {
      "op": "SWAP1"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1426": {
      "op": "ADD"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1429": {
      "op": "SWAP1"
    },
    "1430": {
      "op": "DIV"
    },
    "1431": {
      "op": "DUP2"
    },
    "1432": {
      "op": "ADD"
    },
    "1433": {
      "op": "SWAP3"
    },
    "1434": {
      "op": "DUP3"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1437": {
      "op": "LT"
    },
    "1438": {
      "op": "PUSH2",
      "value": "0x5B2"
    },
    "1441": {
      "op": "JUMPI"
    },
    "1442": {
      "op": "DUP1"
    },
    "1443": {
      "op": "MLOAD"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1446": {
      "op": "NOT"
    },
    "1447": {
      "op": "AND"
    },
    "1448": {
      "op": "DUP4"
    },
    "1449": {
      "op": "DUP1"
    },
    "1450": {
      "op": "ADD"
    },
    "1451": {
      "op": "OR"
    },
    "1452": {
      "op": "DUP6"
    },
    "1453": {
      "op": "SSTORE"
    },
    "1454": {
      "op": "PUSH2",
      "value": "0x5DF"
    },
    "1457": {
      "op": "JUMP"
    },
    "1458": {
      "op": "JUMPDEST"
    },
    "1459": {
      "op": "DUP3"
    },
    "1460": {
      "op": "DUP1"
    },
    "1461": {
      "op": "ADD"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1464": {
      "op": "ADD"
    },
    "1465": {
      "op": "DUP6"
    },
    "1466": {
      "op": "SSTORE"
    },
    "1467": {
      "op": "DUP3"
    },
    "1468": {
      "op": "ISZERO"
    },
    "1469": {
      "op": "PUSH2",
      "value": "0x5DF"
    },
    "1472": {
      "op": "JUMPI"
    },
    "1473": {
      "op": "SWAP2"
    },
    "1474": {
      "op": "DUP3"
    },
    "1475": {
      "op": "ADD"
    },
    "1476": {
      "op": "JUMPDEST"
    },
    "1477": {
      "op": "DUP3"
    },
    "1478": {
      "op": "DUP2"
    },
    "1479": {
      "op": "GT"
    },
    "1480": {
      "op": "ISZERO"
    },
    "1481": {
      "op": "PUSH2",
      "value": "0x5DF"
    },
    "1484": {
      "op": "JUMPI"
    },
    "1485": {
      "op": "DUP3"
    },
    "1486": {
      "op": "MLOAD"
    },
    "1487": {
      "op": "DUP3"
    },
    "1488": {
      "op": "SSTORE"
    },
    "1489": {
      "op": "SWAP2"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1492": {
      "op": "ADD"
    },
    "1493": {
      "op": "SWAP2"
    },
    "1494": {
      "op": "SWAP1"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1497": {
      "op": "ADD"
    },
    "1498": {
      "op": "SWAP1"
    },
    "1499": {
      "op": "PUSH2",
      "value": "0x5C4"
    },
    "1502": {
      "op": "JUMP"
    },
    "1503": {
      "op": "JUMPDEST"
    },
    "1504": {
      "op": "POP"
    },
    "1505": {
      "op": "PUSH2",
      "value": "0x5EB"
    },
    "1508": {
      "op": "SWAP3"
    },
    "1509": {
      "op": "SWAP2"
    },
    "1510": {
      "op": "POP"
    },
    "1511": {
      "op": "PUSH2",
      "value": "0x615"
    },
    "1514": {
      "op": "JUMP"
    },
    "1515": {
      "op": "JUMPDEST"
    },
    "1516": {
      "op": "POP"
    },
    "1517": {
      "op": "SWAP1"
    },
    "1518": {
      "op": "JUMP"
    },
    "1519": {
      "op": "JUMPDEST"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1522": {
      "op": "MLOAD"
    },
    "1523": {
      "op": "DUP1"
    },
    "1524": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1526": {
      "op": "ADD"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1529": {
      "op": "MSTORE"
    },
    "1530": {
      "op": "DUP1"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1533": {
      "op": "DUP2"
    },
    "1534": {
      "op": "MSTORE"
    },
    "1535": {
      "op": "POP"
    },
    "1536": {
      "op": "SWAP1"
    },
    "1537": {
      "op": "JUMP"
    },
    "1538": {
      "op": "JUMPDEST"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1541": {
      "op": "MLOAD"
    },
    "1542": {
      "op": "DUP1"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1545": {
      "op": "ADD"
    },
    "1546": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1548": {
      "op": "MSTORE"
    },
    "1549": {
      "op": "DUP1"
    },
    "1550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1552": {
      "op": "DUP2"
    },
    "1553": {
      "op": "MSTORE"
    },
    "1554": {
      "op": "POP"
    },
    "1555": {
      "op": "SWAP1"
    },
    "1556": {
      "op": "JUMP"
    },
    "1557": {
      "op": "JUMPDEST"
    },
    "1558": {
      "op": "JUMPDEST"
    },
    "1559": {
      "op": "DUP1"
    },
    "1560": {
      "op": "DUP3"
    },
    "1561": {
      "op": "GT"
    },
    "1562": {
      "op": "ISZERO"
    },
    "1563": {
      "op": "PUSH2",
      "value": "0x5EB"
    },
    "1566": {
      "op": "JUMPI"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1569": {
      "op": "DUP2"
    },
    "1570": {
      "op": "SSTORE"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1573": {
      "op": "ADD"
    },
    "1574": {
      "op": "PUSH2",
      "value": "0x616"
    },
    "1577": {
      "op": "JUMP"
    },
    "1578": {
      "op": "JUMPDEST"
    },
    "1579": {
      "op": "DUP1"
    },
    "1580": {
      "op": "MLOAD"
    },
    "1581": {
      "op": "PUSH2",
      "value": "0x635"
    },
    "1584": {
      "op": "DUP2"
    },
    "1585": {
      "op": "PUSH2",
      "value": "0x9CB"
    },
    "1588": {
      "op": "JUMP"
    },
    "1589": {
      "op": "JUMPDEST"
    },
    "1590": {
      "op": "SWAP3"
    },
    "1591": {
      "op": "SWAP2"
    },
    "1592": {
      "op": "POP"
    },
    "1593": {
      "op": "POP"
    },
    "1594": {
      "op": "JUMP"
    },
    "1595": {
      "op": "JUMPDEST"
    },
    "1596": {
      "op": "DUP1"
    },
    "1597": {
      "op": "MLOAD"
    },
    "1598": {
      "op": "DUP1"
    },
    "1599": {
      "op": "ISZERO"
    },
    "1600": {
      "op": "ISZERO"
    },
    "1601": {
      "op": "DUP2"
    },
    "1602": {
      "op": "EQ"
    },
    "1603": {
      "op": "PUSH2",
      "value": "0x635"
    },
    "1606": {
      "op": "JUMPI"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1609": {
      "op": "DUP1"
    },
    "1610": {
      "op": "REVERT"
    },
    "1611": {
      "op": "JUMPDEST"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1614": {
      "op": "DUP3"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1617": {
      "op": "DUP4"
    },
    "1618": {
      "op": "ADD"
    },
    "1619": {
      "op": "SLT"
    },
    "1620": {
      "op": "PUSH2",
      "value": "0x65B"
    },
    "1623": {
      "op": "JUMPI"
    },
    "1624": {
      "op": "DUP1"
    },
    "1625": {
      "op": "DUP2"
    },
    "1626": {
      "op": "REVERT"
    },
    "1627": {
      "op": "JUMPDEST"
    },
    "1628": {
      "op": "DUP2"
    },
    "1629": {
      "op": "CALLDATALOAD"
    },
    "1630": {
      "op": "PUSH2",
      "value": "0x66E"
    },
    "1633": {
      "op": "PUSH2",
      "value": "0x669"
    },
    "1636": {
      "op": "DUP3"
    },
    "1637": {
      "op": "PUSH2",
      "value": "0x977"
    },
    "1640": {
      "op": "JUMP"
    },
    "1641": {
      "op": "JUMPDEST"
    },
    "1642": {
      "op": "PUSH2",
      "value": "0x950"
    },
    "1645": {
      "op": "JUMP"
    },
    "1646": {
      "op": "JUMPDEST"
    },
    "1647": {
      "op": "SWAP2"
    },
    "1648": {
      "op": "POP"
    },
    "1649": {
      "op": "DUP1"
    },
    "1650": {
      "op": "DUP3"
    },
    "1651": {
      "op": "MSTORE"
    },
    "1652": {
      "op": "DUP4"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1655": {
      "op": "DUP3"
    },
    "1656": {
      "op": "DUP6"
    },
    "1657": {
      "op": "ADD"
    },
    "1658": {
      "op": "ADD"
    },
    "1659": {
      "op": "GT"
    },
    "1660": {
      "op": "ISZERO"
    },
    "1661": {
      "op": "PUSH2",
      "value": "0x685"
    },
    "1664": {
      "op": "JUMPI"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1667": {
      "op": "DUP1"
    },
    "1668": {
      "op": "REVERT"
    },
    "1669": {
      "op": "JUMPDEST"
    },
    "1670": {
      "op": "DUP1"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1673": {
      "op": "DUP5"
    },
    "1674": {
      "op": "ADD"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1677": {
      "op": "DUP5"
    },
    "1678": {
      "op": "ADD"
    },
    "1679": {
      "op": "CALLDATACOPY"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1682": {
      "op": "SWAP1"
    },
    "1683": {
      "op": "DUP3"
    },
    "1684": {
      "op": "ADD"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1687": {
      "op": "ADD"
    },
    "1688": {
      "op": "MSTORE"
    },
    "1689": {
      "op": "SWAP3"
    },
    "1690": {
      "op": "SWAP2"
    },
    "1691": {
      "op": "POP"
    },
    "1692": {
      "op": "POP"
    },
    "1693": {
      "op": "JUMP"
    },
    "1694": {
      "op": "JUMPDEST"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1697": {
      "op": "DUP3"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1700": {
      "op": "DUP4"
    },
    "1701": {
      "op": "ADD"
    },
    "1702": {
      "op": "SLT"
    },
    "1703": {
      "op": "PUSH2",
      "value": "0x6AE"
    },
    "1706": {
      "op": "JUMPI"
    },
    "1707": {
      "op": "DUP1"
    },
    "1708": {
      "op": "DUP2"
    },
    "1709": {
      "op": "REVERT"
    },
    "1710": {
      "op": "JUMPDEST"
    },
    "1711": {
      "op": "DUP2"
    },
    "1712": {
      "op": "MLOAD"
    },
    "1713": {
      "op": "PUSH2",
      "value": "0x6BC"
    },
    "1716": {
      "op": "PUSH2",
      "value": "0x669"
    },
    "1719": {
      "op": "DUP3"
    },
    "1720": {
      "op": "PUSH2",
      "value": "0x977"
    },
    "1723": {
      "op": "JUMP"
    },
    "1724": {
      "op": "JUMPDEST"
    },
    "1725": {
      "op": "SWAP2"
    },
    "1726": {
      "op": "POP"
    },
    "1727": {
      "op": "DUP1"
    },
    "1728": {
      "op": "DUP3"
    },
    "1729": {
      "op": "MSTORE"
    },
    "1730": {
      "op": "DUP4"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1733": {
      "op": "DUP3"
    },
    "1734": {
      "op": "DUP6"
    },
    "1735": {
      "op": "ADD"
    },
    "1736": {
      "op": "ADD"
    },
    "1737": {
      "op": "GT"
    },
    "1738": {
      "op": "ISZERO"
    },
    "1739": {
      "op": "PUSH2",
      "value": "0x6D3"
    },
    "1742": {
      "op": "JUMPI"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1745": {
      "op": "DUP1"
    },
    "1746": {
      "op": "REVERT"
    },
    "1747": {
      "op": "JUMPDEST"
    },
    "1748": {
      "op": "PUSH2",
      "value": "0x6E4"
    },
    "1751": {
      "op": "DUP2"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1754": {
      "op": "DUP5"
    },
    "1755": {
      "op": "ADD"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1758": {
      "op": "DUP7"
    },
    "1759": {
      "op": "ADD"
    },
    "1760": {
      "op": "PUSH2",
      "value": "0x99B"
    },
    "1763": {
      "op": "JUMP"
    },
    "1764": {
      "op": "JUMPDEST"
    },
    "1765": {
      "op": "POP"
    },
    "1766": {
      "op": "SWAP3"
    },
    "1767": {
      "op": "SWAP2"
    },
    "1768": {
      "op": "POP"
    },
    "1769": {
      "op": "POP"
    },
    "1770": {
      "op": "JUMP"
    },
    "1771": {
      "op": "JUMPDEST"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1776": {
      "op": "DUP3"
    },
    "1777": {
      "op": "DUP5"
    },
    "1778": {
      "op": "SUB"
    },
    "1779": {
      "op": "SLT"
    },
    "1780": {
      "op": "ISZERO"
    },
    "1781": {
      "op": "PUSH2",
      "value": "0x6FC"
    },
    "1784": {
      "op": "JUMPI"
    },
    "1785": {
      "op": "DUP1"
    },
    "1786": {
      "op": "DUP2"
    },
    "1787": {
      "op": "REVERT"
    },
    "1788": {
      "op": "JUMPDEST"
    },
    "1789": {
      "op": "PUSH2",
      "value": "0x706"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1794": {
      "op": "PUSH2",
      "value": "0x950"
    },
    "1797": {
      "op": "JUMP"
    },
    "1798": {
      "op": "JUMPDEST"
    },
    "1799": {
      "op": "SWAP1"
    },
    "1800": {
      "op": "POP"
    },
    "1801": {
      "op": "DUP2"
    },
    "1802": {
      "op": "MLOAD"
    },
    "1803": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1812": {
      "op": "DUP2"
    },
    "1813": {
      "op": "GT"
    },
    "1814": {
      "op": "ISZERO"
    },
    "1815": {
      "op": "PUSH2",
      "value": "0x71F"
    },
    "1818": {
      "op": "JUMPI"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1821": {
      "op": "DUP1"
    },
    "1822": {
      "op": "REVERT"
    },
    "1823": {
      "op": "JUMPDEST"
    },
    "1824": {
      "op": "PUSH2",
      "value": "0x72B"
    },
    "1827": {
      "op": "DUP5"
    },
    "1828": {
      "op": "DUP3"
    },
    "1829": {
      "op": "DUP6"
    },
    "1830": {
      "op": "ADD"
    },
    "1831": {
      "op": "PUSH2",
      "value": "0x69E"
    },
    "1834": {
      "op": "JUMP"
    },
    "1835": {
      "op": "JUMPDEST"
    },
    "1836": {
      "op": "DUP3"
    },
    "1837": {
      "op": "MSTORE"
    },
    "1838": {
      "op": "POP"
    },
    "1839": {
      "op": "SWAP3"
    },
    "1840": {
      "op": "SWAP2"
    },
    "1841": {
      "op": "POP"
    },
    "1842": {
      "op": "POP"
    },
    "1843": {
      "op": "JUMP"
    },
    "1844": {
      "op": "JUMPDEST"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1849": {
      "op": "DUP3"
    },
    "1850": {
      "op": "DUP5"
    },
    "1851": {
      "op": "SUB"
    },
    "1852": {
      "op": "SLT"
    },
    "1853": {
      "op": "ISZERO"
    },
    "1854": {
      "op": "PUSH2",
      "value": "0x745"
    },
    "1857": {
      "op": "JUMPI"
    },
    "1858": {
      "op": "DUP1"
    },
    "1859": {
      "op": "DUP2"
    },
    "1860": {
      "op": "REVERT"
    },
    "1861": {
      "op": "JUMPDEST"
    },
    "1862": {
      "op": "PUSH2",
      "value": "0x74F"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1867": {
      "op": "PUSH2",
      "value": "0x950"
    },
    "1870": {
      "op": "JUMP"
    },
    "1871": {
      "op": "JUMPDEST"
    },
    "1872": {
      "op": "SWAP2"
    },
    "1873": {
      "op": "MLOAD"
    },
    "1874": {
      "op": "DUP3"
    },
    "1875": {
      "op": "MSTORE"
    },
    "1876": {
      "op": "POP"
    },
    "1877": {
      "op": "SWAP2"
    },
    "1878": {
      "op": "SWAP1"
    },
    "1879": {
      "op": "POP"
    },
    "1880": {
      "op": "JUMP"
    },
    "1881": {
      "op": "JUMPDEST"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1884": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1886": {
      "op": "DUP3"
    },
    "1887": {
      "op": "DUP5"
    },
    "1888": {
      "op": "SUB"
    },
    "1889": {
      "op": "SLT"
    },
    "1890": {
      "op": "ISZERO"
    },
    "1891": {
      "op": "PUSH2",
      "value": "0x76A"
    },
    "1894": {
      "op": "JUMPI"
    },
    "1895": {
      "op": "DUP1"
    },
    "1896": {
      "op": "DUP2"
    },
    "1897": {
      "op": "REVERT"
    },
    "1898": {
      "op": "JUMPDEST"
    },
    "1899": {
      "op": "DUP2"
    },
    "1900": {
      "op": "CALLDATALOAD"
    },
    "1901": {
      "op": "PUSH2",
      "value": "0x775"
    },
    "1904": {
      "op": "DUP2"
    },
    "1905": {
      "op": "PUSH2",
      "value": "0x9CB"
    },
    "1908": {
      "op": "JUMP"
    },
    "1909": {
      "op": "JUMPDEST"
    },
    "1910": {
      "op": "SWAP4"
    },
    "1911": {
      "op": "SWAP3"
    },
    "1912": {
      "op": "POP"
    },
    "1913": {
      "op": "POP"
    },
    "1914": {
      "op": "POP"
    },
    "1915": {
      "op": "JUMP"
    },
    "1916": {
      "op": "JUMPDEST"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1919": {
      "op": "DUP1"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1924": {
      "op": "DUP5"
    },
    "1925": {
      "op": "DUP7"
    },
    "1926": {
      "op": "SUB"
    },
    "1927": {
      "op": "SLT"
    },
    "1928": {
      "op": "ISZERO"
    },
    "1929": {
      "op": "PUSH2",
      "value": "0x790"
    },
    "1932": {
      "op": "JUMPI"
    },
    "1933": {
      "op": "DUP2"
    },
    "1934": {
      "op": "DUP3"
    },
    "1935": {
      "op": "REVERT"
    },
    "1936": {
      "op": "JUMPDEST"
    },
    "1937": {
      "op": "DUP4"
    },
    "1938": {
      "op": "CALLDATALOAD"
    },
    "1939": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1948": {
      "op": "DUP1"
    },
    "1949": {
      "op": "DUP3"
    },
    "1950": {
      "op": "GT"
    },
    "1951": {
      "op": "ISZERO"
    },
    "1952": {
      "op": "PUSH2",
      "value": "0x7A7"
    },
    "1955": {
      "op": "JUMPI"
    },
    "1956": {
      "op": "DUP4"
    },
    "1957": {
      "op": "DUP5"
    },
    "1958": {
      "op": "REVERT"
    },
    "1959": {
      "op": "JUMPDEST"
    },
    "1960": {
      "op": "PUSH2",
      "value": "0x7B3"
    },
    "1963": {
      "op": "DUP8"
    },
    "1964": {
      "op": "DUP4"
    },
    "1965": {
      "op": "DUP9"
    },
    "1966": {
      "op": "ADD"
    },
    "1967": {
      "op": "PUSH2",
      "value": "0x64B"
    },
    "1970": {
      "op": "JUMP"
    },
    "1971": {
      "op": "JUMPDEST"
    },
    "1972": {
      "op": "SWAP5"
    },
    "1973": {
      "op": "POP"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1976": {
      "op": "DUP7"
    },
    "1977": {
      "op": "ADD"
    },
    "1978": {
      "op": "CALLDATALOAD"
    },
    "1979": {
      "op": "SWAP2"
    },
    "1980": {
      "op": "POP"
    },
    "1981": {
      "op": "PUSH2",
      "value": "0x7C5"
    },
    "1984": {
      "op": "DUP3"
    },
    "1985": {
      "op": "PUSH2",
      "value": "0x9CB"
    },
    "1988": {
      "op": "JUMP"
    },
    "1989": {
      "op": "JUMPDEST"
    },
    "1990": {
      "op": "SWAP1"
    },
    "1991": {
      "op": "SWAP3"
    },
    "1992": {
      "op": "POP"
    },
    "1993": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1995": {
      "op": "DUP6"
    },
    "1996": {
      "op": "ADD"
    },
    "1997": {
      "op": "CALLDATALOAD"
    },
    "1998": {
      "op": "SWAP1"
    },
    "1999": {
      "op": "DUP1"
    },
    "2000": {
      "op": "DUP3"
    },
    "2001": {
      "op": "GT"
    },
    "2002": {
      "op": "ISZERO"
    },
    "2003": {
      "op": "PUSH2",
      "value": "0x7DA"
    },
    "2006": {
      "op": "JUMPI"
    },
    "2007": {
      "op": "DUP3"
    },
    "2008": {
      "op": "DUP4"
    },
    "2009": {
      "op": "REVERT"
    },
    "2010": {
      "op": "JUMPDEST"
    },
    "2011": {
      "op": "POP"
    },
    "2012": {
      "op": "PUSH2",
      "value": "0x7E7"
    },
    "2015": {
      "op": "DUP7"
    },
    "2016": {
      "op": "DUP3"
    },
    "2017": {
      "op": "DUP8"
    },
    "2018": {
      "op": "ADD"
    },
    "2019": {
      "op": "PUSH2",
      "value": "0x64B"
    },
    "2022": {
      "op": "JUMP"
    },
    "2023": {
      "op": "JUMPDEST"
    },
    "2024": {
      "op": "SWAP2"
    },
    "2025": {
      "op": "POP"
    },
    "2026": {
      "op": "POP"
    },
    "2027": {
      "op": "SWAP3"
    },
    "2028": {
      "op": "POP"
    },
    "2029": {
      "op": "SWAP3"
    },
    "2030": {
      "op": "POP"
    },
    "2031": {
      "op": "SWAP3"
    },
    "2032": {
      "op": "JUMP"
    },
    "2033": {
      "op": "JUMPDEST"
    },
    "2034": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2036": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2038": {
      "op": "DUP3"
    },
    "2039": {
      "op": "DUP5"
    },
    "2040": {
      "op": "SUB"
    },
    "2041": {
      "op": "SLT"
    },
    "2042": {
      "op": "ISZERO"
    },
    "2043": {
      "op": "PUSH2",
      "value": "0x802"
    },
    "2046": {
      "op": "JUMPI"
    },
    "2047": {
      "op": "DUP1"
    },
    "2048": {
      "op": "DUP2"
    },
    "2049": {
      "op": "REVERT"
    },
    "2050": {
      "op": "JUMPDEST"
    },
    "2051": {
      "op": "DUP2"
    },
    "2052": {
      "op": "MLOAD"
    },
    "2053": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2062": {
      "op": "DUP1"
    },
    "2063": {
      "op": "DUP3"
    },
    "2064": {
      "op": "GT"
    },
    "2065": {
      "op": "ISZERO"
    },
    "2066": {
      "op": "PUSH2",
      "value": "0x819"
    },
    "2069": {
      "op": "JUMPI"
    },
    "2070": {
      "op": "DUP3"
    },
    "2071": {
      "op": "DUP4"
    },
    "2072": {
      "op": "REVERT"
    },
    "2073": {
      "op": "JUMPDEST"
    },
    "2074": {
      "op": "SWAP1"
    },
    "2075": {
      "op": "DUP4"
    },
    "2076": {
      "op": "ADD"
    },
    "2077": {
      "op": "SWAP1"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2080": {
      "op": "DUP3"
    },
    "2081": {
      "op": "DUP7"
    },
    "2082": {
      "op": "SUB"
    },
    "2083": {
      "op": "SLT"
    },
    "2084": {
      "op": "ISZERO"
    },
    "2085": {
      "op": "PUSH2",
      "value": "0x82C"
    },
    "2088": {
      "op": "JUMPI"
    },
    "2089": {
      "op": "DUP3"
    },
    "2090": {
      "op": "DUP4"
    },
    "2091": {
      "op": "REVERT"
    },
    "2092": {
      "op": "JUMPDEST"
    },
    "2093": {
      "op": "PUSH2",
      "value": "0x836"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2098": {
      "op": "PUSH2",
      "value": "0x950"
    },
    "2101": {
      "op": "JUMP"
    },
    "2102": {
      "op": "JUMPDEST"
    },
    "2103": {
      "op": "DUP3"
    },
    "2104": {
      "op": "MLOAD"
    },
    "2105": {
      "op": "DUP3"
    },
    "2106": {
      "op": "DUP2"
    },
    "2107": {
      "op": "GT"
    },
    "2108": {
      "op": "ISZERO"
    },
    "2109": {
      "op": "PUSH2",
      "value": "0x844"
    },
    "2112": {
      "op": "JUMPI"
    },
    "2113": {
      "op": "DUP5"
    },
    "2114": {
      "op": "DUP6"
    },
    "2115": {
      "op": "REVERT"
    },
    "2116": {
      "op": "JUMPDEST"
    },
    "2117": {
      "op": "PUSH2",
      "value": "0x850"
    },
    "2120": {
      "op": "DUP8"
    },
    "2121": {
      "op": "DUP3"
    },
    "2122": {
      "op": "DUP7"
    },
    "2123": {
      "op": "ADD"
    },
    "2124": {
      "op": "PUSH2",
      "value": "0x69E"
    },
    "2127": {
      "op": "JUMP"
    },
    "2128": {
      "op": "JUMPDEST"
    },
    "2129": {
      "op": "DUP3"
    },
    "2130": {
      "op": "MSTORE"
    },
    "2131": {
      "op": "POP"
    },
    "2132": {
      "op": "PUSH2",
      "value": "0x860"
    },
    "2135": {
      "op": "DUP7"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2138": {
      "op": "DUP6"
    },
    "2139": {
      "op": "ADD"
    },
    "2140": {
      "op": "PUSH2",
      "value": "0x62A"
    },
    "2143": {
      "op": "JUMP"
    },
    "2144": {
      "op": "JUMPDEST"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2147": {
      "op": "DUP3"
    },
    "2148": {
      "op": "ADD"
    },
    "2149": {
      "op": "MSTORE"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2152": {
      "op": "DUP4"
    },
    "2153": {
      "op": "ADD"
    },
    "2154": {
      "op": "MLOAD"
    },
    "2155": {
      "op": "DUP3"
    },
    "2156": {
      "op": "DUP2"
    },
    "2157": {
      "op": "GT"
    },
    "2158": {
      "op": "ISZERO"
    },
    "2159": {
      "op": "PUSH2",
      "value": "0x876"
    },
    "2162": {
      "op": "JUMPI"
    },
    "2163": {
      "op": "DUP5"
    },
    "2164": {
      "op": "DUP6"
    },
    "2165": {
      "op": "REVERT"
    },
    "2166": {
      "op": "JUMPDEST"
    },
    "2167": {
      "op": "PUSH2",
      "value": "0x882"
    },
    "2170": {
      "op": "DUP8"
    },
    "2171": {
      "op": "DUP3"
    },
    "2172": {
      "op": "DUP7"
    },
    "2173": {
      "op": "ADD"
    },
    "2174": {
      "op": "PUSH2",
      "value": "0x6EB"
    },
    "2177": {
      "op": "JUMP"
    },
    "2178": {
      "op": "JUMPDEST"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2181": {
      "op": "DUP4"
    },
    "2182": {
      "op": "ADD"
    },
    "2183": {
      "op": "MSTORE"
    },
    "2184": {
      "op": "POP"
    },
    "2185": {
      "op": "PUSH2",
      "value": "0x895"
    },
    "2188": {
      "op": "DUP7"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2191": {
      "op": "DUP6"
    },
    "2192": {
      "op": "ADD"
    },
    "2193": {
      "op": "PUSH2",
      "value": "0x734"
    },
    "2196": {
      "op": "JUMP"
    },
    "2197": {
      "op": "JUMPDEST"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2200": {
      "op": "DUP3"
    },
    "2201": {
      "op": "ADD"
    },
    "2202": {
      "op": "MSTORE"
    },
    "2203": {
      "op": "PUSH2",
      "value": "0x8A7"
    },
    "2206": {
      "op": "DUP7"
    },
    "2207": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2209": {
      "op": "DUP6"
    },
    "2210": {
      "op": "ADD"
    },
    "2211": {
      "op": "PUSH2",
      "value": "0x63B"
    },
    "2214": {
      "op": "JUMP"
    },
    "2215": {
      "op": "JUMPDEST"
    },
    "2216": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2218": {
      "op": "DUP3"
    },
    "2219": {
      "op": "ADD"
    },
    "2220": {
      "op": "MSTORE"
    },
    "2221": {
      "op": "PUSH2",
      "value": "0x8B9"
    },
    "2224": {
      "op": "DUP7"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2227": {
      "op": "DUP6"
    },
    "2228": {
      "op": "ADD"
    },
    "2229": {
      "op": "PUSH2",
      "value": "0x63B"
    },
    "2232": {
      "op": "JUMP"
    },
    "2233": {
      "op": "JUMPDEST"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2236": {
      "op": "DUP3"
    },
    "2237": {
      "op": "ADD"
    },
    "2238": {
      "op": "MSTORE"
    },
    "2239": {
      "op": "SWAP6"
    },
    "2240": {
      "op": "SWAP5"
    },
    "2241": {
      "op": "POP"
    },
    "2242": {
      "op": "POP"
    },
    "2243": {
      "op": "POP"
    },
    "2244": {
      "op": "POP"
    },
    "2245": {
      "op": "POP"
    },
    "2246": {
      "op": "JUMP"
    },
    "2247": {
      "op": "JUMPDEST"
    },
    "2248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2250": {
      "op": "DUP2"
    },
    "2251": {
      "op": "MLOAD"
    },
    "2252": {
      "op": "DUP1"
    },
    "2253": {
      "op": "DUP5"
    },
    "2254": {
      "op": "MSTORE"
    },
    "2255": {
      "op": "PUSH2",
      "value": "0x8DF"
    },
    "2258": {
      "op": "DUP2"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2261": {
      "op": "DUP7"
    },
    "2262": {
      "op": "ADD"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2265": {
      "op": "DUP7"
    },
    "2266": {
      "op": "ADD"
    },
    "2267": {
      "op": "PUSH2",
      "value": "0x99B"
    },
    "2270": {
      "op": "JUMP"
    },
    "2271": {
      "op": "JUMPDEST"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2274": {
      "op": "ADD"
    },
    "2275": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2277": {
      "op": "NOT"
    },
    "2278": {
      "op": "AND"
    },
    "2279": {
      "op": "SWAP3"
    },
    "2280": {
      "op": "SWAP1"
    },
    "2281": {
      "op": "SWAP3"
    },
    "2282": {
      "op": "ADD"
    },
    "2283": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2285": {
      "op": "ADD"
    },
    "2286": {
      "op": "SWAP3"
    },
    "2287": {
      "op": "SWAP2"
    },
    "2288": {
      "op": "POP"
    },
    "2289": {
      "op": "POP"
    },
    "2290": {
      "op": "JUMP"
    },
    "2291": {
      "op": "JUMPDEST"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2298": {
      "op": "SHL"
    },
    "2299": {
      "op": "SUB"
    },
    "2300": {
      "op": "SWAP2"
    },
    "2301": {
      "op": "SWAP1"
    },
    "2302": {
      "op": "SWAP2"
    },
    "2303": {
      "op": "AND"
    },
    "2304": {
      "op": "DUP2"
    },
    "2305": {
      "op": "MSTORE"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2308": {
      "op": "ADD"
    },
    "2309": {
      "op": "SWAP1"
    },
    "2310": {
      "op": "JUMP"
    },
    "2311": {
      "op": "JUMPDEST"
    },
    "2312": {
      "op": "SWAP1"
    },
    "2313": {
      "op": "ISZERO"
    },
    "2314": {
      "op": "ISZERO"
    },
    "2315": {
      "op": "DUP2"
    },
    "2316": {
      "op": "MSTORE"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2319": {
      "op": "ADD"
    },
    "2320": {
      "op": "SWAP1"
    },
    "2321": {
      "op": "JUMP"
    },
    "2322": {
      "op": "JUMPDEST"
    },
    "2323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2325": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2327": {
      "op": "DUP3"
    },
    "2328": {
      "op": "MSTORE"
    },
    "2329": {
      "op": "PUSH2",
      "value": "0x925"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2334": {
      "op": "DUP4"
    },
    "2335": {
      "op": "ADD"
    },
    "2336": {
      "op": "DUP7"
    },
    "2337": {
      "op": "PUSH2",
      "value": "0x8C7"
    },
    "2340": {
      "op": "JUMP"
    },
    "2341": {
      "op": "JUMPDEST"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2346": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2348": {
      "op": "SHL"
    },
    "2349": {
      "op": "SUB"
    },
    "2350": {
      "op": "DUP6"
    },
    "2351": {
      "op": "AND"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2354": {
      "op": "DUP5"
    },
    "2355": {
      "op": "ADD"
    },
    "2356": {
      "op": "MSTORE"
    },
    "2357": {
      "op": "DUP3"
    },
    "2358": {
      "op": "DUP2"
    },
    "2359": {
      "op": "SUB"
    },
    "2360": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2362": {
      "op": "DUP5"
    },
    "2363": {
      "op": "ADD"
    },
    "2364": {
      "op": "MSTORE"
    },
    "2365": {
      "op": "PUSH2",
      "value": "0x946"
    },
    "2368": {
      "op": "DUP2"
    },
    "2369": {
      "op": "DUP6"
    },
    "2370": {
      "op": "PUSH2",
      "value": "0x8C7"
    },
    "2373": {
      "op": "JUMP"
    },
    "2374": {
      "op": "JUMPDEST"
    },
    "2375": {
      "op": "SWAP7"
    },
    "2376": {
      "op": "SWAP6"
    },
    "2377": {
      "op": "POP"
    },
    "2378": {
      "op": "POP"
    },
    "2379": {
      "op": "POP"
    },
    "2380": {
      "op": "POP"
    },
    "2381": {
      "op": "POP"
    },
    "2382": {
      "op": "POP"
    },
    "2383": {
      "op": "JUMP"
    },
    "2384": {
      "op": "JUMPDEST"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2387": {
      "op": "MLOAD"
    },
    "2388": {
      "op": "DUP2"
    },
    "2389": {
      "op": "DUP2"
    },
    "2390": {
      "op": "ADD"
    },
    "2391": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2400": {
      "op": "DUP2"
    },
    "2401": {
      "op": "GT"
    },
    "2402": {
      "op": "DUP3"
    },
    "2403": {
      "op": "DUP3"
    },
    "2404": {
      "op": "LT"
    },
    "2405": {
      "op": "OR"
    },
    "2406": {
      "op": "ISZERO"
    },
    "2407": {
      "op": "PUSH2",
      "value": "0x96F"
    },
    "2410": {
      "op": "JUMPI"
    },
    "2411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2413": {
      "op": "DUP1"
    },
    "2414": {
      "op": "REVERT"
    },
    "2415": {
      "op": "JUMPDEST"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2418": {
      "op": "MSTORE"
    },
    "2419": {
      "op": "SWAP2"
    },
    "2420": {
      "op": "SWAP1"
    },
    "2421": {
      "op": "POP"
    },
    "2422": {
      "op": "JUMP"
    },
    "2423": {
      "op": "JUMPDEST"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2426": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2435": {
      "op": "DUP3"
    },
    "2436": {
      "op": "GT"
    },
    "2437": {
      "op": "ISZERO"
    },
    "2438": {
      "op": "PUSH2",
      "value": "0x98D"
    },
    "2441": {
      "op": "JUMPI"
    },
    "2442": {
      "op": "DUP1"
    },
    "2443": {
      "op": "DUP2"
    },
    "2444": {
      "op": "REVERT"
    },
    "2445": {
      "op": "JUMPDEST"
    },
    "2446": {
      "op": "POP"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2449": {
      "op": "ADD"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2452": {
      "op": "NOT"
    },
    "2453": {
      "op": "AND"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2456": {
      "op": "ADD"
    },
    "2457": {
      "op": "SWAP1"
    },
    "2458": {
      "op": "JUMP"
    },
    "2459": {
      "op": "JUMPDEST"
    },
    "2460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2462": {
      "op": "JUMPDEST"
    },
    "2463": {
      "op": "DUP4"
    },
    "2464": {
      "op": "DUP2"
    },
    "2465": {
      "op": "LT"
    },
    "2466": {
      "op": "ISZERO"
    },
    "2467": {
      "op": "PUSH2",
      "value": "0x9B6"
    },
    "2470": {
      "op": "JUMPI"
    },
    "2471": {
      "op": "DUP2"
    },
    "2472": {
      "op": "DUP2"
    },
    "2473": {
      "op": "ADD"
    },
    "2474": {
      "op": "MLOAD"
    },
    "2475": {
      "op": "DUP4"
    },
    "2476": {
      "op": "DUP3"
    },
    "2477": {
      "op": "ADD"
    },
    "2478": {
      "op": "MSTORE"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2481": {
      "op": "ADD"
    },
    "2482": {
      "op": "PUSH2",
      "value": "0x99E"
    },
    "2485": {
      "op": "JUMP"
    },
    "2486": {
      "op": "JUMPDEST"
    },
    "2487": {
      "op": "DUP4"
    },
    "2488": {
      "op": "DUP2"
    },
    "2489": {
      "op": "GT"
    },
    "2490": {
      "op": "ISZERO"
    },
    "2491": {
      "op": "PUSH2",
      "value": "0x9C5"
    },
    "2494": {
      "op": "JUMPI"
    },
    "2495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2497": {
      "op": "DUP5"
    },
    "2498": {
      "op": "DUP5"
    },
    "2499": {
      "op": "ADD"
    },
    "2500": {
      "op": "MSTORE"
    },
    "2501": {
      "op": "JUMPDEST"
    },
    "2502": {
      "op": "POP"
    },
    "2503": {
      "op": "POP"
    },
    "2504": {
      "op": "POP"
    },
    "2505": {
      "op": "POP"
    },
    "2506": {
      "op": "JUMP"
    },
    "2507": {
      "op": "JUMPDEST"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2512": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2514": {
      "op": "SHL"
    },
    "2515": {
      "op": "SUB"
    },
    "2516": {
      "op": "DUP2"
    },
    "2517": {
      "op": "AND"
    },
    "2518": {
      "op": "DUP2"
    },
    "2519": {
      "op": "EQ"
    },
    "2520": {
      "op": "PUSH2",
      "value": "0x477"
    },
    "2523": {
      "op": "JUMPI"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2526": {
      "op": "DUP1"
    },
    "2527": {
      "op": "REVERT"
    }
  },
  "sha1": "44b8f83630eab2d267e53b0cce929fb65c8fc094",
  "source": "pragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"./Ownable.sol\";\n\n// NFT type define \nlibrary NftLibs {\n    /*\n     *  Store a reference to an image, stored in IPFS, in an ethereum smart contract.\n     */\n    struct ImageInfo {\n        string ipfsInfo;\n    }\n\n    struct Price {\n        uint price;\n    }\n\n    struct NftInfo {\n        string nftName;\n        address nftProducer;\n        ImageInfo imageInfo;\n        Price price;\n        bool hasStarted;\n        bool publicEnabledShow;\n    }\n\n    modifier hasMandotaryFields(string memory _name, address _address, string memory _ipfsInfo) {\n        bytes memory tempEmptyNameStringTest = bytes(_name); \n        bytes memory tempEmptyImageStringTest = bytes(_ipfsInfo); \n\n        require(tempEmptyNameStringTest.length > 0 \n                && tempEmptyImageStringTest.length > 0\n                && _address != address(0));\n\n        _;\n    }\n\n    function createNftInfo(string memory _name, address _address, string memory _ipfsInfo) \n            public hasMandotaryFields(_name, _address, _ipfsInfo) \n            returns (NftInfo memory) {\n        NftInfo memory nftInfo = NftInfo(_name, _address, ImageInfo(_ipfsInfo), Price(0), false, false);\n        return nftInfo;\n    }\n}\n\ncontract NftCollection is Ownable {\n    /*\n     * Store all NFT for each address has.\n     * Stores the number of tokens each address has\n     */\n    mapping (address => NftLibs.NftInfo[]) AddressToNftInfos;\n\n    // Stores the maximum number of tokens that you wanna sell.\n    uint32 maxSupply = 0;\n\n    // Stores the remaining mints.\n    uint32 numberOfMints = 0;\n\n    uint gasPay = 0.0001 ether;\n\n    function createToken(string memory _name, address _address, string memory _ipfsInfo) public {\n        NftLibs.NftInfo memory nftInfo = NftLibs.createNftInfo(_name, _address, _ipfsInfo);\n        AddressToNftInfos[_address].push(nftInfo);\n        maxSupply ++;\n    }\n\n    function getNftInfo() private view hasMinted returns(NftLibs.NftInfo storage) {\n        NftLibs.NftInfo[] storage nftInfos = AddressToNftInfos[msg.sender];\n\n        // TODO: Fix bellow.\n        return nftInfos[0];\n    }\n\n    modifier hasMinted() {\n        require(AddressToNftInfos[msg.sender].length > 0);\n        _;\n    }\n\n    function withdraw() external onlyOwner {\n        address payable _owner = address(uint160(owner()));\n        _owner.transfer(address(this).balance);\n    }\n\n    function safeMint() external payable hasMinted() {\n        // Check to make sure gasPay ether was sent to the function call:\n        require(msg.value == gasPay);\n\n        // After get GAS could convert token to Non-Fungible token :)))\n    }\n\n    // Display status if sale has started.\n    function getSaleStarted() public view returns (bool) {\n        NftLibs.NftInfo storage nftInfo = getNftInfo();\n        return nftInfo.hasStarted;\n    }\n\n    // Once public enabled show it and enable mint button for all\n    function getOpenToPublic() public view returns (bool) {\n        NftLibs.NftInfo storage nftInfo = getNftInfo();\n        return nftInfo.publicEnabledShow;\n    }\n\n    // TODO: Implement function.\n    function getOnWhiteList(address) public pure returns (bool) {\n        return true;\n    }\n}",
  "sourceMap": "1246:1963:0:-:0;;;1523:20;;;-1:-1:-1;;;;;;1585:24:0;;;1630:12;1616:26;;1246:1963;;;;;;;;;-1:-1:-1;501:6:1;:19;;-1:-1:-1;;;;;;501:19:1;510:10;501:19;;;;531:40;;-1:-1:-1;;;;;564:6:1;;;;;501;531:40;;501:6;;531:40;1246:1963:0;;;;;;",
  "sourcePath": "contracts/NftCollection.sol",
  "type": "contract"
}